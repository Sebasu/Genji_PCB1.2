

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Aug 26 18:42:39 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F18326
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     8                           	psect	idataBANK5,global,class=CODE,delta=2,noexec
     9                           	psect	idataBANK6,global,class=CODE,delta=2,noexec
    10                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
    12                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    23                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    24                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,noexec
    25                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1,noexec
    26                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,noexec
    27                           	psect	inittext,global,class=CODE,delta=2
    28                           	psect	clrtext,global,class=CODE,delta=2
    29                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    30                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    31                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    32                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    33                           	psect	text1,local,class=CODE,merge=1,delta=2
    34                           	psect	text2,local,class=CODE,merge=1,delta=2
    35                           	psect	text3,local,class=CODE,merge=1,delta=2
    36                           	psect	text4,local,class=CODE,merge=1,delta=2
    37                           	psect	text5,local,class=CODE,merge=1,delta=2
    38                           	psect	text6,local,class=CODE,merge=1,delta=2
    39                           	psect	text7,local,class=CODE,merge=1,delta=2
    40                           	psect	text8,local,class=CODE,merge=1,delta=2
    41                           	psect	text9,local,class=CODE,merge=1,delta=2
    42                           	psect	text10,local,class=CODE,merge=1,delta=2
    43                           	psect	text11,local,class=CODE,merge=1,delta=2
    44                           	psect	text12,local,class=CODE,merge=1,delta=2
    45                           	psect	text13,local,class=CODE,merge=1,delta=2
    46                           	psect	text14,local,class=CODE,merge=1,delta=2
    47                           	psect	text15,local,class=CODE,merge=1,delta=2
    48                           	psect	text16,local,class=CODE,merge=1,delta=2
    49                           	psect	text17,local,class=CODE,merge=1,delta=2
    50                           	psect	text18,local,class=CODE,merge=1,delta=2
    51                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text20,local,class=CODE,merge=1,delta=2
    53                           	psect	text21,local,class=CODE,merge=1,delta=2
    54                           	psect	text22,local,class=CODE,merge=1,delta=2
    55                           	psect	text23,local,class=CODE,merge=1,delta=2
    56                           	psect	text24,local,class=CODE,merge=1,delta=2
    57                           	psect	text25,local,class=CODE,merge=1,delta=2
    58                           	psect	text26,local,class=CODE,merge=1,delta=2
    59                           	psect	text27,local,class=CODE,merge=1,delta=2
    60                           	psect	text28,local,class=CODE,merge=1,delta=2
    61                           	psect	text29,local,class=CODE,merge=1,delta=2
    62                           	psect	text30,local,class=CODE,merge=1,delta=2
    63                           	psect	text31,local,class=CODE,merge=1,delta=2
    64                           	psect	text32,local,class=CODE,merge=1,delta=2
    65                           	psect	text33,local,class=CODE,merge=1,delta=2
    66                           	psect	text34,local,class=CODE,merge=1,delta=2
    67                           	psect	text35,local,class=CODE,merge=1,delta=2
    68                           	psect	text36,local,class=CODE,merge=1,delta=2
    69                           	psect	text37,local,class=CODE,merge=1,delta=2
    70                           	psect	text38,local,class=CODE,merge=1,delta=2
    71                           	psect	text39,local,class=CODE,merge=1,delta=2
    72                           	psect	text40,local,class=CODE,merge=1,delta=2
    73                           	psect	text41,local,class=CODE,merge=1,delta=2
    74                           	psect	text42,local,class=CODE,merge=1,delta=2
    75                           	psect	text43,local,class=CODE,merge=1,delta=2
    76                           	psect	text44,local,class=CODE,merge=1,delta=2
    77                           	psect	text45,local,class=CODE,merge=1,delta=2
    78                           	psect	text46,local,class=CODE,merge=1,delta=2
    79                           	psect	text47,local,class=CODE,merge=1,delta=2
    80                           	psect	text48,local,class=CODE,merge=1,delta=2
    81                           	psect	text49,local,class=CODE,merge=1,delta=2
    82                           	psect	text50,local,class=CODE,merge=1,delta=2
    83                           	psect	text51,local,class=CODE,merge=1,delta=2
    84                           	psect	text52,local,class=CODE,merge=1,delta=2
    85                           	psect	text53,local,class=CODE,merge=1,delta=2
    86                           	psect	text54,local,class=CODE,merge=1,delta=2
    87                           	psect	text55,local,class=CODE,merge=1,delta=2
    88                           	psect	text56,local,class=CODE,merge=1,delta=2
    89                           	psect	text57,local,class=CODE,merge=1,delta=2
    90                           	psect	text58,local,class=CODE,merge=1,delta=2
    91                           	psect	text59,local,class=CODE,merge=1,delta=2
    92                           	psect	text60,local,class=CODE,merge=1,delta=2
    93                           	psect	text61,local,class=CODE,merge=1,delta=2
    94                           	psect	text62,local,class=CODE,merge=1,delta=2
    95                           	psect	text63,local,class=CODE,merge=1,delta=2
    96                           	psect	text64,local,class=CODE,merge=1,delta=2
    97                           	psect	text65,local,class=CODE,merge=1,delta=2
    98                           	psect	text66,local,class=CODE,merge=1,delta=2
    99                           	psect	text67,local,class=CODE,merge=1,delta=2
   100                           	psect	text68,local,class=CODE,merge=1,delta=2
   101                           	psect	text69,local,class=CODE,merge=1,delta=2
   102                           	psect	text70,local,class=CODE,merge=1,delta=2
   103                           	psect	text71,local,class=CODE,merge=1,delta=2
   104                           	psect	text72,local,class=CODE,merge=1,delta=2
   105                           	psect	text73,local,class=CODE,merge=1,delta=2
   106                           	psect	intentry,global,class=CODE,delta=2
   107                           	psect	text75,local,class=CODE,merge=1,delta=2
   108                           	psect	text76,local,class=CODE,merge=1,delta=2
   109                           	psect	text77,local,class=CODE,merge=1,delta=2
   110                           	psect	text78,local,class=CODE,merge=1,delta=2
   111                           	psect	text79,local,class=CODE,merge=1,delta=2
   112                           	psect	text80,local,class=CODE,merge=1,delta=2
   113                           	psect	text81,local,class=CODE,merge=1,delta=2
   114                           	psect	text82,local,class=CODE,merge=1,delta=2
   115                           	psect	text83,local,class=CODE,merge=1,delta=2
   116                           	psect	text84,local,class=CODE,merge=1,delta=2
   117                           	psect	text85,local,class=CODE,merge=1,delta=2
   118                           	psect	text86,local,class=CODE,merge=1,delta=2
   119                           	psect	text87,local,class=CODE,merge=1,delta=2
   120                           	psect	text88,local,class=CODE,merge=1,delta=2
   121                           	psect	text89,local,class=CODE,merge=1,delta=2
   122                           	psect	text90,local,class=CODE,merge=1,delta=2
   123                           	psect	text91,local,class=CODE,merge=1,delta=2
   124                           	psect	text92,local,class=CODE,merge=1,delta=2
   125                           	psect	text93,local,class=CODE,merge=1,delta=2
   126                           	psect	text94,local,class=CODE,merge=1,delta=2
   127                           	psect	text95,local,class=CODE,merge=1,delta=2
   128                           	psect	text96,local,class=CODE,merge=1,delta=2
   129                           	psect	text97,local,class=CODE,merge=1,delta=2
   130                           	psect	text98,local,class=CODE,merge=1,delta=2
   131                           	psect	text99,local,class=CODE,merge=1,delta=2
   132                           	psect	text100,local,class=CODE,merge=1,delta=2
   133                           	psect	text101,local,class=CODE,merge=1,delta=2
   134                           	psect	text102,local,class=CODE,merge=1,delta=2
   135                           	psect	text103,local,class=CODE,merge=1,delta=2
   136                           	psect	text104,local,class=CODE,merge=1,delta=2
   137                           	psect	text105,local,class=CODE,merge=1,delta=2
   138                           	psect	text106,local,class=CODE,merge=1,delta=2
   139                           	psect	text107,local,class=CODE,merge=1,delta=2
   140                           	psect	text108,local,class=CODE,merge=1,delta=2
   141                           	psect	text109,local,class=CODE,merge=1,delta=2
   142                           	psect	text110,local,class=CODE,merge=1,delta=2
   143                           	psect	text111,local,class=CODE,merge=1,delta=2
   144                           	psect	text112,local,class=CODE,merge=1,delta=2
   145                           	psect	text113,local,class=CODE,merge=1,delta=2
   146                           	psect	text114,local,class=CODE,merge=1,delta=2
   147                           	psect	text115,local,class=CODE,merge=1,delta=2
   148                           	psect	text116,local,class=CODE,merge=1,delta=2
   149                           	psect	text117,local,class=CODE,merge=1,delta=2
   150                           	psect	text118,local,class=CODE,merge=1,delta=2
   151                           	psect	text119,local,class=CODE,merge=1,delta=2
   152                           	psect	text120,local,class=CODE,merge=1,delta=2
   153                           	psect	text121,local,class=CODE,merge=1,delta=2
   154                           	psect	text122,local,class=CODE,merge=1,delta=2
   155                           	psect	text123,local,class=CODE,merge=1,delta=2
   156                           	psect	text124,local,class=CODE,merge=1,delta=2
   157                           	psect	text125,local,class=CODE,merge=1,delta=2
   158                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   159                           	dabs	1,0xCA0,32
   160                           	dabs	1,0xC3B,53
   161                           	dabs	1,0xC20,27
   162                           	dabs	1,0xBB6,58
   163                           	dabs	1,0xBA0,22
   164                           	dabs	1,0xB31,63
   165                           	dabs	1,0xB20,17
   166                           	dabs	1,0xAAC,68
   167                           	dabs	1,0x269C,0,_dotColor2
   168                           	dabs	1,0x26F1,0,_dotColor1
   169                           	dabs	1,0x2746,0,_dotValue2
   170                           	dabs	1,0x279B,0,_dotValue1
   171                           	dabs	1,0x7E,2
   172  0000                     
   173                           ; Version 2.35
   174                           ; Generated 13/04/2021 GMT
   175                           ; 
   176                           ; Copyright © 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   177                           ; All rights reserved.
   178                           ; 
   179                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   180                           ; 
   181                           ; Redistribution and use in source and binary forms, with or without modification, are
   182                           ; permitted provided that the following conditions are met:
   183                           ; 
   184                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   185                           ;        conditions and the following disclaimer.
   186                           ; 
   187                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   188                           ;        of conditions and the following disclaimer in the documentation and/or other
   189                           ;        materials provided with the distribution. Publication is not required when
   190                           ;        this file is used in an embedded application.
   191                           ; 
   192                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   193                           ;        software without specific prior written permission.
   194                           ; 
   195                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   196                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   197                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   198                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   199                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   200                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   201                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   202                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   203                           ; 
   204                           ; 
   205                           ; Code-generator required, PIC16F18326 Definitions
   206                           ; 
   207                           ; SFR Addresses
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000E                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  008C                     	;# 
   242  008E                     	;# 
   243  0090                     	;# 
   244  0091                     	;# 
   245  0092                     	;# 
   246  0093                     	;# 
   247  0094                     	;# 
   248  0097                     	;# 
   249  009B                     	;# 
   250  009B                     	;# 
   251  009C                     	;# 
   252  009D                     	;# 
   253  009E                     	;# 
   254  009F                     	;# 
   255  010C                     	;# 
   256  010E                     	;# 
   257  0111                     	;# 
   258  0112                     	;# 
   259  0113                     	;# 
   260  0114                     	;# 
   261  0115                     	;# 
   262  0116                     	;# 
   263  0117                     	;# 
   264  0118                     	;# 
   265  0119                     	;# 
   266  018C                     	;# 
   267  018E                     	;# 
   268  0197                     	;# 
   269  0199                     	;# 
   270  0199                     	;# 
   271  0199                     	;# 
   272  019A                     	;# 
   273  019A                     	;# 
   274  019A                     	;# 
   275  019B                     	;# 
   276  019B                     	;# 
   277  019B                     	;# 
   278  019B                     	;# 
   279  019B                     	;# 
   280  019C                     	;# 
   281  019C                     	;# 
   282  019C                     	;# 
   283  019D                     	;# 
   284  019D                     	;# 
   285  019D                     	;# 
   286  019E                     	;# 
   287  019E                     	;# 
   288  019E                     	;# 
   289  019F                     	;# 
   290  019F                     	;# 
   291  019F                     	;# 
   292  019F                     	;# 
   293  019F                     	;# 
   294  020C                     	;# 
   295  020E                     	;# 
   296  0211                     	;# 
   297  0211                     	;# 
   298  0212                     	;# 
   299  0212                     	;# 
   300  0213                     	;# 
   301  0213                     	;# 
   302  0214                     	;# 
   303  0214                     	;# 
   304  0215                     	;# 
   305  0215                     	;# 
   306  0215                     	;# 
   307  0215                     	;# 
   308  0216                     	;# 
   309  0216                     	;# 
   310  0217                     	;# 
   311  0217                     	;# 
   312  0219                     	;# 
   313  021A                     	;# 
   314  021B                     	;# 
   315  021C                     	;# 
   316  021D                     	;# 
   317  021D                     	;# 
   318  021E                     	;# 
   319  021F                     	;# 
   320  028C                     	;# 
   321  028E                     	;# 
   322  0291                     	;# 
   323  0291                     	;# 
   324  0292                     	;# 
   325  0293                     	;# 
   326  0294                     	;# 
   327  0295                     	;# 
   328  0295                     	;# 
   329  0296                     	;# 
   330  0297                     	;# 
   331  0298                     	;# 
   332  029F                     	;# 
   333  030C                     	;# 
   334  030E                     	;# 
   335  0311                     	;# 
   336  0311                     	;# 
   337  0312                     	;# 
   338  0313                     	;# 
   339  0314                     	;# 
   340  0315                     	;# 
   341  0315                     	;# 
   342  0316                     	;# 
   343  0317                     	;# 
   344  0318                     	;# 
   345  038C                     	;# 
   346  038E                     	;# 
   347  0391                     	;# 
   348  0392                     	;# 
   349  0393                     	;# 
   350  0397                     	;# 
   351  0398                     	;# 
   352  0399                     	;# 
   353  039A                     	;# 
   354  039C                     	;# 
   355  039D                     	;# 
   356  039E                     	;# 
   357  039F                     	;# 
   358  0411                     	;# 
   359  0411                     	;# 
   360  0412                     	;# 
   361  0413                     	;# 
   362  0414                     	;# 
   363  0415                     	;# 
   364  0416                     	;# 
   365  0417                     	;# 
   366  0418                     	;# 
   367  0418                     	;# 
   368  0419                     	;# 
   369  041A                     	;# 
   370  041B                     	;# 
   371  041C                     	;# 
   372  041D                     	;# 
   373  041E                     	;# 
   374  041F                     	;# 
   375  0498                     	;# 
   376  0498                     	;# 
   377  0499                     	;# 
   378  049A                     	;# 
   379  049B                     	;# 
   380  049B                     	;# 
   381  049C                     	;# 
   382  049D                     	;# 
   383  049E                     	;# 
   384  049F                     	;# 
   385  0617                     	;# 
   386  0618                     	;# 
   387  0619                     	;# 
   388  0619                     	;# 
   389  061A                     	;# 
   390  061B                     	;# 
   391  061C                     	;# 
   392  061C                     	;# 
   393  061F                     	;# 
   394  0691                     	;# 
   395  0692                     	;# 
   396  0693                     	;# 
   397  0694                     	;# 
   398  0695                     	;# 
   399  0696                     	;# 
   400  0697                     	;# 
   401  0698                     	;# 
   402  0699                     	;# 
   403  0711                     	;# 
   404  0712                     	;# 
   405  0713                     	;# 
   406  0714                     	;# 
   407  0715                     	;# 
   408  0716                     	;# 
   409  0717                     	;# 
   410  0718                     	;# 
   411  0719                     	;# 
   412  0891                     	;# 
   413  0891                     	;# 
   414  0891                     	;# 
   415  0891                     	;# 
   416  0891                     	;# 
   417  0891                     	;# 
   418  0892                     	;# 
   419  0892                     	;# 
   420  0892                     	;# 
   421  0893                     	;# 
   422  0893                     	;# 
   423  0893                     	;# 
   424  0893                     	;# 
   425  0893                     	;# 
   426  0893                     	;# 
   427  0894                     	;# 
   428  0894                     	;# 
   429  0894                     	;# 
   430  0895                     	;# 
   431  0895                     	;# 
   432  0895                     	;# 
   433  0896                     	;# 
   434  0896                     	;# 
   435  0896                     	;# 
   436  089B                     	;# 
   437  0911                     	;# 
   438  0912                     	;# 
   439  0913                     	;# 
   440  0914                     	;# 
   441  0915                     	;# 
   442  0916                     	;# 
   443  0918                     	;# 
   444  0919                     	;# 
   445  091A                     	;# 
   446  091B                     	;# 
   447  091C                     	;# 
   448  091D                     	;# 
   449  091E                     	;# 
   450  091F                     	;# 
   451  0E0F                     	;# 
   452  0E10                     	;# 
   453  0E11                     	;# 
   454  0E12                     	;# 
   455  0E13                     	;# 
   456  0E14                     	;# 
   457  0E15                     	;# 
   458  0E16                     	;# 
   459  0E17                     	;# 
   460  0E18                     	;# 
   461  0E19                     	;# 
   462  0E1A                     	;# 
   463  0E1B                     	;# 
   464  0E1C                     	;# 
   465  0E1D                     	;# 
   466  0E1E                     	;# 
   467  0E1F                     	;# 
   468  0E20                     	;# 
   469  0E21                     	;# 
   470  0E22                     	;# 
   471  0E24                     	;# 
   472  0E25                     	;# 
   473  0E28                     	;# 
   474  0E29                     	;# 
   475  0E2A                     	;# 
   476  0E2B                     	;# 
   477  0E2C                     	;# 
   478  0E2D                     	;# 
   479  0E2E                     	;# 
   480  0E2F                     	;# 
   481  0E90                     	;# 
   482  0E91                     	;# 
   483  0E92                     	;# 
   484  0E94                     	;# 
   485  0E95                     	;# 
   486  0EA0                     	;# 
   487  0EA1                     	;# 
   488  0EA2                     	;# 
   489  0EA3                     	;# 
   490  0EA4                     	;# 
   491  0EA5                     	;# 
   492  0F0F                     	;# 
   493  0F10                     	;# 
   494  0F11                     	;# 
   495  0F12                     	;# 
   496  0F13                     	;# 
   497  0F14                     	;# 
   498  0F15                     	;# 
   499  0F16                     	;# 
   500  0F17                     	;# 
   501  0F18                     	;# 
   502  0F19                     	;# 
   503  0F1A                     	;# 
   504  0F1B                     	;# 
   505  0F1C                     	;# 
   506  0F1D                     	;# 
   507  0F1E                     	;# 
   508  0F1F                     	;# 
   509  0F20                     	;# 
   510  0F21                     	;# 
   511  0F22                     	;# 
   512  0F23                     	;# 
   513  0F24                     	;# 
   514  0F25                     	;# 
   515  0F26                     	;# 
   516  0F27                     	;# 
   517  0F28                     	;# 
   518  0F29                     	;# 
   519  0F2A                     	;# 
   520  0F2B                     	;# 
   521  0F2C                     	;# 
   522  0F2D                     	;# 
   523  0F2E                     	;# 
   524  0F2F                     	;# 
   525  0F30                     	;# 
   526  0F31                     	;# 
   527  0F32                     	;# 
   528  0F33                     	;# 
   529  0F34                     	;# 
   530  0F35                     	;# 
   531  0F36                     	;# 
   532  0F37                     	;# 
   533  0FE4                     	;# 
   534  0FE5                     	;# 
   535  0FE6                     	;# 
   536  0FE7                     	;# 
   537  0FE8                     	;# 
   538  0FE9                     	;# 
   539  0FEA                     	;# 
   540  0FEB                     	;# 
   541  0FED                     	;# 
   542  0FEE                     	;# 
   543  0FEF                     	;# 
   544  0000                     	;# 
   545  0001                     	;# 
   546  0002                     	;# 
   547  0003                     	;# 
   548  0004                     	;# 
   549  0005                     	;# 
   550  0006                     	;# 
   551  0007                     	;# 
   552  0008                     	;# 
   553  0009                     	;# 
   554  000A                     	;# 
   555  000B                     	;# 
   556  000C                     	;# 
   557  000E                     	;# 
   558  0010                     	;# 
   559  0011                     	;# 
   560  0012                     	;# 
   561  0013                     	;# 
   562  0014                     	;# 
   563  0015                     	;# 
   564  0015                     	;# 
   565  0016                     	;# 
   566  0016                     	;# 
   567  0017                     	;# 
   568  0018                     	;# 
   569  0019                     	;# 
   570  0019                     	;# 
   571  001A                     	;# 
   572  001B                     	;# 
   573  001C                     	;# 
   574  001D                     	;# 
   575  001E                     	;# 
   576  001F                     	;# 
   577  008C                     	;# 
   578  008E                     	;# 
   579  0090                     	;# 
   580  0091                     	;# 
   581  0092                     	;# 
   582  0093                     	;# 
   583  0094                     	;# 
   584  0097                     	;# 
   585  009B                     	;# 
   586  009B                     	;# 
   587  009C                     	;# 
   588  009D                     	;# 
   589  009E                     	;# 
   590  009F                     	;# 
   591  010C                     	;# 
   592  010E                     	;# 
   593  0111                     	;# 
   594  0112                     	;# 
   595  0113                     	;# 
   596  0114                     	;# 
   597  0115                     	;# 
   598  0116                     	;# 
   599  0117                     	;# 
   600  0118                     	;# 
   601  0119                     	;# 
   602  018C                     	;# 
   603  018E                     	;# 
   604  0197                     	;# 
   605  0199                     	;# 
   606  0199                     	;# 
   607  0199                     	;# 
   608  019A                     	;# 
   609  019A                     	;# 
   610  019A                     	;# 
   611  019B                     	;# 
   612  019B                     	;# 
   613  019B                     	;# 
   614  019B                     	;# 
   615  019B                     	;# 
   616  019C                     	;# 
   617  019C                     	;# 
   618  019C                     	;# 
   619  019D                     	;# 
   620  019D                     	;# 
   621  019D                     	;# 
   622  019E                     	;# 
   623  019E                     	;# 
   624  019E                     	;# 
   625  019F                     	;# 
   626  019F                     	;# 
   627  019F                     	;# 
   628  019F                     	;# 
   629  019F                     	;# 
   630  020C                     	;# 
   631  020E                     	;# 
   632  0211                     	;# 
   633  0211                     	;# 
   634  0212                     	;# 
   635  0212                     	;# 
   636  0213                     	;# 
   637  0213                     	;# 
   638  0214                     	;# 
   639  0214                     	;# 
   640  0215                     	;# 
   641  0215                     	;# 
   642  0215                     	;# 
   643  0215                     	;# 
   644  0216                     	;# 
   645  0216                     	;# 
   646  0217                     	;# 
   647  0217                     	;# 
   648  0219                     	;# 
   649  021A                     	;# 
   650  021B                     	;# 
   651  021C                     	;# 
   652  021D                     	;# 
   653  021D                     	;# 
   654  021E                     	;# 
   655  021F                     	;# 
   656  028C                     	;# 
   657  028E                     	;# 
   658  0291                     	;# 
   659  0291                     	;# 
   660  0292                     	;# 
   661  0293                     	;# 
   662  0294                     	;# 
   663  0295                     	;# 
   664  0295                     	;# 
   665  0296                     	;# 
   666  0297                     	;# 
   667  0298                     	;# 
   668  029F                     	;# 
   669  030C                     	;# 
   670  030E                     	;# 
   671  0311                     	;# 
   672  0311                     	;# 
   673  0312                     	;# 
   674  0313                     	;# 
   675  0314                     	;# 
   676  0315                     	;# 
   677  0315                     	;# 
   678  0316                     	;# 
   679  0317                     	;# 
   680  0318                     	;# 
   681  038C                     	;# 
   682  038E                     	;# 
   683  0391                     	;# 
   684  0392                     	;# 
   685  0393                     	;# 
   686  0397                     	;# 
   687  0398                     	;# 
   688  0399                     	;# 
   689  039A                     	;# 
   690  039C                     	;# 
   691  039D                     	;# 
   692  039E                     	;# 
   693  039F                     	;# 
   694  0411                     	;# 
   695  0411                     	;# 
   696  0412                     	;# 
   697  0413                     	;# 
   698  0414                     	;# 
   699  0415                     	;# 
   700  0416                     	;# 
   701  0417                     	;# 
   702  0418                     	;# 
   703  0418                     	;# 
   704  0419                     	;# 
   705  041A                     	;# 
   706  041B                     	;# 
   707  041C                     	;# 
   708  041D                     	;# 
   709  041E                     	;# 
   710  041F                     	;# 
   711  0498                     	;# 
   712  0498                     	;# 
   713  0499                     	;# 
   714  049A                     	;# 
   715  049B                     	;# 
   716  049B                     	;# 
   717  049C                     	;# 
   718  049D                     	;# 
   719  049E                     	;# 
   720  049F                     	;# 
   721  0617                     	;# 
   722  0618                     	;# 
   723  0619                     	;# 
   724  0619                     	;# 
   725  061A                     	;# 
   726  061B                     	;# 
   727  061C                     	;# 
   728  061C                     	;# 
   729  061F                     	;# 
   730  0691                     	;# 
   731  0692                     	;# 
   732  0693                     	;# 
   733  0694                     	;# 
   734  0695                     	;# 
   735  0696                     	;# 
   736  0697                     	;# 
   737  0698                     	;# 
   738  0699                     	;# 
   739  0711                     	;# 
   740  0712                     	;# 
   741  0713                     	;# 
   742  0714                     	;# 
   743  0715                     	;# 
   744  0716                     	;# 
   745  0717                     	;# 
   746  0718                     	;# 
   747  0719                     	;# 
   748  0891                     	;# 
   749  0891                     	;# 
   750  0891                     	;# 
   751  0891                     	;# 
   752  0891                     	;# 
   753  0891                     	;# 
   754  0892                     	;# 
   755  0892                     	;# 
   756  0892                     	;# 
   757  0893                     	;# 
   758  0893                     	;# 
   759  0893                     	;# 
   760  0893                     	;# 
   761  0893                     	;# 
   762  0893                     	;# 
   763  0894                     	;# 
   764  0894                     	;# 
   765  0894                     	;# 
   766  0895                     	;# 
   767  0895                     	;# 
   768  0895                     	;# 
   769  0896                     	;# 
   770  0896                     	;# 
   771  0896                     	;# 
   772  089B                     	;# 
   773  0911                     	;# 
   774  0912                     	;# 
   775  0913                     	;# 
   776  0914                     	;# 
   777  0915                     	;# 
   778  0916                     	;# 
   779  0918                     	;# 
   780  0919                     	;# 
   781  091A                     	;# 
   782  091B                     	;# 
   783  091C                     	;# 
   784  091D                     	;# 
   785  091E                     	;# 
   786  091F                     	;# 
   787  0E0F                     	;# 
   788  0E10                     	;# 
   789  0E11                     	;# 
   790  0E12                     	;# 
   791  0E13                     	;# 
   792  0E14                     	;# 
   793  0E15                     	;# 
   794  0E16                     	;# 
   795  0E17                     	;# 
   796  0E18                     	;# 
   797  0E19                     	;# 
   798  0E1A                     	;# 
   799  0E1B                     	;# 
   800  0E1C                     	;# 
   801  0E1D                     	;# 
   802  0E1E                     	;# 
   803  0E1F                     	;# 
   804  0E20                     	;# 
   805  0E21                     	;# 
   806  0E22                     	;# 
   807  0E24                     	;# 
   808  0E25                     	;# 
   809  0E28                     	;# 
   810  0E29                     	;# 
   811  0E2A                     	;# 
   812  0E2B                     	;# 
   813  0E2C                     	;# 
   814  0E2D                     	;# 
   815  0E2E                     	;# 
   816  0E2F                     	;# 
   817  0E90                     	;# 
   818  0E91                     	;# 
   819  0E92                     	;# 
   820  0E94                     	;# 
   821  0E95                     	;# 
   822  0EA0                     	;# 
   823  0EA1                     	;# 
   824  0EA2                     	;# 
   825  0EA3                     	;# 
   826  0EA4                     	;# 
   827  0EA5                     	;# 
   828  0F0F                     	;# 
   829  0F10                     	;# 
   830  0F11                     	;# 
   831  0F12                     	;# 
   832  0F13                     	;# 
   833  0F14                     	;# 
   834  0F15                     	;# 
   835  0F16                     	;# 
   836  0F17                     	;# 
   837  0F18                     	;# 
   838  0F19                     	;# 
   839  0F1A                     	;# 
   840  0F1B                     	;# 
   841  0F1C                     	;# 
   842  0F1D                     	;# 
   843  0F1E                     	;# 
   844  0F1F                     	;# 
   845  0F20                     	;# 
   846  0F21                     	;# 
   847  0F22                     	;# 
   848  0F23                     	;# 
   849  0F24                     	;# 
   850  0F25                     	;# 
   851  0F26                     	;# 
   852  0F27                     	;# 
   853  0F28                     	;# 
   854  0F29                     	;# 
   855  0F2A                     	;# 
   856  0F2B                     	;# 
   857  0F2C                     	;# 
   858  0F2D                     	;# 
   859  0F2E                     	;# 
   860  0F2F                     	;# 
   861  0F30                     	;# 
   862  0F31                     	;# 
   863  0F32                     	;# 
   864  0F33                     	;# 
   865  0F34                     	;# 
   866  0F35                     	;# 
   867  0F36                     	;# 
   868  0F37                     	;# 
   869  0FE4                     	;# 
   870  0FE5                     	;# 
   871  0FE6                     	;# 
   872  0FE7                     	;# 
   873  0FE8                     	;# 
   874  0FE9                     	;# 
   875  0FEA                     	;# 
   876  0FEB                     	;# 
   877  0FED                     	;# 
   878  0FEE                     	;# 
   879  0FEF                     	;# 
   880  0000                     	;# 
   881  0001                     	;# 
   882  0002                     	;# 
   883  0003                     	;# 
   884  0004                     	;# 
   885  0005                     	;# 
   886  0006                     	;# 
   887  0007                     	;# 
   888  0008                     	;# 
   889  0009                     	;# 
   890  000A                     	;# 
   891  000B                     	;# 
   892  000C                     	;# 
   893  000E                     	;# 
   894  0010                     	;# 
   895  0011                     	;# 
   896  0012                     	;# 
   897  0013                     	;# 
   898  0014                     	;# 
   899  0015                     	;# 
   900  0015                     	;# 
   901  0016                     	;# 
   902  0016                     	;# 
   903  0017                     	;# 
   904  0018                     	;# 
   905  0019                     	;# 
   906  0019                     	;# 
   907  001A                     	;# 
   908  001B                     	;# 
   909  001C                     	;# 
   910  001D                     	;# 
   911  001E                     	;# 
   912  001F                     	;# 
   913  008C                     	;# 
   914  008E                     	;# 
   915  0090                     	;# 
   916  0091                     	;# 
   917  0092                     	;# 
   918  0093                     	;# 
   919  0094                     	;# 
   920  0097                     	;# 
   921  009B                     	;# 
   922  009B                     	;# 
   923  009C                     	;# 
   924  009D                     	;# 
   925  009E                     	;# 
   926  009F                     	;# 
   927  010C                     	;# 
   928  010E                     	;# 
   929  0111                     	;# 
   930  0112                     	;# 
   931  0113                     	;# 
   932  0114                     	;# 
   933  0115                     	;# 
   934  0116                     	;# 
   935  0117                     	;# 
   936  0118                     	;# 
   937  0119                     	;# 
   938  018C                     	;# 
   939  018E                     	;# 
   940  0197                     	;# 
   941  0199                     	;# 
   942  0199                     	;# 
   943  0199                     	;# 
   944  019A                     	;# 
   945  019A                     	;# 
   946  019A                     	;# 
   947  019B                     	;# 
   948  019B                     	;# 
   949  019B                     	;# 
   950  019B                     	;# 
   951  019B                     	;# 
   952  019C                     	;# 
   953  019C                     	;# 
   954  019C                     	;# 
   955  019D                     	;# 
   956  019D                     	;# 
   957  019D                     	;# 
   958  019E                     	;# 
   959  019E                     	;# 
   960  019E                     	;# 
   961  019F                     	;# 
   962  019F                     	;# 
   963  019F                     	;# 
   964  019F                     	;# 
   965  019F                     	;# 
   966  020C                     	;# 
   967  020E                     	;# 
   968  0211                     	;# 
   969  0211                     	;# 
   970  0212                     	;# 
   971  0212                     	;# 
   972  0213                     	;# 
   973  0213                     	;# 
   974  0214                     	;# 
   975  0214                     	;# 
   976  0215                     	;# 
   977  0215                     	;# 
   978  0215                     	;# 
   979  0215                     	;# 
   980  0216                     	;# 
   981  0216                     	;# 
   982  0217                     	;# 
   983  0217                     	;# 
   984  0219                     	;# 
   985  021A                     	;# 
   986  021B                     	;# 
   987  021C                     	;# 
   988  021D                     	;# 
   989  021D                     	;# 
   990  021E                     	;# 
   991  021F                     	;# 
   992  028C                     	;# 
   993  028E                     	;# 
   994  0291                     	;# 
   995  0291                     	;# 
   996  0292                     	;# 
   997  0293                     	;# 
   998  0294                     	;# 
   999  0295                     	;# 
  1000  0295                     	;# 
  1001  0296                     	;# 
  1002  0297                     	;# 
  1003  0298                     	;# 
  1004  029F                     	;# 
  1005  030C                     	;# 
  1006  030E                     	;# 
  1007  0311                     	;# 
  1008  0311                     	;# 
  1009  0312                     	;# 
  1010  0313                     	;# 
  1011  0314                     	;# 
  1012  0315                     	;# 
  1013  0315                     	;# 
  1014  0316                     	;# 
  1015  0317                     	;# 
  1016  0318                     	;# 
  1017  038C                     	;# 
  1018  038E                     	;# 
  1019  0391                     	;# 
  1020  0392                     	;# 
  1021  0393                     	;# 
  1022  0397                     	;# 
  1023  0398                     	;# 
  1024  0399                     	;# 
  1025  039A                     	;# 
  1026  039C                     	;# 
  1027  039D                     	;# 
  1028  039E                     	;# 
  1029  039F                     	;# 
  1030  0411                     	;# 
  1031  0411                     	;# 
  1032  0412                     	;# 
  1033  0413                     	;# 
  1034  0414                     	;# 
  1035  0415                     	;# 
  1036  0416                     	;# 
  1037  0417                     	;# 
  1038  0418                     	;# 
  1039  0418                     	;# 
  1040  0419                     	;# 
  1041  041A                     	;# 
  1042  041B                     	;# 
  1043  041C                     	;# 
  1044  041D                     	;# 
  1045  041E                     	;# 
  1046  041F                     	;# 
  1047  0498                     	;# 
  1048  0498                     	;# 
  1049  0499                     	;# 
  1050  049A                     	;# 
  1051  049B                     	;# 
  1052  049B                     	;# 
  1053  049C                     	;# 
  1054  049D                     	;# 
  1055  049E                     	;# 
  1056  049F                     	;# 
  1057  0617                     	;# 
  1058  0618                     	;# 
  1059  0619                     	;# 
  1060  0619                     	;# 
  1061  061A                     	;# 
  1062  061B                     	;# 
  1063  061C                     	;# 
  1064  061C                     	;# 
  1065  061F                     	;# 
  1066  0691                     	;# 
  1067  0692                     	;# 
  1068  0693                     	;# 
  1069  0694                     	;# 
  1070  0695                     	;# 
  1071  0696                     	;# 
  1072  0697                     	;# 
  1073  0698                     	;# 
  1074  0699                     	;# 
  1075  0711                     	;# 
  1076  0712                     	;# 
  1077  0713                     	;# 
  1078  0714                     	;# 
  1079  0715                     	;# 
  1080  0716                     	;# 
  1081  0717                     	;# 
  1082  0718                     	;# 
  1083  0719                     	;# 
  1084  0891                     	;# 
  1085  0891                     	;# 
  1086  0891                     	;# 
  1087  0891                     	;# 
  1088  0891                     	;# 
  1089  0891                     	;# 
  1090  0892                     	;# 
  1091  0892                     	;# 
  1092  0892                     	;# 
  1093  0893                     	;# 
  1094  0893                     	;# 
  1095  0893                     	;# 
  1096  0893                     	;# 
  1097  0893                     	;# 
  1098  0893                     	;# 
  1099  0894                     	;# 
  1100  0894                     	;# 
  1101  0894                     	;# 
  1102  0895                     	;# 
  1103  0895                     	;# 
  1104  0895                     	;# 
  1105  0896                     	;# 
  1106  0896                     	;# 
  1107  0896                     	;# 
  1108  089B                     	;# 
  1109  0911                     	;# 
  1110  0912                     	;# 
  1111  0913                     	;# 
  1112  0914                     	;# 
  1113  0915                     	;# 
  1114  0916                     	;# 
  1115  0918                     	;# 
  1116  0919                     	;# 
  1117  091A                     	;# 
  1118  091B                     	;# 
  1119  091C                     	;# 
  1120  091D                     	;# 
  1121  091E                     	;# 
  1122  091F                     	;# 
  1123  0E0F                     	;# 
  1124  0E10                     	;# 
  1125  0E11                     	;# 
  1126  0E12                     	;# 
  1127  0E13                     	;# 
  1128  0E14                     	;# 
  1129  0E15                     	;# 
  1130  0E16                     	;# 
  1131  0E17                     	;# 
  1132  0E18                     	;# 
  1133  0E19                     	;# 
  1134  0E1A                     	;# 
  1135  0E1B                     	;# 
  1136  0E1C                     	;# 
  1137  0E1D                     	;# 
  1138  0E1E                     	;# 
  1139  0E1F                     	;# 
  1140  0E20                     	;# 
  1141  0E21                     	;# 
  1142  0E22                     	;# 
  1143  0E24                     	;# 
  1144  0E25                     	;# 
  1145  0E28                     	;# 
  1146  0E29                     	;# 
  1147  0E2A                     	;# 
  1148  0E2B                     	;# 
  1149  0E2C                     	;# 
  1150  0E2D                     	;# 
  1151  0E2E                     	;# 
  1152  0E2F                     	;# 
  1153  0E90                     	;# 
  1154  0E91                     	;# 
  1155  0E92                     	;# 
  1156  0E94                     	;# 
  1157  0E95                     	;# 
  1158  0EA0                     	;# 
  1159  0EA1                     	;# 
  1160  0EA2                     	;# 
  1161  0EA3                     	;# 
  1162  0EA4                     	;# 
  1163  0EA5                     	;# 
  1164  0F0F                     	;# 
  1165  0F10                     	;# 
  1166  0F11                     	;# 
  1167  0F12                     	;# 
  1168  0F13                     	;# 
  1169  0F14                     	;# 
  1170  0F15                     	;# 
  1171  0F16                     	;# 
  1172  0F17                     	;# 
  1173  0F18                     	;# 
  1174  0F19                     	;# 
  1175  0F1A                     	;# 
  1176  0F1B                     	;# 
  1177  0F1C                     	;# 
  1178  0F1D                     	;# 
  1179  0F1E                     	;# 
  1180  0F1F                     	;# 
  1181  0F20                     	;# 
  1182  0F21                     	;# 
  1183  0F22                     	;# 
  1184  0F23                     	;# 
  1185  0F24                     	;# 
  1186  0F25                     	;# 
  1187  0F26                     	;# 
  1188  0F27                     	;# 
  1189  0F28                     	;# 
  1190  0F29                     	;# 
  1191  0F2A                     	;# 
  1192  0F2B                     	;# 
  1193  0F2C                     	;# 
  1194  0F2D                     	;# 
  1195  0F2E                     	;# 
  1196  0F2F                     	;# 
  1197  0F30                     	;# 
  1198  0F31                     	;# 
  1199  0F32                     	;# 
  1200  0F33                     	;# 
  1201  0F34                     	;# 
  1202  0F35                     	;# 
  1203  0F36                     	;# 
  1204  0F37                     	;# 
  1205  0FE4                     	;# 
  1206  0FE5                     	;# 
  1207  0FE6                     	;# 
  1208  0FE7                     	;# 
  1209  0FE8                     	;# 
  1210  0FE9                     	;# 
  1211  0FEA                     	;# 
  1212  0FEB                     	;# 
  1213  0FED                     	;# 
  1214  0FEE                     	;# 
  1215  0FEF                     	;# 
  1216  0000                     	;# 
  1217  0001                     	;# 
  1218  0002                     	;# 
  1219  0003                     	;# 
  1220  0004                     	;# 
  1221  0005                     	;# 
  1222  0006                     	;# 
  1223  0007                     	;# 
  1224  0008                     	;# 
  1225  0009                     	;# 
  1226  000A                     	;# 
  1227  000B                     	;# 
  1228  000C                     	;# 
  1229  000E                     	;# 
  1230  0010                     	;# 
  1231  0011                     	;# 
  1232  0012                     	;# 
  1233  0013                     	;# 
  1234  0014                     	;# 
  1235  0015                     	;# 
  1236  0015                     	;# 
  1237  0016                     	;# 
  1238  0016                     	;# 
  1239  0017                     	;# 
  1240  0018                     	;# 
  1241  0019                     	;# 
  1242  0019                     	;# 
  1243  001A                     	;# 
  1244  001B                     	;# 
  1245  001C                     	;# 
  1246  001D                     	;# 
  1247  001E                     	;# 
  1248  001F                     	;# 
  1249  008C                     	;# 
  1250  008E                     	;# 
  1251  0090                     	;# 
  1252  0091                     	;# 
  1253  0092                     	;# 
  1254  0093                     	;# 
  1255  0094                     	;# 
  1256  0097                     	;# 
  1257  009B                     	;# 
  1258  009B                     	;# 
  1259  009C                     	;# 
  1260  009D                     	;# 
  1261  009E                     	;# 
  1262  009F                     	;# 
  1263  010C                     	;# 
  1264  010E                     	;# 
  1265  0111                     	;# 
  1266  0112                     	;# 
  1267  0113                     	;# 
  1268  0114                     	;# 
  1269  0115                     	;# 
  1270  0116                     	;# 
  1271  0117                     	;# 
  1272  0118                     	;# 
  1273  0119                     	;# 
  1274  018C                     	;# 
  1275  018E                     	;# 
  1276  0197                     	;# 
  1277  0199                     	;# 
  1278  0199                     	;# 
  1279  0199                     	;# 
  1280  019A                     	;# 
  1281  019A                     	;# 
  1282  019A                     	;# 
  1283  019B                     	;# 
  1284  019B                     	;# 
  1285  019B                     	;# 
  1286  019B                     	;# 
  1287  019B                     	;# 
  1288  019C                     	;# 
  1289  019C                     	;# 
  1290  019C                     	;# 
  1291  019D                     	;# 
  1292  019D                     	;# 
  1293  019D                     	;# 
  1294  019E                     	;# 
  1295  019E                     	;# 
  1296  019E                     	;# 
  1297  019F                     	;# 
  1298  019F                     	;# 
  1299  019F                     	;# 
  1300  019F                     	;# 
  1301  019F                     	;# 
  1302  020C                     	;# 
  1303  020E                     	;# 
  1304  0211                     	;# 
  1305  0211                     	;# 
  1306  0212                     	;# 
  1307  0212                     	;# 
  1308  0213                     	;# 
  1309  0213                     	;# 
  1310  0214                     	;# 
  1311  0214                     	;# 
  1312  0215                     	;# 
  1313  0215                     	;# 
  1314  0215                     	;# 
  1315  0215                     	;# 
  1316  0216                     	;# 
  1317  0216                     	;# 
  1318  0217                     	;# 
  1319  0217                     	;# 
  1320  0219                     	;# 
  1321  021A                     	;# 
  1322  021B                     	;# 
  1323  021C                     	;# 
  1324  021D                     	;# 
  1325  021D                     	;# 
  1326  021E                     	;# 
  1327  021F                     	;# 
  1328  028C                     	;# 
  1329  028E                     	;# 
  1330  0291                     	;# 
  1331  0291                     	;# 
  1332  0292                     	;# 
  1333  0293                     	;# 
  1334  0294                     	;# 
  1335  0295                     	;# 
  1336  0295                     	;# 
  1337  0296                     	;# 
  1338  0297                     	;# 
  1339  0298                     	;# 
  1340  029F                     	;# 
  1341  030C                     	;# 
  1342  030E                     	;# 
  1343  0311                     	;# 
  1344  0311                     	;# 
  1345  0312                     	;# 
  1346  0313                     	;# 
  1347  0314                     	;# 
  1348  0315                     	;# 
  1349  0315                     	;# 
  1350  0316                     	;# 
  1351  0317                     	;# 
  1352  0318                     	;# 
  1353  038C                     	;# 
  1354  038E                     	;# 
  1355  0391                     	;# 
  1356  0392                     	;# 
  1357  0393                     	;# 
  1358  0397                     	;# 
  1359  0398                     	;# 
  1360  0399                     	;# 
  1361  039A                     	;# 
  1362  039C                     	;# 
  1363  039D                     	;# 
  1364  039E                     	;# 
  1365  039F                     	;# 
  1366  0411                     	;# 
  1367  0411                     	;# 
  1368  0412                     	;# 
  1369  0413                     	;# 
  1370  0414                     	;# 
  1371  0415                     	;# 
  1372  0416                     	;# 
  1373  0417                     	;# 
  1374  0418                     	;# 
  1375  0418                     	;# 
  1376  0419                     	;# 
  1377  041A                     	;# 
  1378  041B                     	;# 
  1379  041C                     	;# 
  1380  041D                     	;# 
  1381  041E                     	;# 
  1382  041F                     	;# 
  1383  0498                     	;# 
  1384  0498                     	;# 
  1385  0499                     	;# 
  1386  049A                     	;# 
  1387  049B                     	;# 
  1388  049B                     	;# 
  1389  049C                     	;# 
  1390  049D                     	;# 
  1391  049E                     	;# 
  1392  049F                     	;# 
  1393  0617                     	;# 
  1394  0618                     	;# 
  1395  0619                     	;# 
  1396  0619                     	;# 
  1397  061A                     	;# 
  1398  061B                     	;# 
  1399  061C                     	;# 
  1400  061C                     	;# 
  1401  061F                     	;# 
  1402  0691                     	;# 
  1403  0692                     	;# 
  1404  0693                     	;# 
  1405  0694                     	;# 
  1406  0695                     	;# 
  1407  0696                     	;# 
  1408  0697                     	;# 
  1409  0698                     	;# 
  1410  0699                     	;# 
  1411  0711                     	;# 
  1412  0712                     	;# 
  1413  0713                     	;# 
  1414  0714                     	;# 
  1415  0715                     	;# 
  1416  0716                     	;# 
  1417  0717                     	;# 
  1418  0718                     	;# 
  1419  0719                     	;# 
  1420  0891                     	;# 
  1421  0891                     	;# 
  1422  0891                     	;# 
  1423  0891                     	;# 
  1424  0891                     	;# 
  1425  0891                     	;# 
  1426  0892                     	;# 
  1427  0892                     	;# 
  1428  0892                     	;# 
  1429  0893                     	;# 
  1430  0893                     	;# 
  1431  0893                     	;# 
  1432  0893                     	;# 
  1433  0893                     	;# 
  1434  0893                     	;# 
  1435  0894                     	;# 
  1436  0894                     	;# 
  1437  0894                     	;# 
  1438  0895                     	;# 
  1439  0895                     	;# 
  1440  0895                     	;# 
  1441  0896                     	;# 
  1442  0896                     	;# 
  1443  0896                     	;# 
  1444  089B                     	;# 
  1445  0911                     	;# 
  1446  0912                     	;# 
  1447  0913                     	;# 
  1448  0914                     	;# 
  1449  0915                     	;# 
  1450  0916                     	;# 
  1451  0918                     	;# 
  1452  0919                     	;# 
  1453  091A                     	;# 
  1454  091B                     	;# 
  1455  091C                     	;# 
  1456  091D                     	;# 
  1457  091E                     	;# 
  1458  091F                     	;# 
  1459  0E0F                     	;# 
  1460  0E10                     	;# 
  1461  0E11                     	;# 
  1462  0E12                     	;# 
  1463  0E13                     	;# 
  1464  0E14                     	;# 
  1465  0E15                     	;# 
  1466  0E16                     	;# 
  1467  0E17                     	;# 
  1468  0E18                     	;# 
  1469  0E19                     	;# 
  1470  0E1A                     	;# 
  1471  0E1B                     	;# 
  1472  0E1C                     	;# 
  1473  0E1D                     	;# 
  1474  0E1E                     	;# 
  1475  0E1F                     	;# 
  1476  0E20                     	;# 
  1477  0E21                     	;# 
  1478  0E22                     	;# 
  1479  0E24                     	;# 
  1480  0E25                     	;# 
  1481  0E28                     	;# 
  1482  0E29                     	;# 
  1483  0E2A                     	;# 
  1484  0E2B                     	;# 
  1485  0E2C                     	;# 
  1486  0E2D                     	;# 
  1487  0E2E                     	;# 
  1488  0E2F                     	;# 
  1489  0E90                     	;# 
  1490  0E91                     	;# 
  1491  0E92                     	;# 
  1492  0E94                     	;# 
  1493  0E95                     	;# 
  1494  0EA0                     	;# 
  1495  0EA1                     	;# 
  1496  0EA2                     	;# 
  1497  0EA3                     	;# 
  1498  0EA4                     	;# 
  1499  0EA5                     	;# 
  1500  0F0F                     	;# 
  1501  0F10                     	;# 
  1502  0F11                     	;# 
  1503  0F12                     	;# 
  1504  0F13                     	;# 
  1505  0F14                     	;# 
  1506  0F15                     	;# 
  1507  0F16                     	;# 
  1508  0F17                     	;# 
  1509  0F18                     	;# 
  1510  0F19                     	;# 
  1511  0F1A                     	;# 
  1512  0F1B                     	;# 
  1513  0F1C                     	;# 
  1514  0F1D                     	;# 
  1515  0F1E                     	;# 
  1516  0F1F                     	;# 
  1517  0F20                     	;# 
  1518  0F21                     	;# 
  1519  0F22                     	;# 
  1520  0F23                     	;# 
  1521  0F24                     	;# 
  1522  0F25                     	;# 
  1523  0F26                     	;# 
  1524  0F27                     	;# 
  1525  0F28                     	;# 
  1526  0F29                     	;# 
  1527  0F2A                     	;# 
  1528  0F2B                     	;# 
  1529  0F2C                     	;# 
  1530  0F2D                     	;# 
  1531  0F2E                     	;# 
  1532  0F2F                     	;# 
  1533  0F30                     	;# 
  1534  0F31                     	;# 
  1535  0F32                     	;# 
  1536  0F33                     	;# 
  1537  0F34                     	;# 
  1538  0F35                     	;# 
  1539  0F36                     	;# 
  1540  0F37                     	;# 
  1541  0FE4                     	;# 
  1542  0FE5                     	;# 
  1543  0FE6                     	;# 
  1544  0FE7                     	;# 
  1545  0FE8                     	;# 
  1546  0FE9                     	;# 
  1547  0FEA                     	;# 
  1548  0FEB                     	;# 
  1549  0FED                     	;# 
  1550  0FEE                     	;# 
  1551  0FEF                     	;# 
  1552  0000                     	;# 
  1553  0001                     	;# 
  1554  0002                     	;# 
  1555  0003                     	;# 
  1556  0004                     	;# 
  1557  0005                     	;# 
  1558  0006                     	;# 
  1559  0007                     	;# 
  1560  0008                     	;# 
  1561  0009                     	;# 
  1562  000A                     	;# 
  1563  000B                     	;# 
  1564  000C                     	;# 
  1565  000E                     	;# 
  1566  0010                     	;# 
  1567  0011                     	;# 
  1568  0012                     	;# 
  1569  0013                     	;# 
  1570  0014                     	;# 
  1571  0015                     	;# 
  1572  0015                     	;# 
  1573  0016                     	;# 
  1574  0016                     	;# 
  1575  0017                     	;# 
  1576  0018                     	;# 
  1577  0019                     	;# 
  1578  0019                     	;# 
  1579  001A                     	;# 
  1580  001B                     	;# 
  1581  001C                     	;# 
  1582  001D                     	;# 
  1583  001E                     	;# 
  1584  001F                     	;# 
  1585  008C                     	;# 
  1586  008E                     	;# 
  1587  0090                     	;# 
  1588  0091                     	;# 
  1589  0092                     	;# 
  1590  0093                     	;# 
  1591  0094                     	;# 
  1592  0097                     	;# 
  1593  009B                     	;# 
  1594  009B                     	;# 
  1595  009C                     	;# 
  1596  009D                     	;# 
  1597  009E                     	;# 
  1598  009F                     	;# 
  1599  010C                     	;# 
  1600  010E                     	;# 
  1601  0111                     	;# 
  1602  0112                     	;# 
  1603  0113                     	;# 
  1604  0114                     	;# 
  1605  0115                     	;# 
  1606  0116                     	;# 
  1607  0117                     	;# 
  1608  0118                     	;# 
  1609  0119                     	;# 
  1610  018C                     	;# 
  1611  018E                     	;# 
  1612  0197                     	;# 
  1613  0199                     	;# 
  1614  0199                     	;# 
  1615  0199                     	;# 
  1616  019A                     	;# 
  1617  019A                     	;# 
  1618  019A                     	;# 
  1619  019B                     	;# 
  1620  019B                     	;# 
  1621  019B                     	;# 
  1622  019B                     	;# 
  1623  019B                     	;# 
  1624  019C                     	;# 
  1625  019C                     	;# 
  1626  019C                     	;# 
  1627  019D                     	;# 
  1628  019D                     	;# 
  1629  019D                     	;# 
  1630  019E                     	;# 
  1631  019E                     	;# 
  1632  019E                     	;# 
  1633  019F                     	;# 
  1634  019F                     	;# 
  1635  019F                     	;# 
  1636  019F                     	;# 
  1637  019F                     	;# 
  1638  020C                     	;# 
  1639  020E                     	;# 
  1640  0211                     	;# 
  1641  0211                     	;# 
  1642  0212                     	;# 
  1643  0212                     	;# 
  1644  0213                     	;# 
  1645  0213                     	;# 
  1646  0214                     	;# 
  1647  0214                     	;# 
  1648  0215                     	;# 
  1649  0215                     	;# 
  1650  0215                     	;# 
  1651  0215                     	;# 
  1652  0216                     	;# 
  1653  0216                     	;# 
  1654  0217                     	;# 
  1655  0217                     	;# 
  1656  0219                     	;# 
  1657  021A                     	;# 
  1658  021B                     	;# 
  1659  021C                     	;# 
  1660  021D                     	;# 
  1661  021D                     	;# 
  1662  021E                     	;# 
  1663  021F                     	;# 
  1664  028C                     	;# 
  1665  028E                     	;# 
  1666  0291                     	;# 
  1667  0291                     	;# 
  1668  0292                     	;# 
  1669  0293                     	;# 
  1670  0294                     	;# 
  1671  0295                     	;# 
  1672  0295                     	;# 
  1673  0296                     	;# 
  1674  0297                     	;# 
  1675  0298                     	;# 
  1676  029F                     	;# 
  1677  030C                     	;# 
  1678  030E                     	;# 
  1679  0311                     	;# 
  1680  0311                     	;# 
  1681  0312                     	;# 
  1682  0313                     	;# 
  1683  0314                     	;# 
  1684  0315                     	;# 
  1685  0315                     	;# 
  1686  0316                     	;# 
  1687  0317                     	;# 
  1688  0318                     	;# 
  1689  038C                     	;# 
  1690  038E                     	;# 
  1691  0391                     	;# 
  1692  0392                     	;# 
  1693  0393                     	;# 
  1694  0397                     	;# 
  1695  0398                     	;# 
  1696  0399                     	;# 
  1697  039A                     	;# 
  1698  039C                     	;# 
  1699  039D                     	;# 
  1700  039E                     	;# 
  1701  039F                     	;# 
  1702  0411                     	;# 
  1703  0411                     	;# 
  1704  0412                     	;# 
  1705  0413                     	;# 
  1706  0414                     	;# 
  1707  0415                     	;# 
  1708  0416                     	;# 
  1709  0417                     	;# 
  1710  0418                     	;# 
  1711  0418                     	;# 
  1712  0419                     	;# 
  1713  041A                     	;# 
  1714  041B                     	;# 
  1715  041C                     	;# 
  1716  041D                     	;# 
  1717  041E                     	;# 
  1718  041F                     	;# 
  1719  0498                     	;# 
  1720  0498                     	;# 
  1721  0499                     	;# 
  1722  049A                     	;# 
  1723  049B                     	;# 
  1724  049B                     	;# 
  1725  049C                     	;# 
  1726  049D                     	;# 
  1727  049E                     	;# 
  1728  049F                     	;# 
  1729  0617                     	;# 
  1730  0618                     	;# 
  1731  0619                     	;# 
  1732  0619                     	;# 
  1733  061A                     	;# 
  1734  061B                     	;# 
  1735  061C                     	;# 
  1736  061C                     	;# 
  1737  061F                     	;# 
  1738  0691                     	;# 
  1739  0692                     	;# 
  1740  0693                     	;# 
  1741  0694                     	;# 
  1742  0695                     	;# 
  1743  0696                     	;# 
  1744  0697                     	;# 
  1745  0698                     	;# 
  1746  0699                     	;# 
  1747  0711                     	;# 
  1748  0712                     	;# 
  1749  0713                     	;# 
  1750  0714                     	;# 
  1751  0715                     	;# 
  1752  0716                     	;# 
  1753  0717                     	;# 
  1754  0718                     	;# 
  1755  0719                     	;# 
  1756  0891                     	;# 
  1757  0891                     	;# 
  1758  0891                     	;# 
  1759  0891                     	;# 
  1760  0891                     	;# 
  1761  0891                     	;# 
  1762  0892                     	;# 
  1763  0892                     	;# 
  1764  0892                     	;# 
  1765  0893                     	;# 
  1766  0893                     	;# 
  1767  0893                     	;# 
  1768  0893                     	;# 
  1769  0893                     	;# 
  1770  0893                     	;# 
  1771  0894                     	;# 
  1772  0894                     	;# 
  1773  0894                     	;# 
  1774  0895                     	;# 
  1775  0895                     	;# 
  1776  0895                     	;# 
  1777  0896                     	;# 
  1778  0896                     	;# 
  1779  0896                     	;# 
  1780  089B                     	;# 
  1781  0911                     	;# 
  1782  0912                     	;# 
  1783  0913                     	;# 
  1784  0914                     	;# 
  1785  0915                     	;# 
  1786  0916                     	;# 
  1787  0918                     	;# 
  1788  0919                     	;# 
  1789  091A                     	;# 
  1790  091B                     	;# 
  1791  091C                     	;# 
  1792  091D                     	;# 
  1793  091E                     	;# 
  1794  091F                     	;# 
  1795  0E0F                     	;# 
  1796  0E10                     	;# 
  1797  0E11                     	;# 
  1798  0E12                     	;# 
  1799  0E13                     	;# 
  1800  0E14                     	;# 
  1801  0E15                     	;# 
  1802  0E16                     	;# 
  1803  0E17                     	;# 
  1804  0E18                     	;# 
  1805  0E19                     	;# 
  1806  0E1A                     	;# 
  1807  0E1B                     	;# 
  1808  0E1C                     	;# 
  1809  0E1D                     	;# 
  1810  0E1E                     	;# 
  1811  0E1F                     	;# 
  1812  0E20                     	;# 
  1813  0E21                     	;# 
  1814  0E22                     	;# 
  1815  0E24                     	;# 
  1816  0E25                     	;# 
  1817  0E28                     	;# 
  1818  0E29                     	;# 
  1819  0E2A                     	;# 
  1820  0E2B                     	;# 
  1821  0E2C                     	;# 
  1822  0E2D                     	;# 
  1823  0E2E                     	;# 
  1824  0E2F                     	;# 
  1825  0E90                     	;# 
  1826  0E91                     	;# 
  1827  0E92                     	;# 
  1828  0E94                     	;# 
  1829  0E95                     	;# 
  1830  0EA0                     	;# 
  1831  0EA1                     	;# 
  1832  0EA2                     	;# 
  1833  0EA3                     	;# 
  1834  0EA4                     	;# 
  1835  0EA5                     	;# 
  1836  0F0F                     	;# 
  1837  0F10                     	;# 
  1838  0F11                     	;# 
  1839  0F12                     	;# 
  1840  0F13                     	;# 
  1841  0F14                     	;# 
  1842  0F15                     	;# 
  1843  0F16                     	;# 
  1844  0F17                     	;# 
  1845  0F18                     	;# 
  1846  0F19                     	;# 
  1847  0F1A                     	;# 
  1848  0F1B                     	;# 
  1849  0F1C                     	;# 
  1850  0F1D                     	;# 
  1851  0F1E                     	;# 
  1852  0F1F                     	;# 
  1853  0F20                     	;# 
  1854  0F21                     	;# 
  1855  0F22                     	;# 
  1856  0F23                     	;# 
  1857  0F24                     	;# 
  1858  0F25                     	;# 
  1859  0F26                     	;# 
  1860  0F27                     	;# 
  1861  0F28                     	;# 
  1862  0F29                     	;# 
  1863  0F2A                     	;# 
  1864  0F2B                     	;# 
  1865  0F2C                     	;# 
  1866  0F2D                     	;# 
  1867  0F2E                     	;# 
  1868  0F2F                     	;# 
  1869  0F30                     	;# 
  1870  0F31                     	;# 
  1871  0F32                     	;# 
  1872  0F33                     	;# 
  1873  0F34                     	;# 
  1874  0F35                     	;# 
  1875  0F36                     	;# 
  1876  0F37                     	;# 
  1877  0FE4                     	;# 
  1878  0FE5                     	;# 
  1879  0FE6                     	;# 
  1880  0FE7                     	;# 
  1881  0FE8                     	;# 
  1882  0FE9                     	;# 
  1883  0FEA                     	;# 
  1884  0FEB                     	;# 
  1885  0FED                     	;# 
  1886  0FEE                     	;# 
  1887  0FEF                     	;# 
  1888  0000                     	;# 
  1889  0001                     	;# 
  1890  0002                     	;# 
  1891  0003                     	;# 
  1892  0004                     	;# 
  1893  0005                     	;# 
  1894  0006                     	;# 
  1895  0007                     	;# 
  1896  0008                     	;# 
  1897  0009                     	;# 
  1898  000A                     	;# 
  1899  000B                     	;# 
  1900  000C                     	;# 
  1901  000E                     	;# 
  1902  0010                     	;# 
  1903  0011                     	;# 
  1904  0012                     	;# 
  1905  0013                     	;# 
  1906  0014                     	;# 
  1907  0015                     	;# 
  1908  0015                     	;# 
  1909  0016                     	;# 
  1910  0016                     	;# 
  1911  0017                     	;# 
  1912  0018                     	;# 
  1913  0019                     	;# 
  1914  0019                     	;# 
  1915  001A                     	;# 
  1916  001B                     	;# 
  1917  001C                     	;# 
  1918  001D                     	;# 
  1919  001E                     	;# 
  1920  001F                     	;# 
  1921  008C                     	;# 
  1922  008E                     	;# 
  1923  0090                     	;# 
  1924  0091                     	;# 
  1925  0092                     	;# 
  1926  0093                     	;# 
  1927  0094                     	;# 
  1928  0097                     	;# 
  1929  009B                     	;# 
  1930  009B                     	;# 
  1931  009C                     	;# 
  1932  009D                     	;# 
  1933  009E                     	;# 
  1934  009F                     	;# 
  1935  010C                     	;# 
  1936  010E                     	;# 
  1937  0111                     	;# 
  1938  0112                     	;# 
  1939  0113                     	;# 
  1940  0114                     	;# 
  1941  0115                     	;# 
  1942  0116                     	;# 
  1943  0117                     	;# 
  1944  0118                     	;# 
  1945  0119                     	;# 
  1946  018C                     	;# 
  1947  018E                     	;# 
  1948  0197                     	;# 
  1949  0199                     	;# 
  1950  0199                     	;# 
  1951  0199                     	;# 
  1952  019A                     	;# 
  1953  019A                     	;# 
  1954  019A                     	;# 
  1955  019B                     	;# 
  1956  019B                     	;# 
  1957  019B                     	;# 
  1958  019B                     	;# 
  1959  019B                     	;# 
  1960  019C                     	;# 
  1961  019C                     	;# 
  1962  019C                     	;# 
  1963  019D                     	;# 
  1964  019D                     	;# 
  1965  019D                     	;# 
  1966  019E                     	;# 
  1967  019E                     	;# 
  1968  019E                     	;# 
  1969  019F                     	;# 
  1970  019F                     	;# 
  1971  019F                     	;# 
  1972  019F                     	;# 
  1973  019F                     	;# 
  1974  020C                     	;# 
  1975  020E                     	;# 
  1976  0211                     	;# 
  1977  0211                     	;# 
  1978  0212                     	;# 
  1979  0212                     	;# 
  1980  0213                     	;# 
  1981  0213                     	;# 
  1982  0214                     	;# 
  1983  0214                     	;# 
  1984  0215                     	;# 
  1985  0215                     	;# 
  1986  0215                     	;# 
  1987  0215                     	;# 
  1988  0216                     	;# 
  1989  0216                     	;# 
  1990  0217                     	;# 
  1991  0217                     	;# 
  1992  0219                     	;# 
  1993  021A                     	;# 
  1994  021B                     	;# 
  1995  021C                     	;# 
  1996  021D                     	;# 
  1997  021D                     	;# 
  1998  021E                     	;# 
  1999  021F                     	;# 
  2000  028C                     	;# 
  2001  028E                     	;# 
  2002  0291                     	;# 
  2003  0291                     	;# 
  2004  0292                     	;# 
  2005  0293                     	;# 
  2006  0294                     	;# 
  2007  0295                     	;# 
  2008  0295                     	;# 
  2009  0296                     	;# 
  2010  0297                     	;# 
  2011  0298                     	;# 
  2012  029F                     	;# 
  2013  030C                     	;# 
  2014  030E                     	;# 
  2015  0311                     	;# 
  2016  0311                     	;# 
  2017  0312                     	;# 
  2018  0313                     	;# 
  2019  0314                     	;# 
  2020  0315                     	;# 
  2021  0315                     	;# 
  2022  0316                     	;# 
  2023  0317                     	;# 
  2024  0318                     	;# 
  2025  038C                     	;# 
  2026  038E                     	;# 
  2027  0391                     	;# 
  2028  0392                     	;# 
  2029  0393                     	;# 
  2030  0397                     	;# 
  2031  0398                     	;# 
  2032  0399                     	;# 
  2033  039A                     	;# 
  2034  039C                     	;# 
  2035  039D                     	;# 
  2036  039E                     	;# 
  2037  039F                     	;# 
  2038  0411                     	;# 
  2039  0411                     	;# 
  2040  0412                     	;# 
  2041  0413                     	;# 
  2042  0414                     	;# 
  2043  0415                     	;# 
  2044  0416                     	;# 
  2045  0417                     	;# 
  2046  0418                     	;# 
  2047  0418                     	;# 
  2048  0419                     	;# 
  2049  041A                     	;# 
  2050  041B                     	;# 
  2051  041C                     	;# 
  2052  041D                     	;# 
  2053  041E                     	;# 
  2054  041F                     	;# 
  2055  0498                     	;# 
  2056  0498                     	;# 
  2057  0499                     	;# 
  2058  049A                     	;# 
  2059  049B                     	;# 
  2060  049B                     	;# 
  2061  049C                     	;# 
  2062  049D                     	;# 
  2063  049E                     	;# 
  2064  049F                     	;# 
  2065  0617                     	;# 
  2066  0618                     	;# 
  2067  0619                     	;# 
  2068  0619                     	;# 
  2069  061A                     	;# 
  2070  061B                     	;# 
  2071  061C                     	;# 
  2072  061C                     	;# 
  2073  061F                     	;# 
  2074  0691                     	;# 
  2075  0692                     	;# 
  2076  0693                     	;# 
  2077  0694                     	;# 
  2078  0695                     	;# 
  2079  0696                     	;# 
  2080  0697                     	;# 
  2081  0698                     	;# 
  2082  0699                     	;# 
  2083  0711                     	;# 
  2084  0712                     	;# 
  2085  0713                     	;# 
  2086  0714                     	;# 
  2087  0715                     	;# 
  2088  0716                     	;# 
  2089  0717                     	;# 
  2090  0718                     	;# 
  2091  0719                     	;# 
  2092  0891                     	;# 
  2093  0891                     	;# 
  2094  0891                     	;# 
  2095  0891                     	;# 
  2096  0891                     	;# 
  2097  0891                     	;# 
  2098  0892                     	;# 
  2099  0892                     	;# 
  2100  0892                     	;# 
  2101  0893                     	;# 
  2102  0893                     	;# 
  2103  0893                     	;# 
  2104  0893                     	;# 
  2105  0893                     	;# 
  2106  0893                     	;# 
  2107  0894                     	;# 
  2108  0894                     	;# 
  2109  0894                     	;# 
  2110  0895                     	;# 
  2111  0895                     	;# 
  2112  0895                     	;# 
  2113  0896                     	;# 
  2114  0896                     	;# 
  2115  0896                     	;# 
  2116  089B                     	;# 
  2117  0911                     	;# 
  2118  0912                     	;# 
  2119  0913                     	;# 
  2120  0914                     	;# 
  2121  0915                     	;# 
  2122  0916                     	;# 
  2123  0918                     	;# 
  2124  0919                     	;# 
  2125  091A                     	;# 
  2126  091B                     	;# 
  2127  091C                     	;# 
  2128  091D                     	;# 
  2129  091E                     	;# 
  2130  091F                     	;# 
  2131  0E0F                     	;# 
  2132  0E10                     	;# 
  2133  0E11                     	;# 
  2134  0E12                     	;# 
  2135  0E13                     	;# 
  2136  0E14                     	;# 
  2137  0E15                     	;# 
  2138  0E16                     	;# 
  2139  0E17                     	;# 
  2140  0E18                     	;# 
  2141  0E19                     	;# 
  2142  0E1A                     	;# 
  2143  0E1B                     	;# 
  2144  0E1C                     	;# 
  2145  0E1D                     	;# 
  2146  0E1E                     	;# 
  2147  0E1F                     	;# 
  2148  0E20                     	;# 
  2149  0E21                     	;# 
  2150  0E22                     	;# 
  2151  0E24                     	;# 
  2152  0E25                     	;# 
  2153  0E28                     	;# 
  2154  0E29                     	;# 
  2155  0E2A                     	;# 
  2156  0E2B                     	;# 
  2157  0E2C                     	;# 
  2158  0E2D                     	;# 
  2159  0E2E                     	;# 
  2160  0E2F                     	;# 
  2161  0E90                     	;# 
  2162  0E91                     	;# 
  2163  0E92                     	;# 
  2164  0E94                     	;# 
  2165  0E95                     	;# 
  2166  0EA0                     	;# 
  2167  0EA1                     	;# 
  2168  0EA2                     	;# 
  2169  0EA3                     	;# 
  2170  0EA4                     	;# 
  2171  0EA5                     	;# 
  2172  0F0F                     	;# 
  2173  0F10                     	;# 
  2174  0F11                     	;# 
  2175  0F12                     	;# 
  2176  0F13                     	;# 
  2177  0F14                     	;# 
  2178  0F15                     	;# 
  2179  0F16                     	;# 
  2180  0F17                     	;# 
  2181  0F18                     	;# 
  2182  0F19                     	;# 
  2183  0F1A                     	;# 
  2184  0F1B                     	;# 
  2185  0F1C                     	;# 
  2186  0F1D                     	;# 
  2187  0F1E                     	;# 
  2188  0F1F                     	;# 
  2189  0F20                     	;# 
  2190  0F21                     	;# 
  2191  0F22                     	;# 
  2192  0F23                     	;# 
  2193  0F24                     	;# 
  2194  0F25                     	;# 
  2195  0F26                     	;# 
  2196  0F27                     	;# 
  2197  0F28                     	;# 
  2198  0F29                     	;# 
  2199  0F2A                     	;# 
  2200  0F2B                     	;# 
  2201  0F2C                     	;# 
  2202  0F2D                     	;# 
  2203  0F2E                     	;# 
  2204  0F2F                     	;# 
  2205  0F30                     	;# 
  2206  0F31                     	;# 
  2207  0F32                     	;# 
  2208  0F33                     	;# 
  2209  0F34                     	;# 
  2210  0F35                     	;# 
  2211  0F36                     	;# 
  2212  0F37                     	;# 
  2213  0FE4                     	;# 
  2214  0FE5                     	;# 
  2215  0FE6                     	;# 
  2216  0FE7                     	;# 
  2217  0FE8                     	;# 
  2218  0FE9                     	;# 
  2219  0FEA                     	;# 
  2220  0FEB                     	;# 
  2221  0FED                     	;# 
  2222  0FEE                     	;# 
  2223  0FEF                     	;# 
  2224  0000                     	;# 
  2225  0001                     	;# 
  2226  0002                     	;# 
  2227  0003                     	;# 
  2228  0004                     	;# 
  2229  0005                     	;# 
  2230  0006                     	;# 
  2231  0007                     	;# 
  2232  0008                     	;# 
  2233  0009                     	;# 
  2234  000A                     	;# 
  2235  000B                     	;# 
  2236  000C                     	;# 
  2237  000E                     	;# 
  2238  0010                     	;# 
  2239  0011                     	;# 
  2240  0012                     	;# 
  2241  0013                     	;# 
  2242  0014                     	;# 
  2243  0015                     	;# 
  2244  0015                     	;# 
  2245  0016                     	;# 
  2246  0016                     	;# 
  2247  0017                     	;# 
  2248  0018                     	;# 
  2249  0019                     	;# 
  2250  0019                     	;# 
  2251  001A                     	;# 
  2252  001B                     	;# 
  2253  001C                     	;# 
  2254  001D                     	;# 
  2255  001E                     	;# 
  2256  001F                     	;# 
  2257  008C                     	;# 
  2258  008E                     	;# 
  2259  0090                     	;# 
  2260  0091                     	;# 
  2261  0092                     	;# 
  2262  0093                     	;# 
  2263  0094                     	;# 
  2264  0097                     	;# 
  2265  009B                     	;# 
  2266  009B                     	;# 
  2267  009C                     	;# 
  2268  009D                     	;# 
  2269  009E                     	;# 
  2270  009F                     	;# 
  2271  010C                     	;# 
  2272  010E                     	;# 
  2273  0111                     	;# 
  2274  0112                     	;# 
  2275  0113                     	;# 
  2276  0114                     	;# 
  2277  0115                     	;# 
  2278  0116                     	;# 
  2279  0117                     	;# 
  2280  0118                     	;# 
  2281  0119                     	;# 
  2282  018C                     	;# 
  2283  018E                     	;# 
  2284  0197                     	;# 
  2285  0199                     	;# 
  2286  0199                     	;# 
  2287  0199                     	;# 
  2288  019A                     	;# 
  2289  019A                     	;# 
  2290  019A                     	;# 
  2291  019B                     	;# 
  2292  019B                     	;# 
  2293  019B                     	;# 
  2294  019B                     	;# 
  2295  019B                     	;# 
  2296  019C                     	;# 
  2297  019C                     	;# 
  2298  019C                     	;# 
  2299  019D                     	;# 
  2300  019D                     	;# 
  2301  019D                     	;# 
  2302  019E                     	;# 
  2303  019E                     	;# 
  2304  019E                     	;# 
  2305  019F                     	;# 
  2306  019F                     	;# 
  2307  019F                     	;# 
  2308  019F                     	;# 
  2309  019F                     	;# 
  2310  020C                     	;# 
  2311  020E                     	;# 
  2312  0211                     	;# 
  2313  0211                     	;# 
  2314  0212                     	;# 
  2315  0212                     	;# 
  2316  0213                     	;# 
  2317  0213                     	;# 
  2318  0214                     	;# 
  2319  0214                     	;# 
  2320  0215                     	;# 
  2321  0215                     	;# 
  2322  0215                     	;# 
  2323  0215                     	;# 
  2324  0216                     	;# 
  2325  0216                     	;# 
  2326  0217                     	;# 
  2327  0217                     	;# 
  2328  0219                     	;# 
  2329  021A                     	;# 
  2330  021B                     	;# 
  2331  021C                     	;# 
  2332  021D                     	;# 
  2333  021D                     	;# 
  2334  021E                     	;# 
  2335  021F                     	;# 
  2336  028C                     	;# 
  2337  028E                     	;# 
  2338  0291                     	;# 
  2339  0291                     	;# 
  2340  0292                     	;# 
  2341  0293                     	;# 
  2342  0294                     	;# 
  2343  0295                     	;# 
  2344  0295                     	;# 
  2345  0296                     	;# 
  2346  0297                     	;# 
  2347  0298                     	;# 
  2348  029F                     	;# 
  2349  030C                     	;# 
  2350  030E                     	;# 
  2351  0311                     	;# 
  2352  0311                     	;# 
  2353  0312                     	;# 
  2354  0313                     	;# 
  2355  0314                     	;# 
  2356  0315                     	;# 
  2357  0315                     	;# 
  2358  0316                     	;# 
  2359  0317                     	;# 
  2360  0318                     	;# 
  2361  038C                     	;# 
  2362  038E                     	;# 
  2363  0391                     	;# 
  2364  0392                     	;# 
  2365  0393                     	;# 
  2366  0397                     	;# 
  2367  0398                     	;# 
  2368  0399                     	;# 
  2369  039A                     	;# 
  2370  039C                     	;# 
  2371  039D                     	;# 
  2372  039E                     	;# 
  2373  039F                     	;# 
  2374  0411                     	;# 
  2375  0411                     	;# 
  2376  0412                     	;# 
  2377  0413                     	;# 
  2378  0414                     	;# 
  2379  0415                     	;# 
  2380  0416                     	;# 
  2381  0417                     	;# 
  2382  0418                     	;# 
  2383  0418                     	;# 
  2384  0419                     	;# 
  2385  041A                     	;# 
  2386  041B                     	;# 
  2387  041C                     	;# 
  2388  041D                     	;# 
  2389  041E                     	;# 
  2390  041F                     	;# 
  2391  0498                     	;# 
  2392  0498                     	;# 
  2393  0499                     	;# 
  2394  049A                     	;# 
  2395  049B                     	;# 
  2396  049B                     	;# 
  2397  049C                     	;# 
  2398  049D                     	;# 
  2399  049E                     	;# 
  2400  049F                     	;# 
  2401  0617                     	;# 
  2402  0618                     	;# 
  2403  0619                     	;# 
  2404  0619                     	;# 
  2405  061A                     	;# 
  2406  061B                     	;# 
  2407  061C                     	;# 
  2408  061C                     	;# 
  2409  061F                     	;# 
  2410  0691                     	;# 
  2411  0692                     	;# 
  2412  0693                     	;# 
  2413  0694                     	;# 
  2414  0695                     	;# 
  2415  0696                     	;# 
  2416  0697                     	;# 
  2417  0698                     	;# 
  2418  0699                     	;# 
  2419  0711                     	;# 
  2420  0712                     	;# 
  2421  0713                     	;# 
  2422  0714                     	;# 
  2423  0715                     	;# 
  2424  0716                     	;# 
  2425  0717                     	;# 
  2426  0718                     	;# 
  2427  0719                     	;# 
  2428  0891                     	;# 
  2429  0891                     	;# 
  2430  0891                     	;# 
  2431  0891                     	;# 
  2432  0891                     	;# 
  2433  0891                     	;# 
  2434  0892                     	;# 
  2435  0892                     	;# 
  2436  0892                     	;# 
  2437  0893                     	;# 
  2438  0893                     	;# 
  2439  0893                     	;# 
  2440  0893                     	;# 
  2441  0893                     	;# 
  2442  0893                     	;# 
  2443  0894                     	;# 
  2444  0894                     	;# 
  2445  0894                     	;# 
  2446  0895                     	;# 
  2447  0895                     	;# 
  2448  0895                     	;# 
  2449  0896                     	;# 
  2450  0896                     	;# 
  2451  0896                     	;# 
  2452  089B                     	;# 
  2453  0911                     	;# 
  2454  0912                     	;# 
  2455  0913                     	;# 
  2456  0914                     	;# 
  2457  0915                     	;# 
  2458  0916                     	;# 
  2459  0918                     	;# 
  2460  0919                     	;# 
  2461  091A                     	;# 
  2462  091B                     	;# 
  2463  091C                     	;# 
  2464  091D                     	;# 
  2465  091E                     	;# 
  2466  091F                     	;# 
  2467  0E0F                     	;# 
  2468  0E10                     	;# 
  2469  0E11                     	;# 
  2470  0E12                     	;# 
  2471  0E13                     	;# 
  2472  0E14                     	;# 
  2473  0E15                     	;# 
  2474  0E16                     	;# 
  2475  0E17                     	;# 
  2476  0E18                     	;# 
  2477  0E19                     	;# 
  2478  0E1A                     	;# 
  2479  0E1B                     	;# 
  2480  0E1C                     	;# 
  2481  0E1D                     	;# 
  2482  0E1E                     	;# 
  2483  0E1F                     	;# 
  2484  0E20                     	;# 
  2485  0E21                     	;# 
  2486  0E22                     	;# 
  2487  0E24                     	;# 
  2488  0E25                     	;# 
  2489  0E28                     	;# 
  2490  0E29                     	;# 
  2491  0E2A                     	;# 
  2492  0E2B                     	;# 
  2493  0E2C                     	;# 
  2494  0E2D                     	;# 
  2495  0E2E                     	;# 
  2496  0E2F                     	;# 
  2497  0E90                     	;# 
  2498  0E91                     	;# 
  2499  0E92                     	;# 
  2500  0E94                     	;# 
  2501  0E95                     	;# 
  2502  0EA0                     	;# 
  2503  0EA1                     	;# 
  2504  0EA2                     	;# 
  2505  0EA3                     	;# 
  2506  0EA4                     	;# 
  2507  0EA5                     	;# 
  2508  0F0F                     	;# 
  2509  0F10                     	;# 
  2510  0F11                     	;# 
  2511  0F12                     	;# 
  2512  0F13                     	;# 
  2513  0F14                     	;# 
  2514  0F15                     	;# 
  2515  0F16                     	;# 
  2516  0F17                     	;# 
  2517  0F18                     	;# 
  2518  0F19                     	;# 
  2519  0F1A                     	;# 
  2520  0F1B                     	;# 
  2521  0F1C                     	;# 
  2522  0F1D                     	;# 
  2523  0F1E                     	;# 
  2524  0F1F                     	;# 
  2525  0F20                     	;# 
  2526  0F21                     	;# 
  2527  0F22                     	;# 
  2528  0F23                     	;# 
  2529  0F24                     	;# 
  2530  0F25                     	;# 
  2531  0F26                     	;# 
  2532  0F27                     	;# 
  2533  0F28                     	;# 
  2534  0F29                     	;# 
  2535  0F2A                     	;# 
  2536  0F2B                     	;# 
  2537  0F2C                     	;# 
  2538  0F2D                     	;# 
  2539  0F2E                     	;# 
  2540  0F2F                     	;# 
  2541  0F30                     	;# 
  2542  0F31                     	;# 
  2543  0F32                     	;# 
  2544  0F33                     	;# 
  2545  0F34                     	;# 
  2546  0F35                     	;# 
  2547  0F36                     	;# 
  2548  0F37                     	;# 
  2549  0FE4                     	;# 
  2550  0FE5                     	;# 
  2551  0FE6                     	;# 
  2552  0FE7                     	;# 
  2553  0FE8                     	;# 
  2554  0FE9                     	;# 
  2555  0FEA                     	;# 
  2556  0FEB                     	;# 
  2557  0FED                     	;# 
  2558  0FEE                     	;# 
  2559  0FEF                     	;# 
  2560  0000                     	;# 
  2561  0001                     	;# 
  2562  0002                     	;# 
  2563  0003                     	;# 
  2564  0004                     	;# 
  2565  0005                     	;# 
  2566  0006                     	;# 
  2567  0007                     	;# 
  2568  0008                     	;# 
  2569  0009                     	;# 
  2570  000A                     	;# 
  2571  000B                     	;# 
  2572  000C                     	;# 
  2573  000E                     	;# 
  2574  0010                     	;# 
  2575  0011                     	;# 
  2576  0012                     	;# 
  2577  0013                     	;# 
  2578  0014                     	;# 
  2579  0015                     	;# 
  2580  0015                     	;# 
  2581  0016                     	;# 
  2582  0016                     	;# 
  2583  0017                     	;# 
  2584  0018                     	;# 
  2585  0019                     	;# 
  2586  0019                     	;# 
  2587  001A                     	;# 
  2588  001B                     	;# 
  2589  001C                     	;# 
  2590  001D                     	;# 
  2591  001E                     	;# 
  2592  001F                     	;# 
  2593  008C                     	;# 
  2594  008E                     	;# 
  2595  0090                     	;# 
  2596  0091                     	;# 
  2597  0092                     	;# 
  2598  0093                     	;# 
  2599  0094                     	;# 
  2600  0097                     	;# 
  2601  009B                     	;# 
  2602  009B                     	;# 
  2603  009C                     	;# 
  2604  009D                     	;# 
  2605  009E                     	;# 
  2606  009F                     	;# 
  2607  010C                     	;# 
  2608  010E                     	;# 
  2609  0111                     	;# 
  2610  0112                     	;# 
  2611  0113                     	;# 
  2612  0114                     	;# 
  2613  0115                     	;# 
  2614  0116                     	;# 
  2615  0117                     	;# 
  2616  0118                     	;# 
  2617  0119                     	;# 
  2618  018C                     	;# 
  2619  018E                     	;# 
  2620  0197                     	;# 
  2621  0199                     	;# 
  2622  0199                     	;# 
  2623  0199                     	;# 
  2624  019A                     	;# 
  2625  019A                     	;# 
  2626  019A                     	;# 
  2627  019B                     	;# 
  2628  019B                     	;# 
  2629  019B                     	;# 
  2630  019B                     	;# 
  2631  019B                     	;# 
  2632  019C                     	;# 
  2633  019C                     	;# 
  2634  019C                     	;# 
  2635  019D                     	;# 
  2636  019D                     	;# 
  2637  019D                     	;# 
  2638  019E                     	;# 
  2639  019E                     	;# 
  2640  019E                     	;# 
  2641  019F                     	;# 
  2642  019F                     	;# 
  2643  019F                     	;# 
  2644  019F                     	;# 
  2645  019F                     	;# 
  2646  020C                     	;# 
  2647  020E                     	;# 
  2648  0211                     	;# 
  2649  0211                     	;# 
  2650  0212                     	;# 
  2651  0212                     	;# 
  2652  0213                     	;# 
  2653  0213                     	;# 
  2654  0214                     	;# 
  2655  0214                     	;# 
  2656  0215                     	;# 
  2657  0215                     	;# 
  2658  0215                     	;# 
  2659  0215                     	;# 
  2660  0216                     	;# 
  2661  0216                     	;# 
  2662  0217                     	;# 
  2663  0217                     	;# 
  2664  0219                     	;# 
  2665  021A                     	;# 
  2666  021B                     	;# 
  2667  021C                     	;# 
  2668  021D                     	;# 
  2669  021D                     	;# 
  2670  021E                     	;# 
  2671  021F                     	;# 
  2672  028C                     	;# 
  2673  028E                     	;# 
  2674  0291                     	;# 
  2675  0291                     	;# 
  2676  0292                     	;# 
  2677  0293                     	;# 
  2678  0294                     	;# 
  2679  0295                     	;# 
  2680  0295                     	;# 
  2681  0296                     	;# 
  2682  0297                     	;# 
  2683  0298                     	;# 
  2684  029F                     	;# 
  2685  030C                     	;# 
  2686  030E                     	;# 
  2687  0311                     	;# 
  2688  0311                     	;# 
  2689  0312                     	;# 
  2690  0313                     	;# 
  2691  0314                     	;# 
  2692  0315                     	;# 
  2693  0315                     	;# 
  2694  0316                     	;# 
  2695  0317                     	;# 
  2696  0318                     	;# 
  2697  038C                     	;# 
  2698  038E                     	;# 
  2699  0391                     	;# 
  2700  0392                     	;# 
  2701  0393                     	;# 
  2702  0397                     	;# 
  2703  0398                     	;# 
  2704  0399                     	;# 
  2705  039A                     	;# 
  2706  039C                     	;# 
  2707  039D                     	;# 
  2708  039E                     	;# 
  2709  039F                     	;# 
  2710  0411                     	;# 
  2711  0411                     	;# 
  2712  0412                     	;# 
  2713  0413                     	;# 
  2714  0414                     	;# 
  2715  0415                     	;# 
  2716  0416                     	;# 
  2717  0417                     	;# 
  2718  0418                     	;# 
  2719  0418                     	;# 
  2720  0419                     	;# 
  2721  041A                     	;# 
  2722  041B                     	;# 
  2723  041C                     	;# 
  2724  041D                     	;# 
  2725  041E                     	;# 
  2726  041F                     	;# 
  2727  0498                     	;# 
  2728  0498                     	;# 
  2729  0499                     	;# 
  2730  049A                     	;# 
  2731  049B                     	;# 
  2732  049B                     	;# 
  2733  049C                     	;# 
  2734  049D                     	;# 
  2735  049E                     	;# 
  2736  049F                     	;# 
  2737  0617                     	;# 
  2738  0618                     	;# 
  2739  0619                     	;# 
  2740  0619                     	;# 
  2741  061A                     	;# 
  2742  061B                     	;# 
  2743  061C                     	;# 
  2744  061C                     	;# 
  2745  061F                     	;# 
  2746  0691                     	;# 
  2747  0692                     	;# 
  2748  0693                     	;# 
  2749  0694                     	;# 
  2750  0695                     	;# 
  2751  0696                     	;# 
  2752  0697                     	;# 
  2753  0698                     	;# 
  2754  0699                     	;# 
  2755  0711                     	;# 
  2756  0712                     	;# 
  2757  0713                     	;# 
  2758  0714                     	;# 
  2759  0715                     	;# 
  2760  0716                     	;# 
  2761  0717                     	;# 
  2762  0718                     	;# 
  2763  0719                     	;# 
  2764  0891                     	;# 
  2765  0891                     	;# 
  2766  0891                     	;# 
  2767  0891                     	;# 
  2768  0891                     	;# 
  2769  0891                     	;# 
  2770  0892                     	;# 
  2771  0892                     	;# 
  2772  0892                     	;# 
  2773  0893                     	;# 
  2774  0893                     	;# 
  2775  0893                     	;# 
  2776  0893                     	;# 
  2777  0893                     	;# 
  2778  0893                     	;# 
  2779  0894                     	;# 
  2780  0894                     	;# 
  2781  0894                     	;# 
  2782  0895                     	;# 
  2783  0895                     	;# 
  2784  0895                     	;# 
  2785  0896                     	;# 
  2786  0896                     	;# 
  2787  0896                     	;# 
  2788  089B                     	;# 
  2789  0911                     	;# 
  2790  0912                     	;# 
  2791  0913                     	;# 
  2792  0914                     	;# 
  2793  0915                     	;# 
  2794  0916                     	;# 
  2795  0918                     	;# 
  2796  0919                     	;# 
  2797  091A                     	;# 
  2798  091B                     	;# 
  2799  091C                     	;# 
  2800  091D                     	;# 
  2801  091E                     	;# 
  2802  091F                     	;# 
  2803  0E0F                     	;# 
  2804  0E10                     	;# 
  2805  0E11                     	;# 
  2806  0E12                     	;# 
  2807  0E13                     	;# 
  2808  0E14                     	;# 
  2809  0E15                     	;# 
  2810  0E16                     	;# 
  2811  0E17                     	;# 
  2812  0E18                     	;# 
  2813  0E19                     	;# 
  2814  0E1A                     	;# 
  2815  0E1B                     	;# 
  2816  0E1C                     	;# 
  2817  0E1D                     	;# 
  2818  0E1E                     	;# 
  2819  0E1F                     	;# 
  2820  0E20                     	;# 
  2821  0E21                     	;# 
  2822  0E22                     	;# 
  2823  0E24                     	;# 
  2824  0E25                     	;# 
  2825  0E28                     	;# 
  2826  0E29                     	;# 
  2827  0E2A                     	;# 
  2828  0E2B                     	;# 
  2829  0E2C                     	;# 
  2830  0E2D                     	;# 
  2831  0E2E                     	;# 
  2832  0E2F                     	;# 
  2833  0E90                     	;# 
  2834  0E91                     	;# 
  2835  0E92                     	;# 
  2836  0E94                     	;# 
  2837  0E95                     	;# 
  2838  0EA0                     	;# 
  2839  0EA1                     	;# 
  2840  0EA2                     	;# 
  2841  0EA3                     	;# 
  2842  0EA4                     	;# 
  2843  0EA5                     	;# 
  2844  0F0F                     	;# 
  2845  0F10                     	;# 
  2846  0F11                     	;# 
  2847  0F12                     	;# 
  2848  0F13                     	;# 
  2849  0F14                     	;# 
  2850  0F15                     	;# 
  2851  0F16                     	;# 
  2852  0F17                     	;# 
  2853  0F18                     	;# 
  2854  0F19                     	;# 
  2855  0F1A                     	;# 
  2856  0F1B                     	;# 
  2857  0F1C                     	;# 
  2858  0F1D                     	;# 
  2859  0F1E                     	;# 
  2860  0F1F                     	;# 
  2861  0F20                     	;# 
  2862  0F21                     	;# 
  2863  0F22                     	;# 
  2864  0F23                     	;# 
  2865  0F24                     	;# 
  2866  0F25                     	;# 
  2867  0F26                     	;# 
  2868  0F27                     	;# 
  2869  0F28                     	;# 
  2870  0F29                     	;# 
  2871  0F2A                     	;# 
  2872  0F2B                     	;# 
  2873  0F2C                     	;# 
  2874  0F2D                     	;# 
  2875  0F2E                     	;# 
  2876  0F2F                     	;# 
  2877  0F30                     	;# 
  2878  0F31                     	;# 
  2879  0F32                     	;# 
  2880  0F33                     	;# 
  2881  0F34                     	;# 
  2882  0F35                     	;# 
  2883  0F36                     	;# 
  2884  0F37                     	;# 
  2885  0FE4                     	;# 
  2886  0FE5                     	;# 
  2887  0FE6                     	;# 
  2888  0FE7                     	;# 
  2889  0FE8                     	;# 
  2890  0FE9                     	;# 
  2891  0FEA                     	;# 
  2892  0FEB                     	;# 
  2893  0FED                     	;# 
  2894  0FEE                     	;# 
  2895  0FEF                     	;# 
  2896  0000                     	;# 
  2897  0001                     	;# 
  2898  0002                     	;# 
  2899  0003                     	;# 
  2900  0004                     	;# 
  2901  0005                     	;# 
  2902  0006                     	;# 
  2903  0007                     	;# 
  2904  0008                     	;# 
  2905  0009                     	;# 
  2906  000A                     	;# 
  2907  000B                     	;# 
  2908  000C                     	;# 
  2909  000E                     	;# 
  2910  0010                     	;# 
  2911  0011                     	;# 
  2912  0012                     	;# 
  2913  0013                     	;# 
  2914  0014                     	;# 
  2915  0015                     	;# 
  2916  0015                     	;# 
  2917  0016                     	;# 
  2918  0016                     	;# 
  2919  0017                     	;# 
  2920  0018                     	;# 
  2921  0019                     	;# 
  2922  0019                     	;# 
  2923  001A                     	;# 
  2924  001B                     	;# 
  2925  001C                     	;# 
  2926  001D                     	;# 
  2927  001E                     	;# 
  2928  001F                     	;# 
  2929  008C                     	;# 
  2930  008E                     	;# 
  2931  0090                     	;# 
  2932  0091                     	;# 
  2933  0092                     	;# 
  2934  0093                     	;# 
  2935  0094                     	;# 
  2936  0097                     	;# 
  2937  009B                     	;# 
  2938  009B                     	;# 
  2939  009C                     	;# 
  2940  009D                     	;# 
  2941  009E                     	;# 
  2942  009F                     	;# 
  2943  010C                     	;# 
  2944  010E                     	;# 
  2945  0111                     	;# 
  2946  0112                     	;# 
  2947  0113                     	;# 
  2948  0114                     	;# 
  2949  0115                     	;# 
  2950  0116                     	;# 
  2951  0117                     	;# 
  2952  0118                     	;# 
  2953  0119                     	;# 
  2954  018C                     	;# 
  2955  018E                     	;# 
  2956  0197                     	;# 
  2957  0199                     	;# 
  2958  0199                     	;# 
  2959  0199                     	;# 
  2960  019A                     	;# 
  2961  019A                     	;# 
  2962  019A                     	;# 
  2963  019B                     	;# 
  2964  019B                     	;# 
  2965  019B                     	;# 
  2966  019B                     	;# 
  2967  019B                     	;# 
  2968  019C                     	;# 
  2969  019C                     	;# 
  2970  019C                     	;# 
  2971  019D                     	;# 
  2972  019D                     	;# 
  2973  019D                     	;# 
  2974  019E                     	;# 
  2975  019E                     	;# 
  2976  019E                     	;# 
  2977  019F                     	;# 
  2978  019F                     	;# 
  2979  019F                     	;# 
  2980  019F                     	;# 
  2981  019F                     	;# 
  2982  020C                     	;# 
  2983  020E                     	;# 
  2984  0211                     	;# 
  2985  0211                     	;# 
  2986  0212                     	;# 
  2987  0212                     	;# 
  2988  0213                     	;# 
  2989  0213                     	;# 
  2990  0214                     	;# 
  2991  0214                     	;# 
  2992  0215                     	;# 
  2993  0215                     	;# 
  2994  0215                     	;# 
  2995  0215                     	;# 
  2996  0216                     	;# 
  2997  0216                     	;# 
  2998  0217                     	;# 
  2999  0217                     	;# 
  3000  0219                     	;# 
  3001  021A                     	;# 
  3002  021B                     	;# 
  3003  021C                     	;# 
  3004  021D                     	;# 
  3005  021D                     	;# 
  3006  021E                     	;# 
  3007  021F                     	;# 
  3008  028C                     	;# 
  3009  028E                     	;# 
  3010  0291                     	;# 
  3011  0291                     	;# 
  3012  0292                     	;# 
  3013  0293                     	;# 
  3014  0294                     	;# 
  3015  0295                     	;# 
  3016  0295                     	;# 
  3017  0296                     	;# 
  3018  0297                     	;# 
  3019  0298                     	;# 
  3020  029F                     	;# 
  3021  030C                     	;# 
  3022  030E                     	;# 
  3023  0311                     	;# 
  3024  0311                     	;# 
  3025  0312                     	;# 
  3026  0313                     	;# 
  3027  0314                     	;# 
  3028  0315                     	;# 
  3029  0315                     	;# 
  3030  0316                     	;# 
  3031  0317                     	;# 
  3032  0318                     	;# 
  3033  038C                     	;# 
  3034  038E                     	;# 
  3035  0391                     	;# 
  3036  0392                     	;# 
  3037  0393                     	;# 
  3038  0397                     	;# 
  3039  0398                     	;# 
  3040  0399                     	;# 
  3041  039A                     	;# 
  3042  039C                     	;# 
  3043  039D                     	;# 
  3044  039E                     	;# 
  3045  039F                     	;# 
  3046  0411                     	;# 
  3047  0411                     	;# 
  3048  0412                     	;# 
  3049  0413                     	;# 
  3050  0414                     	;# 
  3051  0415                     	;# 
  3052  0416                     	;# 
  3053  0417                     	;# 
  3054  0418                     	;# 
  3055  0418                     	;# 
  3056  0419                     	;# 
  3057  041A                     	;# 
  3058  041B                     	;# 
  3059  041C                     	;# 
  3060  041D                     	;# 
  3061  041E                     	;# 
  3062  041F                     	;# 
  3063  0498                     	;# 
  3064  0498                     	;# 
  3065  0499                     	;# 
  3066  049A                     	;# 
  3067  049B                     	;# 
  3068  049B                     	;# 
  3069  049C                     	;# 
  3070  049D                     	;# 
  3071  049E                     	;# 
  3072  049F                     	;# 
  3073  0617                     	;# 
  3074  0618                     	;# 
  3075  0619                     	;# 
  3076  0619                     	;# 
  3077  061A                     	;# 
  3078  061B                     	;# 
  3079  061C                     	;# 
  3080  061C                     	;# 
  3081  061F                     	;# 
  3082  0691                     	;# 
  3083  0692                     	;# 
  3084  0693                     	;# 
  3085  0694                     	;# 
  3086  0695                     	;# 
  3087  0696                     	;# 
  3088  0697                     	;# 
  3089  0698                     	;# 
  3090  0699                     	;# 
  3091  0711                     	;# 
  3092  0712                     	;# 
  3093  0713                     	;# 
  3094  0714                     	;# 
  3095  0715                     	;# 
  3096  0716                     	;# 
  3097  0717                     	;# 
  3098  0718                     	;# 
  3099  0719                     	;# 
  3100  0891                     	;# 
  3101  0891                     	;# 
  3102  0891                     	;# 
  3103  0891                     	;# 
  3104  0891                     	;# 
  3105  0891                     	;# 
  3106  0892                     	;# 
  3107  0892                     	;# 
  3108  0892                     	;# 
  3109  0893                     	;# 
  3110  0893                     	;# 
  3111  0893                     	;# 
  3112  0893                     	;# 
  3113  0893                     	;# 
  3114  0893                     	;# 
  3115  0894                     	;# 
  3116  0894                     	;# 
  3117  0894                     	;# 
  3118  0895                     	;# 
  3119  0895                     	;# 
  3120  0895                     	;# 
  3121  0896                     	;# 
  3122  0896                     	;# 
  3123  0896                     	;# 
  3124  089B                     	;# 
  3125  0911                     	;# 
  3126  0912                     	;# 
  3127  0913                     	;# 
  3128  0914                     	;# 
  3129  0915                     	;# 
  3130  0916                     	;# 
  3131  0918                     	;# 
  3132  0919                     	;# 
  3133  091A                     	;# 
  3134  091B                     	;# 
  3135  091C                     	;# 
  3136  091D                     	;# 
  3137  091E                     	;# 
  3138  091F                     	;# 
  3139  0E0F                     	;# 
  3140  0E10                     	;# 
  3141  0E11                     	;# 
  3142  0E12                     	;# 
  3143  0E13                     	;# 
  3144  0E14                     	;# 
  3145  0E15                     	;# 
  3146  0E16                     	;# 
  3147  0E17                     	;# 
  3148  0E18                     	;# 
  3149  0E19                     	;# 
  3150  0E1A                     	;# 
  3151  0E1B                     	;# 
  3152  0E1C                     	;# 
  3153  0E1D                     	;# 
  3154  0E1E                     	;# 
  3155  0E1F                     	;# 
  3156  0E20                     	;# 
  3157  0E21                     	;# 
  3158  0E22                     	;# 
  3159  0E24                     	;# 
  3160  0E25                     	;# 
  3161  0E28                     	;# 
  3162  0E29                     	;# 
  3163  0E2A                     	;# 
  3164  0E2B                     	;# 
  3165  0E2C                     	;# 
  3166  0E2D                     	;# 
  3167  0E2E                     	;# 
  3168  0E2F                     	;# 
  3169  0E90                     	;# 
  3170  0E91                     	;# 
  3171  0E92                     	;# 
  3172  0E94                     	;# 
  3173  0E95                     	;# 
  3174  0EA0                     	;# 
  3175  0EA1                     	;# 
  3176  0EA2                     	;# 
  3177  0EA3                     	;# 
  3178  0EA4                     	;# 
  3179  0EA5                     	;# 
  3180  0F0F                     	;# 
  3181  0F10                     	;# 
  3182  0F11                     	;# 
  3183  0F12                     	;# 
  3184  0F13                     	;# 
  3185  0F14                     	;# 
  3186  0F15                     	;# 
  3187  0F16                     	;# 
  3188  0F17                     	;# 
  3189  0F18                     	;# 
  3190  0F19                     	;# 
  3191  0F1A                     	;# 
  3192  0F1B                     	;# 
  3193  0F1C                     	;# 
  3194  0F1D                     	;# 
  3195  0F1E                     	;# 
  3196  0F1F                     	;# 
  3197  0F20                     	;# 
  3198  0F21                     	;# 
  3199  0F22                     	;# 
  3200  0F23                     	;# 
  3201  0F24                     	;# 
  3202  0F25                     	;# 
  3203  0F26                     	;# 
  3204  0F27                     	;# 
  3205  0F28                     	;# 
  3206  0F29                     	;# 
  3207  0F2A                     	;# 
  3208  0F2B                     	;# 
  3209  0F2C                     	;# 
  3210  0F2D                     	;# 
  3211  0F2E                     	;# 
  3212  0F2F                     	;# 
  3213  0F30                     	;# 
  3214  0F31                     	;# 
  3215  0F32                     	;# 
  3216  0F33                     	;# 
  3217  0F34                     	;# 
  3218  0F35                     	;# 
  3219  0F36                     	;# 
  3220  0F37                     	;# 
  3221  0FE4                     	;# 
  3222  0FE5                     	;# 
  3223  0FE6                     	;# 
  3224  0FE7                     	;# 
  3225  0FE8                     	;# 
  3226  0FE9                     	;# 
  3227  0FEA                     	;# 
  3228  0FEB                     	;# 
  3229  0FED                     	;# 
  3230  0FEE                     	;# 
  3231  0FEF                     	;_dotColor2
  3232                           
  3233 ;; Function _MASTER0_open is unused but had its address taken
  3234  0000                     
  3235 ;; Function _SPI2_Close is unused but had its address taken
  3236  0000                     
  3237 ;; Function _SPI2_ExchangeBlock is unused but had its address taken
  3238  0000                     
  3239 ;; Function _SPI2_WriteBlock is unused but had its address taken
  3240  0000                     
  3241 ;; Function _SPI2_ReadBlock is unused but had its address taken
  3242  0000                     
  3243 ;; Function _SPI2_WriteByte is unused but had its address taken
  3244  0000                     
  3245 ;; Function _SPI2_ReadByte is unused but had its address taken
  3246  0000                     
  3247                           	psect	idataBANK0
  3248  07FF                     __pidataBANK0:
  3249                           
  3250                           ;initializer for _groupCant
  3251  07FF  341D               	retlw	29
  3252                           
  3253                           	psect	idataBANK1
  3254  2115                     __pidataBANK1:
  3255                           
  3256                           ;initializer for _dotTestColor
  3257  2115  3400               	retlw	0
  3258  2116  34FF               	retlw	255
  3259  2117  3400               	retlw	0
  3260                           
  3261                           ;initializer for _packTotals
  3262  2118  3405               	retlw	5
  3263  2119  3402               	retlw	2
  3264                           
  3265                           ;initializer for _defaultLum
  3266  211A  3401               	retlw	1
  3267                           
  3268                           ;initializer for _pTot
  3269  211B  3406               	retlw	6
  3270                           
  3271                           ;initializer for _deltaCrash
  3272  211C  3410               	retlw	16
  3273                           
  3274                           	psect	idataBANK2
  3275  07FD                     __pidataBANK2:
  3276                           
  3277                           ;initializer for _firstDelay
  3278  07FD  3498               	retlw	152
  3279  07FE  3400               	retlw	0
  3280                           
  3281                           	psect	idataBANK3
  3282  20E4                     __pidataBANK3:
  3283                           
  3284                           ;initializer for _dotCant2
  3285  20E4  3455               	retlw	85
  3286  20E5  3400               	retlw	0
  3287                           
  3288                           ;initializer for _dotCant1
  3289  20E6  3455               	retlw	85
  3290  20E7  3400               	retlw	0
  3291                           
  3292                           	psect	idataBANK5
  3293  240B                     __pidataBANK5:
  3294                           
  3295                           ;initializer for _delaysOff
  3296  240B  3430               	retlw	48
  3297  240C  3400               	retlw	0
  3298  240D  3420               	retlw	32
  3299  240E  3400               	retlw	0
  3300  240F  3400               	retlw	0
  3301  2410  3400               	retlw	0
  3302  2411  3400               	retlw	0
  3303  2412  3400               	retlw	0
  3304  2413  3400               	retlw	0
  3305  2414  3400               	retlw	0
  3306  2415  3400               	retlw	0
  3307  2416  3400               	retlw	0
  3308                           
  3309                           ;initializer for _seqDeltasOff
  3310  2417  3403               	retlw	3
  3311  2418  3405               	retlw	5
  3312  2419  3405               	retlw	5
  3313  241A  3406               	retlw	6
  3314  241B  3407               	retlw	7
  3315  241C  3409               	retlw	9
  3316                           
  3317                           ;initializer for _seqDeltasOn
  3318  241D  3408               	retlw	8
  3319  241E  3406               	retlw	6
  3320  241F  3405               	retlw	5
  3321  2420  3406               	retlw	6
  3322  2421  3407               	retlw	7
  3323  2422  3409               	retlw	9
  3324                           
  3325                           	psect	idataBANK6
  3326  26AD                     __pidataBANK6:
  3327                           
  3328                           ;initializer for _groupSize
  3329  26AD  3401               	retlw	1
  3330  26AE  3410               	retlw	16
  3331  26AF  340B               	retlw	11
  3332  26B0  3403               	retlw	3
  3333  26B1  3403               	retlw	3
  3334  26B2  3403               	retlw	3
  3335  26B3  3403               	retlw	3
  3336  26B4  3403               	retlw	3
  3337  26B5  3403               	retlw	3
  3338  26B6  3403               	retlw	3
  3339  26B7  3403               	retlw	3
  3340  26B8  3404               	retlw	4
  3341  26B9  3404               	retlw	4
  3342  26BA  3404               	retlw	4
  3343  26BB  3404               	retlw	4
  3344  26BC  3403               	retlw	3
  3345  26BD  3403               	retlw	3
  3346  26BE  3403               	retlw	3
  3347  26BF  3403               	retlw	3
  3348  26C0  3403               	retlw	3
  3349  26C1  3403               	retlw	3
  3350  26C2  3403               	retlw	3
  3351  26C3  3403               	retlw	3
  3352  26C4  3406               	retlw	6
  3353  26C5  3406               	retlw	6
  3354  26C6  3406               	retlw	6
  3355  26C7  3406               	retlw	6
  3356  26C8  3408               	retlw	8
  3357  26C9  3408               	retlw	8
  3358                           
  3359                           ;initializer for _delaysDemo
  3360  26CA  3400               	retlw	0
  3361  26CB  3400               	retlw	0
  3362  26CC  3400               	retlw	0
  3363  26CD  3400               	retlw	0
  3364  26CE  3400               	retlw	0
  3365  26CF  3400               	retlw	0
  3366  26D0  341C               	retlw	28
  3367  26D1  3400               	retlw	0
  3368  26D2  3424               	retlw	36
  3369  26D3  3400               	retlw	0
  3370  26D4  3434               	retlw	52
  3371  26D5  3400               	retlw	0
  3372                           
  3373                           ;initializer for _delaysOn
  3374  26D6  3400               	retlw	0
  3375  26D7  3400               	retlw	0
  3376  26D8  3404               	retlw	4
  3377  26D9  3400               	retlw	0
  3378  26DA  341C               	retlw	28
  3379  26DB  3400               	retlw	0
  3380  26DC  3424               	retlw	36
  3381  26DD  3400               	retlw	0
  3382  26DE  342C               	retlw	44
  3383  26DF  3400               	retlw	0
  3384  26E0  3434               	retlw	52
  3385  26E1  3400               	retlw	0
  3386                           
  3387                           ;initializer for _seqMaskOn
  3388  26E2  344D               	retlw	77
  3389  26E3  3400               	retlw	0
  3390  26E4  344D               	retlw	77
  3391  26E5  3480               	retlw	128
  3392  26E6  3466               	retlw	102
  3393  26E7  3433               	retlw	51
  3394  26E8  3400               	retlw	0
  3395  26E9  3466               	retlw	102
  3396  26EA  34B3               	retlw	179
  3397  26EB  34FF               	retlw	255
  3398                           
  3399                           	psect	stringtext1
  3400  2800                     __pstringtext1:
  3401  2800                     _spiMaster:
  3402  2800  3400               	retlw	0
  3403  2801  3400               	retlw	0
  3404  2802  3400               	retlw	0
  3405  2803  3400               	retlw	0
  3406  2804  341A               	retlw	low _SPI2_ExchangeByte
  3407  2805  3422               	retlw	high _SPI2_ExchangeByte
  3408  2806  3400               	retlw	0
  3409  2807  3400               	retlw	0
  3410  2808  3400               	retlw	0
  3411  2809  3400               	retlw	0
  3412  280A  3400               	retlw	0
  3413  280B  3400               	retlw	0
  3414  280C  3400               	retlw	0
  3415  280D  3400               	retlw	0
  3416  280E  3400               	retlw	0
  3417  280F  3400               	retlw	0
  3418  2810  3400               	retlw	0
  3419  2811  3400               	retlw	0
  3420  2812  3400               	retlw	0
  3421  2813  3400               	retlw	0
  3422  2814                     __end_of_spiMaster:
  3423                           
  3424                           	psect	stringtext2
  3425  2814                     __pstringtext2:
  3426  2814                     _spi2_configuration:
  3427  2814  340A               	retlw	10
  3428  2815  3440               	retlw	64
  3429  2816  3401               	retlw	1
  3430  2817  3400               	retlw	0
  3431  2818  3400               	retlw	0
  3432  2819  3440               	retlw	64
  3433  281A  3401               	retlw	1
  3434  281B  3400               	retlw	0
  3435  281C                     __end_of_spi2_configuration:
  3436                           
  3437                           	psect	nvBANK3
  3438  01E3                     __pnvBANK3:
  3439  01E3                     _IOCCF3_InterruptHandler:
  3440  01E3                     	ds	2
  3441  01E5                     _IOCCF2_InterruptHandler:
  3442  01E5                     	ds	2
  3443  01E7                     _IOCCF1_InterruptHandler:
  3444  01E7                     	ds	2
  3445  000E                     _PORTCbits	set	14
  3446  001C                     _T1GCONbits	set	28
  3447  001B                     _T1CONbits	set	27
  3448  001B                     _T1CON	set	27
  3449  0019                     _TMR1L	set	25
  3450  001A                     _TMR1H	set	26
  3451  001C                     _T1GCON	set	28
  3452  001F                     _T2CONbits	set	31
  3453  001F                     _T2CON	set	31
  3454  001D                     _TMR2	set	29
  3455  001E                     _PR2	set	30
  3456  0012                     _PIR2bits	set	18
  3457  0011                     _PIR1bits	set	17
  3458  000B                     _INTCONbits	set	11
  3459  0010                     _PIR0bits	set	16
  3460  008C                     _TRISAbits	set	140
  3461  0091                     _PIE1bits	set	145
  3462  0097                     _WDTCON	set	151
  3463  0090                     _PIE0bits	set	144
  3464  008E                     _TRISC	set	142
  3465  008C                     _TRISA	set	140
  3466  010E                     _LATC	set	270
  3467  010C                     _LATA	set	268
  3468  0199                     _RC1REG	set	409
  3469  019D                     _RC1STAbits	set	413
  3470  019A                     _TX1REG	set	410
  3471  019E                     _TX1STAbits	set	414
  3472  019C                     _SP1BRGH	set	412
  3473  019B                     _SP1BRGL	set	411
  3474  019E                     _TX1STA	set	414
  3475  019D                     _RC1STA	set	413
  3476  019F                     _BAUD1CON	set	415
  3477  018C                     _ANSELA	set	396
  3478  018E                     _ANSELC	set	398
  3479  0219                     _SSP2BUF	set	537
  3480  021E                     _SSP2CON2	set	542
  3481  021D                     _SSP2CON1bits	set	541
  3482  021A                     _SSP2ADD	set	538
  3483  021D                     _SSP2CON1	set	541
  3484  021C                     _SSP2STAT	set	540
  3485  020E                     _WPUC	set	526
  3486  020C                     _WPUA	set	524
  3487  028E                     _ODCONC	set	654
  3488  028C                     _ODCONA	set	652
  3489  030E                     _SLRCONC	set	782
  3490  030C                     _SLRCONA	set	780
  3491  0397                     _IOCCPbits	set	919
  3492  0398                     _IOCCNbits	set	920
  3493  0399                     _IOCCFbits	set	921
  3494  038E                     _INLVLC	set	910
  3495  038C                     _INLVLA	set	908
  3496  0916                     _PMD5	set	2326
  3497  0915                     _PMD4	set	2325
  3498  0914                     _PMD3	set	2324
  3499  0913                     _PMD2	set	2323
  3500  0912                     _PMD1	set	2322
  3501  0911                     _PMD0	set	2321
  3502  091E                     _OSCTUNE	set	2334
  3503  091F                     _OSCFRQ	set	2335
  3504  091D                     _OSCEN	set	2333
  3505  091B                     _OSCCON3	set	2331
  3506  0919                     _OSCCON1	set	2329
  3507  48E0                     _PLLR	set	18656
  3508  0E1D                     _SSP2CLKPPS	set	3613
  3509  0E1E                     _SSP2DATPPS	set	3614
  3510  0E24                     _RXPPS	set	3620
  3511  0E95                     _RA5PPS	set	3733
  3512  0EA4                     _RC4PPS	set	3748
  3513  0E94                     _RA4PPS	set	3732
  3514                           
  3515                           	psect	cinit
  3516  0049                     start_initialization:	
  3517                           ; #config settings
  3518                           
  3519  0049                     __initialization:	;BIGRAM
  3520                           
  3521                           ; Initialize objects allocated to BANK0
  3522  0049  3187  27FF  3180   	fcall	__pidataBANK0	;fetch initializer
  3523  004C  00EB               	movwf	__pdataBANK0& (0+127)
  3524                           
  3525                           ; Initialize objects allocated to BANK1
  3526  004D  3015               	movlw	low __pidataBANK1
  3527  004E  0084               	movwf	4
  3528  004F  30A1               	movlw	(high __pidataBANK1)| (0+128)
  3529  0050  0085               	movwf	5
  3530  0051  30E8               	movlw	low __pdataBANK1
  3531  0052  0086               	movwf	6
  3532  0053  3000               	movlw	high __pdataBANK1
  3533  0054  0087               	movwf	7
  3534  0055  3000               	movlw	0
  3535  0056  00FF               	movwf	btemp+1
  3536  0057  3008               	movlw	8
  3537  0058  31A2  2201  3180   	fcall	init_ram
  3538                           
  3539                           ; Initialize objects allocated to BANK2
  3540  005B  0022               	movlb	2	; select bank2
  3541  005C  3187  27FD  3180   	fcall	__pidataBANK2	;fetch initializer
  3542  005F  00EE               	movwf	__pdataBANK2& (0+127)
  3543  0060  3187  27FE  3180   	fcall	__pidataBANK2+1	;fetch initializer
  3544  0063  00EF               	movwf	(__pdataBANK2+1)& (0+127)
  3545                           
  3546                           ; Initialize objects allocated to BANK3
  3547  0064  30E4               	movlw	low __pidataBANK3
  3548  0065  0084               	movwf	4
  3549  0066  30A0               	movlw	(high __pidataBANK3)| (0+128)
  3550  0067  0085               	movwf	5
  3551  0068  30E9               	movlw	low __pdataBANK3
  3552  0069  0086               	movwf	6
  3553  006A  3001               	movlw	high __pdataBANK3
  3554  006B  0087               	movwf	7
  3555  006C  3000               	movlw	0
  3556  006D  00FF               	movwf	btemp+1
  3557  006E  3004               	movlw	4
  3558  006F  31A2  2201  3180   	fcall	init_ram
  3559                           
  3560                           ; Initialize objects allocated to BANK5
  3561  0072  300B               	movlw	low __pidataBANK5
  3562  0073  0084               	movwf	4
  3563  0074  30A4               	movlw	(high __pidataBANK5)| (0+128)
  3564  0075  0085               	movwf	5
  3565  0076  30D3               	movlw	low __pdataBANK5
  3566  0077  0086               	movwf	6
  3567  0078  3002               	movlw	high __pdataBANK5
  3568  0079  0087               	movwf	7
  3569  007A  3000               	movlw	0
  3570  007B  00FF               	movwf	btemp+1
  3571  007C  3018               	movlw	24
  3572  007D  31A2  2201  3180   	fcall	init_ram
  3573                           
  3574                           ; Initialize objects allocated to BANK6
  3575  0080  30AD               	movlw	low __pidataBANK6
  3576  0081  0084               	movwf	4
  3577  0082  30A6               	movlw	(high __pidataBANK6)| (0+128)
  3578  0083  0085               	movwf	5
  3579  0084  3020               	movlw	low __pdataBANK6
  3580  0085  0086               	movwf	6
  3581  0086  3003               	movlw	high __pdataBANK6
  3582  0087  0087               	movwf	7
  3583  0088  3000               	movlw	0
  3584  0089  00FF               	movwf	btemp+1
  3585  008A  303F               	movlw	63
  3586  008B  31A2  2201  3180   	fcall	init_ram
  3587                           
  3588                           ; Clear objects allocated to BIGRAM
  3589  008E  309C               	movlw	low (0+9884)
  3590  008F  0084               	movwf	4
  3591  0090  3026               	movlw	high (0+9884)
  3592  0091  0085               	movwf	5
  3593  0092  3054               	movlw	84
  3594  0093  00FE               	movwf	btemp
  3595  0094  3001               	movlw	1
  3596  0095  00FF               	movwf	btemp+1
  3597  0096  31A1  21F5  3180   	fcall	clear_ram0
  3598                           
  3599                           ; Clear objects allocated to BANK0
  3600  0099  3020               	movlw	low __pbssBANK0
  3601  009A  0084               	movwf	4
  3602  009B  3000               	movlw	high __pbssBANK0
  3603  009C  0085               	movwf	5
  3604  009D  302D               	movlw	45
  3605  009E  00FE               	movwf	btemp
  3606  009F  3000               	movlw	0
  3607  00A0  00FF               	movwf	btemp+1
  3608  00A1  31A1  21F5  3180   	fcall	clear_ram0
  3609                           
  3610                           ; Clear objects allocated to BANK1
  3611  00A4  30A0               	movlw	low __pbssBANK1
  3612  00A5  0084               	movwf	4
  3613  00A6  3000               	movlw	high __pbssBANK1
  3614  00A7  0085               	movwf	5
  3615  00A8  3048               	movlw	72
  3616  00A9  00FE               	movwf	btemp
  3617  00AA  3000               	movlw	0
  3618  00AB  00FF               	movwf	btemp+1
  3619  00AC  31A1  21F5  3180   	fcall	clear_ram0
  3620                           
  3621                           ; Clear objects allocated to BANK2
  3622  00AF  3020               	movlw	low __pbssBANK2
  3623  00B0  0084               	movwf	4
  3624  00B1  3001               	movlw	high __pbssBANK2
  3625  00B2  0085               	movwf	5
  3626  00B3  304E               	movlw	78
  3627  00B4  00FE               	movwf	btemp
  3628  00B5  3000               	movlw	0
  3629  00B6  00FF               	movwf	btemp+1
  3630  00B7  31A1  21F5  3180   	fcall	clear_ram0
  3631                           
  3632                           ; Clear objects allocated to BANK3
  3633  00BA  30A0               	movlw	low __pbssBANK3
  3634  00BB  0084               	movwf	4
  3635  00BC  3001               	movlw	high __pbssBANK3
  3636  00BD  0085               	movwf	5
  3637  00BE  3043               	movlw	67
  3638  00BF  00FE               	movwf	btemp
  3639  00C0  3000               	movlw	0
  3640  00C1  00FF               	movwf	btemp+1
  3641  00C2  31A1  21F5  3180   	fcall	clear_ram0
  3642                           
  3643                           ; Clear objects allocated to BANK4
  3644  00C5  3020               	movlw	low __pbssBANK4
  3645  00C6  0084               	movwf	4
  3646  00C7  3002               	movlw	high __pbssBANK4
  3647  00C8  0085               	movwf	5
  3648  00C9  304C               	movlw	76
  3649  00CA  00FE               	movwf	btemp
  3650  00CB  3000               	movlw	0
  3651  00CC  00FF               	movwf	btemp+1
  3652  00CD  31A1  21F5  3180   	fcall	clear_ram0
  3653                           
  3654                           ; Clear objects allocated to BANK5
  3655  00D0  30A0               	movlw	low __pbssBANK5
  3656  00D1  0084               	movwf	4
  3657  00D2  3002               	movlw	high __pbssBANK5
  3658  00D3  0085               	movwf	5
  3659  00D4  3033               	movlw	51
  3660  00D5  00FE               	movwf	btemp
  3661  00D6  3000               	movlw	0
  3662  00D7  00FF               	movwf	btemp+1
  3663  00D8  31A1  21F5  3180   	fcall	clear_ram0
  3664                           
  3665                           ; Clear objects allocated to BANK7
  3666  00DB  30A0               	movlw	low __pbssBANK7
  3667  00DC  0084               	movwf	4
  3668  00DD  3003               	movlw	high __pbssBANK7
  3669  00DE  0085               	movwf	5
  3670  00DF  303A               	movlw	58
  3671  00E0  00FE               	movwf	btemp
  3672  00E1  3000               	movlw	0
  3673  00E2  00FF               	movwf	btemp+1
  3674  00E3  31A1  21F5  3180   	fcall	clear_ram0
  3675  00E6                     end_of_initialization:	
  3676                           ;End of C runtime variable initialization code
  3677                           
  3678  00E6                     __end_of__initialization:
  3679  00E6  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3680  00E7  0020               	movlb	0
  3681  00E8  3187  2F8D         	ljmp	_main	;jump to C main() function
  3682                           
  3683                           	psect	bssBANK0
  3684  0020                     __pbssBANK0:
  3685  0020                     _valBip2:
  3686  0020                     	ds	2
  3687  0022                     _valBip1:
  3688  0022                     	ds	2
  3689  0024                     _valTempo:
  3690  0024                     	ds	2
  3691  0026                     _contRefri:
  3692  0026                     	ds	2
  3693  0028                     _intensityCrash:
  3694  0028                     	ds	2
  3695  002A                     _timDemoOff:
  3696  002A                     	ds	2
  3697  002C                     _timPresOff:
  3698  002C                     	ds	2
  3699  002E                     _timPresOn:
  3700  002E                     	ds	2
  3701  0030                     _fullBodyVal:
  3702  0030                     	ds	2
  3703  0032                     _timer1ReloadVal:
  3704  0032                     	ds	2
  3705  0034                     _pCont:
  3706  0034                     	ds	1
  3707  0035                     _genVal:
  3708  0035                     	ds	1
  3709  0036                     _State:
  3710  0036                     	ds	1
  3711  0037                     _noteNum:
  3712  0037                     	ds	1
  3713  0038                     _noteOnTempo:
  3714  0038                     	ds	1
  3715  0039                     _stepsNote:
  3716  0039                     	ds	1
  3717  003A                     _musikRun:
  3718  003A                     	ds	1
  3719  003B                     _intensityRefri:
  3720  003B                     	ds	1
  3721  003C                     _subContCrash:
  3722  003C                     	ds	1
  3723  003D                     _indexCrash:
  3724  003D                     	ds	1
  3725  003E                     _indexShadow:
  3726  003E                     	ds	1
  3727  003F                     _runShadow:
  3728  003F                     	ds	1
  3729  0040                     _subContMaskOff:
  3730  0040                     	ds	1
  3731  0041                     _indexMaskOff:
  3732  0041                     	ds	1
  3733  0042                     _runMaskOff:
  3734  0042                     	ds	1
  3735  0043                     _flagDemoOn:
  3736  0043                     	ds	1
  3737  0044                     _lightsOn:
  3738  0044                     	ds	1
  3739  0045                     _run:
  3740  0045                     	ds	1
  3741  0046                     _modoPress_nDemo:
  3742  0046                     	ds	1
  3743  0047                     _tick:
  3744  0047                     	ds	1
  3745  0048                     _waiter:
  3746  0048                     	ds	1
  3747  0049                     _waitingTime:
  3748  0049                     	ds	1
  3749  004A                     _eusartRxCount:
  3750  004A                     	ds	1
  3751  004B                     _eusartRxTail:
  3752  004B                     	ds	1
  3753  004C                     _eusartRxHead:
  3754  004C                     	ds	1
  3755                           
  3756                           	psect	dataBANK0
  3757  006B                     __pdataBANK0:
  3758  006B                     _groupCant:
  3759  006B                     	ds	1
  3760                           
  3761                           	psect	bssBANK1
  3762  00A0                     __pbssBANK1:
  3763  00A0                     _SeqVals:
  3764  00A0                     	ds	12
  3765  00AC                     _NeckBRcolor:
  3766  00AC                     	ds	4
  3767  00B0                     _NeckBR:
  3768  00B0                     	ds	4
  3769  00B4                     _ShouldFL:
  3770  00B4                     	ds	3
  3771  00B7                     _ritmCont:
  3772  00B7                     	ds	2
  3773  00B9                     _intensityCrash2:
  3774  00B9                     	ds	2
  3775  00BB                     _contCrash:
  3776  00BB                     	ds	2
  3777  00BD                     _contTimShadow:
  3778  00BD                     	ds	2
  3779  00BF                     _contTimMaskOff:
  3780  00BF                     	ds	2
  3781  00C1                     _contTimMaskOn:
  3782  00C1                     	ds	2
  3783  00C3                     _indexMaskOn:
  3784  00C3                     	ds	2
  3785  00C5                     _timDemoOn:
  3786  00C5                     	ds	2
  3787  00C7                     _TMR1_InterruptHandler:
  3788  00C7                     	ds	2
  3789  00C9                     _TMR2_InterruptHandler:
  3790  00C9                     	ds	2
  3791  00CB                     _EUSART_ErrorHandler:
  3792  00CB                     	ds	2
  3793  00CD                     _EUSART_OverrunErrorHandler:
  3794  00CD                     	ds	2
  3795  00CF                     _EUSART_FramingErrorHandler:
  3796  00CF                     	ds	2
  3797  00D1                     _EUSART_RxDefaultInterruptHandler:
  3798  00D1                     	ds	2
  3799  00D3                     _execChan:
  3800  00D3                     	ds	1
  3801  00D4                     _sendOrder:
  3802  00D4                     	ds	1
  3803  00D5                     _pInit:
  3804  00D5                     	ds	1
  3805  00D6                     _stepContPress:
  3806  00D6                     	ds	1
  3807  00D7                     _stepContDemo:
  3808  00D7                     	ds	1
  3809  00D8                     _refriShoulderDone:
  3810  00D8                     	ds	1
  3811  00D9                     _indexRefri:
  3812  00D9                     	ds	1
  3813  00DA                     _runRefri:
  3814  00DA                     	ds	1
  3815  00DB                     _dragonCrashDone:
  3816  00DB                     	ds	1
  3817  00DC                     _dragonColor:
  3818  00DC                     	ds	1
  3819  00DD                     _runCrash:
  3820  00DD                     	ds	1
  3821  00DE                     _subContShadow:
  3822  00DE                     	ds	1
  3823  00DF                     _runMaskOn:
  3824  00DF                     	ds	1
  3825  00E0                     _maskIsOn:
  3826  00E0                     	ds	1
  3827  00E1                     _flagDemoOff:
  3828  00E1                     	ds	1
  3829  00E2                     _flagPressOff:
  3830  00E2                     	ds	1
  3831  00E3                     _flagPressOn:
  3832  00E3                     	ds	1
  3833  00E4                     _soundASOff:
  3834  00E4                     	ds	1
  3835  00E5                     _soundASOn:
  3836  00E5                     	ds	1
  3837  00E6                     _DemoSwitchChange:
  3838  00E6                     	ds	1
  3839  00E7                     _eusartRxLastError:
  3840  00E7                     	ds	1
  3841                           
  3842                           	psect	dataBANK1
  3843  00E8                     __pdataBANK1:
  3844  00E8                     _dotTestColor:
  3845  00E8                     	ds	3
  3846  00EB                     _packTotals:
  3847  00EB                     	ds	2
  3848  00ED                     _defaultLum:
  3849  00ED                     	ds	1
  3850  00EE                     _pTot:
  3851  00EE                     	ds	1
  3852  00EF                     _deltaCrash:
  3853  00EF                     	ds	1
  3854                           
  3855                           	psect	bssBANK2
  3856  0120                     __pbssBANK2:
  3857  0120                     _MaskSeq:
  3858  0120                     	ds	24
  3859  0138                     _intensityArray:
  3860  0138                     	ds	15
  3861  0147                     _dragonArray:
  3862  0147                     	ds	15
  3863  0156                     _AbsML:
  3864  0156                     	ds	3
  3865  0159                     _NeckR:
  3866  0159                     	ds	3
  3867  015C                     _NeckL:
  3868  015C                     	ds	3
  3869  015F                     _ShouldBR:
  3870  015F                     	ds	3
  3871  0162                     _ShouldBL:
  3872  0162                     	ds	3
  3873  0165                     _ShouldDR:
  3874  0165                     	ds	3
  3875  0168                     _ShouldDL:
  3876  0168                     	ds	3
  3877  016B                     _ShouldFR:
  3878  016B                     	ds	3
  3879                           
  3880                           	psect	dataBANK2
  3881  016E                     __pdataBANK2:
  3882  016E                     _firstDelay:
  3883  016E                     	ds	2
  3884                           
  3885                           	psect	bssBANK3
  3886  01A0                     __pbssBANK3:
  3887  01A0                     _groupBuff:
  3888  01A0                     	ds	18
  3889  01B2                     _eusartRxStatusBuffer:
  3890  01B2                     	ds	8
  3891  01BA                     _AbsUR:
  3892  01BA                     	ds	4
  3893  01BE                     _AbsUL:
  3894  01BE                     	ds	4
  3895  01C2                     _NeckBL:
  3896  01C2                     	ds	4
  3897  01C6                     _secCont:
  3898  01C6                     	ds	4
  3899  01CA                     _BackD:
  3900  01CA                     	ds	3
  3901  01CD                     _BackUM:
  3902  01CD                     	ds	3
  3903  01D0                     _BackUR:
  3904  01D0                     	ds	3
  3905  01D3                     _BackUL:
  3906  01D3                     	ds	3
  3907  01D6                     _AbsDR:
  3908  01D6                     	ds	3
  3909  01D9                     _AbsDL:
  3910  01D9                     	ds	3
  3911  01DC                     _AbsMR:
  3912  01DC                     	ds	3
  3913  01DF                     _sc:
  3914  01DF                     	ds	2
  3915  01E1                     _minCont:
  3916  01E1                     	ds	2
  3917                           
  3918                           	psect	dataBANK3
  3919  01E9                     __pdataBANK3:
  3920  01E9                     _dotCant2:
  3921  01E9                     	ds	2
  3922  01EB                     _dotCant1:
  3923  01EB                     	ds	2
  3924                           
  3925                           	psect	bssBANK4
  3926  0220                     __pbssBANK4:
  3927  0220                     _shadowArray:
  3928  0220                     	ds	42
  3929  024A                     _pVals:
  3930  024A                     	ds	10
  3931  0254                     _LegDR:
  3932  0254                     	ds	6
  3933  025A                     _LegDL:
  3934  025A                     	ds	6
  3935  0260                     _LegUR:
  3936  0260                     	ds	6
  3937  0266                     _LegUL:
  3938  0266                     	ds	6
  3939                           
  3940                           	psect	bssBANK5
  3941  02A0                     __pbssBANK5:
  3942  02A0                     _Mask:
  3943  02A0                     	ds	16
  3944  02B0                     _Core:
  3945  02B0                     	ds	11
  3946  02BB                     _ShoeR:
  3947  02BB                     	ds	8
  3948  02C3                     _ShoeL:
  3949  02C3                     	ds	8
  3950  02CB                     _eusartRxBuffer:
  3951  02CB                     	ds	8
  3952                           
  3953                           	psect	dataBANK5
  3954  02D3                     __pdataBANK5:
  3955  02D3                     _delaysOff:
  3956  02D3                     	ds	12
  3957  02DF                     _seqDeltasOff:
  3958  02DF                     	ds	6
  3959  02E5                     _seqDeltasOn:
  3960  02E5                     	ds	6
  3961                           
  3962                           	psect	dataBANK6
  3963  0320                     __pdataBANK6:
  3964  0320                     _groupSize:
  3965  0320                     	ds	29
  3966  033D                     _delaysDemo:
  3967  033D                     	ds	12
  3968  0349                     _delaysOn:
  3969  0349                     	ds	12
  3970  0355                     _seqMaskOn:
  3971  0355                     	ds	10
  3972                           
  3973                           	psect	bssBANK7
  3974  03A0                     __pbssBANK7:
  3975  03A0                     _groupColor:
  3976  03A0                     	ds	29
  3977  03BD                     _groupValue:
  3978  03BD                     	ds	29
  3979                           
  3980                           	psect	inittext
  3981  2201                     init_ram:
  3982  2201  00FE               	movwf	btemp
  3983  2202                     initloop:
  3984  2202  0012               	moviw fsr0++
  3985  2203  001E               	movwi fsr1++
  3986  2204  3001               	movlw	1
  3987  2205  02FE               	subwf	btemp,f
  3988  2206  3000               	movlw	0
  3989  2207  3BFF               	subwfb	btemp+1,f
  3990  2208  087F               	movf	btemp+1,w
  3991  2209  047E               	iorwf	btemp,w
  3992  220A  1D03               	skipz
  3993  220B  2A02               	goto	initloop
  3994  220C  3400               	retlw	0
  3995                           
  3996                           	psect	clrtext
  3997  21F5                     clear_ram0:	
  3998                           ;	Called with FSR0 containing the base address, and
  3999                           ;	btemp/btemp+1 has the size to clear
  4000                           
  4001  21F5  0064               	clrwdt	;clear the watchdog before getting into this loop
  4002  21F6                     clrloop0:
  4003  21F6  0180               	clrf	0	;clear RAM location pointed to by FSR
  4004  21F7  3101               	addfsr 0,1
  4005  21F8  3001               	movlw	1
  4006  21F9  02FE               	subwf	btemp,f
  4007  21FA  3000               	movlw	0
  4008  21FB  3BFF               	subwfb	btemp+1,f
  4009  21FC  087F               	movf	btemp+1,w
  4010  21FD  047E               	iorwf	btemp,w
  4011  21FE  1D03               	skipz
  4012  21FF  29F6               	goto	clrloop0	;have we reached the end yet?
  4013  2200  3400               	retlw	0	;all done for this memory range, return
  4014                           
  4015                           	psect	cstackBANK4
  4016  026C                     __pcstackBANK4:
  4017  026C                     merger@i:
  4018                           
  4019                           ; 2 bytes @ 0x0
  4020  026C                     	ds	2
  4021  026E                     merger@accum:
  4022                           
  4023                           ; 2 bytes @ 0x2
  4024  026E                     	ds	2
  4025                           
  4026                           	psect	cstackCOMMON
  4027  0070                     __pcstackCOMMON:
  4028  0070                     ?_SPI2_Open:
  4029  0070                     ?_IOCCF1_DefaultInterruptHandler:	
  4030                           ; 1 bytes @ 0x0
  4031                           
  4032  0070                     ??_IOCCF1_DefaultInterruptHandler:	
  4033                           ; 1 bytes @ 0x0
  4034                           
  4035  0070                     ?_IOCCF2_DefaultInterruptHandler:	
  4036                           ; 1 bytes @ 0x0
  4037                           
  4038  0070                     ??_IOCCF2_DefaultInterruptHandler:	
  4039                           ; 1 bytes @ 0x0
  4040                           
  4041  0070                     ?_IOCCF3_DefaultInterruptHandler:	
  4042                           ; 1 bytes @ 0x0
  4043                           
  4044  0070                     ??_IOCCF3_DefaultInterruptHandler:	
  4045                           ; 1 bytes @ 0x0
  4046                           
  4047  0070                     ?_IOCCF1_ISR:	
  4048                           ; 1 bytes @ 0x0
  4049                           
  4050  0070                     ?_IOCCF2_ISR:	
  4051                           ; 1 bytes @ 0x0
  4052                           
  4053  0070                     ?_IOCCF3_ISR:	
  4054                           ; 1 bytes @ 0x0
  4055                           
  4056  0070                     ?_PMD_Initialize:	
  4057                           ; 1 bytes @ 0x0
  4058                           
  4059  0070                     ?_SPI2_Initialize:	
  4060                           ; 1 bytes @ 0x0
  4061                           
  4062  0070                     ?_OSCILLATOR_Initialize:	
  4063                           ; 1 bytes @ 0x0
  4064                           
  4065  0070                     ?_WDT_Initialize:	
  4066                           ; 1 bytes @ 0x0
  4067                           
  4068  0070                     ?_TMR2_Initialize:	
  4069                           ; 1 bytes @ 0x0
  4070                           
  4071  0070                     ?_TMR1_Initialize:	
  4072                           ; 1 bytes @ 0x0
  4073                           
  4074  0070                     ?_EUSART_Initialize:	
  4075                           ; 1 bytes @ 0x0
  4076                           
  4077  0070                     ?_TMR2_ISR:	
  4078                           ; 1 bytes @ 0x0
  4079                           
  4080  0070                     ?_TMR1_ISR:	
  4081                           ; 1 bytes @ 0x0
  4082                           
  4083  0070                     ?_EUSART_Receive_ISR:	
  4084                           ; 1 bytes @ 0x0
  4085                           
  4086  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  4087                           ; 1 bytes @ 0x0
  4088                           
  4089  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  4090                           ; 1 bytes @ 0x0
  4091                           
  4092  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  4093                           ; 1 bytes @ 0x0
  4094                           
  4095  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  4096                           ; 1 bytes @ 0x0
  4097                           
  4098  0070                     ?_EUSART_DefaultErrorHandler:	
  4099                           ; 1 bytes @ 0x0
  4100                           
  4101  0070                     ?_EUSART_RxDataHandler:	
  4102                           ; 1 bytes @ 0x0
  4103                           
  4104  0070                     ??_EUSART_RxDataHandler:	
  4105                           ; 1 bytes @ 0x0
  4106                           
  4107  0070                     ?_TMR2_DefaultInterruptHandler:	
  4108                           ; 1 bytes @ 0x0
  4109                           
  4110  0070                     ??_TMR2_DefaultInterruptHandler:	
  4111                           ; 1 bytes @ 0x0
  4112                           
  4113  0070                     ?_TMR1_DefaultInterruptHandler:	
  4114                           ; 1 bytes @ 0x0
  4115                           
  4116  0070                     ??_TMR1_DefaultInterruptHandler:	
  4117                           ; 1 bytes @ 0x0
  4118                           
  4119  0070                     ?_sendOrderDot:	
  4120                           ; 1 bytes @ 0x0
  4121                           
  4122  0070                     ?_translateShadows:	
  4123                           ; 1 bytes @ 0x0
  4124                           
  4125  0070                     ?_putch:	
  4126                           ; 1 bytes @ 0x0
  4127                           
  4128  0070                     ?_rstMusik:	
  4129                           ; 1 bytes @ 0x0
  4130                           
  4131  0070                     ?_resetAndOff:	
  4132                           ; 1 bytes @ 0x0
  4133                           
  4134  0070                     ?_seqApply:	
  4135                           ; 1 bytes @ 0x0
  4136                           
  4137  0070                     ?_butt3Pres:	
  4138                           ; 1 bytes @ 0x0
  4139                           
  4140  0070                     ?_butt1Pres:	
  4141                           ; 1 bytes @ 0x0
  4142                           
  4143  0070                     ?_butt2Pres:	
  4144                           ; 1 bytes @ 0x0
  4145                           
  4146  0070                     ?_waitX0ms:	
  4147                           ; 1 bytes @ 0x0
  4148                           
  4149  0070                     ?_changeDemoMode:	
  4150                           ; 1 bytes @ 0x0
  4151                           
  4152  0070                     ?_PIN_MANAGER_Initialize:	
  4153                           ; 1 bytes @ 0x0
  4154                           
  4155  0070                     ?_PIN_MANAGER_IOC:	
  4156                           ; 1 bytes @ 0x0
  4157                           
  4158  0070                     ?_SYSTEM_Initialize:	
  4159                           ; 1 bytes @ 0x0
  4160                           
  4161  0070                     ?_INTERRUPT_InterruptManager:	
  4162                           ; 1 bytes @ 0x0
  4163                           
  4164  0070                     ?_EUSART_Write:	
  4165                           ; 1 bytes @ 0x0
  4166                           
  4167  0070                     ?_TMR1_WriteTimer:	
  4168                           ; 1 bytes @ 0x0
  4169                           
  4170  0070                     ?_initArrays:	
  4171                           ; 1 bytes @ 0x0
  4172                           
  4173  0070                     ?_valfromGroup:	
  4174                           ; 1 bytes @ 0x0
  4175                           
  4176  0070                     ?_merger:	
  4177                           ; 1 bytes @ 0x0
  4178                           
  4179  0070                     ?_sendOrderX:	
  4180                           ; 1 bytes @ 0x0
  4181                           
  4182  0070                     ?_sendOrderXs:	
  4183                           ; 1 bytes @ 0x0
  4184                           
  4185  0070                     ?_dotStart:	
  4186                           ; 1 bytes @ 0x0
  4187                           
  4188  0070                     ?_rstShadow:	
  4189                           ; 1 bytes @ 0x0
  4190                           
  4191  0070                     ?_despShadow:	
  4192                           ; 1 bytes @ 0x0
  4193                           
  4194  0070                     ?_crashOn2:	
  4195                           ; 1 bytes @ 0x0
  4196                           
  4197  0070                     ?_crashOff3:	
  4198                           ; 1 bytes @ 0x0
  4199                           
  4200  0070                     ?_dragonCrashTool:	
  4201                           ; 1 bytes @ 0x0
  4202                           
  4203  0070                     ?_rstDragon:	
  4204                           ; 1 bytes @ 0x0
  4205                           
  4206  0070                     ?_dragonCrash:	
  4207                           ; 1 bytes @ 0x0
  4208                           
  4209  0070                     ?_refriShoulderTool:	
  4210                           ; 1 bytes @ 0x0
  4211                           
  4212  0070                     ?_rstRefri:	
  4213                           ; 1 bytes @ 0x0
  4214                           
  4215  0070                     ?_refriShoulder:	
  4216                           ; 1 bytes @ 0x0
  4217                           
  4218  0070                     ?_rstMaskOn:	
  4219                           ; 1 bytes @ 0x0
  4220                           
  4221  0070                     ?_maskOn:	
  4222                           ; 1 bytes @ 0x0
  4223                           
  4224  0070                     ?_rstMaskOff:	
  4225                           ; 1 bytes @ 0x0
  4226                           
  4227  0070                     ?_maskOff:	
  4228                           ; 1 bytes @ 0x0
  4229                           
  4230  0070                     ?_rstDemoOn:	
  4231                           ; 1 bytes @ 0x0
  4232                           
  4233  0070                     ?_demoEfectOn:	
  4234                           ; 1 bytes @ 0x0
  4235                           
  4236  0070                     ?_musik:	
  4237                           ; 1 bytes @ 0x0
  4238                           
  4239  0070                     ?_rstDemoOff:	
  4240                           ; 1 bytes @ 0x0
  4241                           
  4242  0070                     ?_demoEfectOff:	
  4243                           ; 1 bytes @ 0x0
  4244                           
  4245  0070                     ?_rstPressOn:	
  4246                           ; 1 bytes @ 0x0
  4247                           
  4248  0070                     ?_SeqPresOn:	
  4249                           ; 1 bytes @ 0x0
  4250                           
  4251  0070                     ?_rstPressOff:	
  4252                           ; 1 bytes @ 0x0
  4253                           
  4254  0070                     ?_SeqPresOff:	
  4255                           ; 1 bytes @ 0x0
  4256                           
  4257  0070                     ?_rstSeq:	
  4258                           ; 1 bytes @ 0x0
  4259                           
  4260  0070                     ?_execMask_Sword:	
  4261                           ; 1 bytes @ 0x0
  4262                           
  4263  0070                     ?_initStop:	
  4264                           ; 1 bytes @ 0x0
  4265                           
  4266  0070                     ?_protExec:	
  4267                           ; 1 bytes @ 0x0
  4268                           
  4269  0070                     ?_protRCV:	
  4270                           ; 1 bytes @ 0x0
  4271                           
  4272  0070                     ??_protRCV:	
  4273                           ; 1 bytes @ 0x0
  4274                           
  4275  0070                     ?_secuences:	
  4276                           ; 1 bytes @ 0x0
  4277                           
  4278  0070                     ?_pTMR2_ISR:	
  4279                           ; 1 bytes @ 0x0
  4280                           
  4281  0070                     ??_pTMR2_ISR:	
  4282                           ; 1 bytes @ 0x0
  4283                           
  4284  0070                     ?_pTMR1_ISR:	
  4285                           ; 1 bytes @ 0x0
  4286                           
  4287  0070                     ??_pTMR1_ISR:	
  4288                           ; 1 bytes @ 0x0
  4289                           
  4290  0070                     ?_pRC1_ISR:	
  4291                           ; 1 bytes @ 0x0
  4292                           
  4293  0070                     ?_IOC_DI1_ISR:	
  4294                           ; 1 bytes @ 0x0
  4295                           
  4296  0070                     ?_IOC_AN1_ISR:	
  4297                           ; 1 bytes @ 0x0
  4298                           
  4299  0070                     ?_IOC_AN2_ISR:	
  4300                           ; 1 bytes @ 0x0
  4301                           
  4302  0070                     ?_main:	
  4303                           ; 1 bytes @ 0x0
  4304                           
  4305  0070                     ?i1_EUSART_Write:	
  4306                           ; 1 bytes @ 0x0
  4307                           
  4308  0070                     ??i1_EUSART_Write:	
  4309                           ; 1 bytes @ 0x0
  4310                           
  4311  0070                     ?i1_val2group:	
  4312                           ; 1 bytes @ 0x0
  4313                           
  4314  0070                     ?i1_sendOrderX:	
  4315                           ; 1 bytes @ 0x0
  4316                           
  4317  0070                     ??i1_sendOrderX:	
  4318                           ; 1 bytes @ 0x0
  4319                           
  4320  0070                     ?i1_rstShadow:	
  4321                           ; 1 bytes @ 0x0
  4322                           
  4323  0070                     ??i1_rstShadow:	
  4324                           ; 1 bytes @ 0x0
  4325                           
  4326  0070                     ?i1_dragonCrashTool:	
  4327                           ; 1 bytes @ 0x0
  4328                           
  4329  0070                     ?i1_rstDragon:	
  4330                           ; 1 bytes @ 0x0
  4331                           
  4332  0070                     ?i1_refriShoulderTool:	
  4333                           ; 1 bytes @ 0x0
  4334                           
  4335  0070                     ?i1_rstRefri:	
  4336                           ; 1 bytes @ 0x0
  4337                           
  4338  0070                     ?i1_rstMaskOn:	
  4339                           ; 1 bytes @ 0x0
  4340                           
  4341  0070                     ??i1_rstMaskOn:	
  4342                           ; 1 bytes @ 0x0
  4343                           
  4344  0070                     ?i1_rstMaskOff:	
  4345                           ; 1 bytes @ 0x0
  4346                           
  4347  0070                     ??i1_rstMaskOff:	
  4348                           ; 1 bytes @ 0x0
  4349                           
  4350  0070                     ?i1_rstDemoOn:	
  4351                           ; 1 bytes @ 0x0
  4352                           
  4353  0070                     ??i1_rstDemoOn:	
  4354                           ; 1 bytes @ 0x0
  4355                           
  4356  0070                     ?i1_rstMusik:	
  4357                           ; 1 bytes @ 0x0
  4358                           
  4359  0070                     ??i1_rstMusik:	
  4360                           ; 1 bytes @ 0x0
  4361                           
  4362  0070                     ?i1_rstDemoOff:	
  4363                           ; 1 bytes @ 0x0
  4364                           
  4365  0070                     ??i1_rstDemoOff:	
  4366                           ; 1 bytes @ 0x0
  4367                           
  4368  0070                     ?i1_rstPressOn:	
  4369                           ; 1 bytes @ 0x0
  4370                           
  4371  0070                     ??i1_rstPressOn:	
  4372                           ; 1 bytes @ 0x0
  4373                           
  4374  0070                     ?i1_rstPressOff:	
  4375                           ; 1 bytes @ 0x0
  4376                           
  4377  0070                     ??i1_rstPressOff:	
  4378                           ; 1 bytes @ 0x0
  4379                           
  4380  0070                     ?i1_rstSeq:	
  4381                           ; 1 bytes @ 0x0
  4382                           
  4383  0070                     ??i1_rstSeq:	
  4384                           ; 1 bytes @ 0x0
  4385                           
  4386  0070                     ?i1_resetAndOff:	
  4387                           ; 1 bytes @ 0x0
  4388                           
  4389  0070                     ?i1_changeDemoMode:	
  4390                           ; 1 bytes @ 0x0
  4391                           
  4392  0070                     ?i1_butt3Pres:	
  4393                           ; 1 bytes @ 0x0
  4394                           
  4395  0070                     ?i1_putch:	
  4396                           ; 1 bytes @ 0x0
  4397                           
  4398  0070                     ?i1_waitX0ms:	
  4399                           ; 1 bytes @ 0x0
  4400                           
  4401  0070                     ??i1_waitX0ms:	
  4402                           ; 1 bytes @ 0x0
  4403                           
  4404  0070                     butt1Pres@state:	
  4405                           ; 1 bytes @ 0x0
  4406                           
  4407  0070                     butt2Pres@state:	
  4408                           ; 1 bytes @ 0x0
  4409                           
  4410  0070                     i1EUSART_Write@txData:	
  4411                           ; 1 bytes @ 0x0
  4412                           
  4413  0070                     i1val2group@val:	
  4414                           ; 1 bytes @ 0x0
  4415                           
  4416  0070                     TMR1_WriteTimer@timerVal:	
  4417                           ; 1 bytes @ 0x0
  4418                           
  4419                           
  4420                           ; 2 bytes @ 0x0
  4421  0070                     	ds	1
  4422  0071                     ??_TMR2_ISR:
  4423  0071                     ??_EUSART_Receive_ISR:	
  4424                           ; 1 bytes @ 0x1
  4425                           
  4426  0071                     ??_EUSART_DefaultErrorHandler:	
  4427                           ; 1 bytes @ 0x1
  4428                           
  4429  0071                     ??i1_val2group:	
  4430                           ; 1 bytes @ 0x1
  4431                           
  4432  0071                     ??i1_putch:	
  4433                           ; 1 bytes @ 0x1
  4434                           
  4435  0071                     protRCV@rcv:	
  4436                           ; 1 bytes @ 0x1
  4437                           
  4438  0071                     i1rstShadow@start:	
  4439                           ; 1 bytes @ 0x1
  4440                           
  4441  0071                     i1rstMaskOn@start:	
  4442                           ; 1 bytes @ 0x1
  4443                           
  4444  0071                     i1rstMaskOff@start:	
  4445                           ; 1 bytes @ 0x1
  4446                           
  4447  0071                     i1rstDemoOn@start:	
  4448                           ; 1 bytes @ 0x1
  4449                           
  4450  0071                     i1rstMusik@start:	
  4451                           ; 1 bytes @ 0x1
  4452                           
  4453  0071                     i1rstDemoOff@start:	
  4454                           ; 1 bytes @ 0x1
  4455                           
  4456  0071                     i1rstPressOn@start:	
  4457                           ; 1 bytes @ 0x1
  4458                           
  4459  0071                     i1rstPressOff@start:	
  4460                           ; 1 bytes @ 0x1
  4461                           
  4462  0071                     i1rstSeq@i:	
  4463                           ; 1 bytes @ 0x1
  4464                           
  4465  0071                     i1putch@val:	
  4466                           ; 1 bytes @ 0x1
  4467                           
  4468  0071                     i1waitX0ms@X:	
  4469                           ; 1 bytes @ 0x1
  4470                           
  4471                           
  4472                           ; 1 bytes @ 0x1
  4473  0071                     	ds	1
  4474  0072                     ??_IOCCF1_ISR:
  4475  0072                     ??_IOCCF3_ISR:	
  4476                           ; 1 bytes @ 0x2
  4477                           
  4478  0072                     ??_TMR1_ISR:	
  4479                           ; 1 bytes @ 0x2
  4480                           
  4481  0072                     ??_butt1Pres:	
  4482                           ; 1 bytes @ 0x2
  4483                           
  4484  0072                     ??_butt2Pres:	
  4485                           ; 1 bytes @ 0x2
  4486                           
  4487  0072                     ??_TMR1_WriteTimer:	
  4488                           ; 1 bytes @ 0x2
  4489                           
  4490  0072                     ??_execMask_Sword:	
  4491                           ; 1 bytes @ 0x2
  4492                           
  4493  0072                     ??_initStop:	
  4494                           ; 1 bytes @ 0x2
  4495                           
  4496  0072                     ??_IOC_DI1_ISR:	
  4497                           ; 1 bytes @ 0x2
  4498                           
  4499  0072                     ??_IOC_AN1_ISR:	
  4500                           ; 1 bytes @ 0x2
  4501                           
  4502                           
  4503                           ; 1 bytes @ 0x2
  4504  0072                     	ds	1
  4505  0073                     i1val2group@groupID:
  4506                           
  4507                           ; 1 bytes @ 0x3
  4508  0073                     	ds	1
  4509  0074                     i1val2group@i:
  4510                           
  4511                           ; 1 bytes @ 0x4
  4512  0074                     	ds	1
  4513  0075                     ?i1_applyColor:
  4514  0075                     i1applyColor@color:	
  4515                           ; 1 bytes @ 0x5
  4516                           
  4517                           
  4518                           ; 1 bytes @ 0x5
  4519  0075                     	ds	1
  4520  0076                     i1applyColor@intensity:
  4521                           
  4522                           ; 1 bytes @ 0x6
  4523  0076                     	ds	1
  4524  0077                     ??i1_applyColor:
  4525                           
  4526                           ; 1 bytes @ 0x7
  4527  0077                     	ds	1
  4528  0078                     i1applyColor@group:
  4529                           
  4530                           ; 1 bytes @ 0x8
  4531  0078                     	ds	1
  4532  0079                     ??i1_dragonCrashTool:
  4533  0079                     ??i1_refriShoulderTool:	
  4534                           ; 1 bytes @ 0x9
  4535                           
  4536  0079                     ?i1_allBodyVal:	
  4537                           ; 1 bytes @ 0x9
  4538                           
  4539  0079                     i1allBodyVal@color:	
  4540                           ; 1 bytes @ 0x9
  4541                           
  4542                           
  4543                           ; 1 bytes @ 0x9
  4544  0079                     	ds	1
  4545  007A                     ??i1_allBodyVal:
  4546                           
  4547                           ; 1 bytes @ 0xA
  4548  007A                     	ds	1
  4549  007B                     ??i1_rstDragon:
  4550  007B                     i1refriShoulderTool@on:	
  4551                           ; 1 bytes @ 0xB
  4552                           
  4553                           
  4554                           ; 1 bytes @ 0xB
  4555  007B                     	ds	1
  4556  007C                     i1rstDragon@start:
  4557  007C                     i1refriShoulderTool@col:	
  4558                           ; 1 bytes @ 0xC
  4559                           
  4560  007C                     i1allBodyVal@val:	
  4561                           ; 1 bytes @ 0xC
  4562                           
  4563                           
  4564                           ; 1 bytes @ 0xC
  4565  007C                     	ds	1
  4566  007D                     ??i1_rstRefri:
  4567  007D                     i1rstDragon@i:	
  4568                           ; 1 bytes @ 0xD
  4569                           
  4570  007D                     i1allBodyVal@i:	
  4571                           ; 1 bytes @ 0xD
  4572                           
  4573                           
  4574                           ; 1 bytes @ 0xD
  4575  007D                     	ds	1
  4576  007E                     ??_IOCCF2_ISR:
  4577  007E                     ??_PIN_MANAGER_IOC:	
  4578                           ; 1 bytes @ 0xE
  4579                           
  4580  007E                     ??_INTERRUPT_InterruptManager:	
  4581                           ; 1 bytes @ 0xE
  4582                           
  4583  007E                     ??_IOC_AN2_ISR:	
  4584                           ; 1 bytes @ 0xE
  4585                           
  4586  007E                     ??i1_resetAndOff:	
  4587                           ; 1 bytes @ 0xE
  4588                           
  4589  007E                     ??i1_changeDemoMode:	
  4590                           ; 1 bytes @ 0xE
  4591                           
  4592  007E                     ??i1_butt3Pres:	
  4593                           ; 1 bytes @ 0xE
  4594                           
  4595                           
  4596                           	psect	cstackBANK0
  4597  004D                     __pcstackBANK0:	
  4598                           ; 1 bytes @ 0xE
  4599                           
  4600  004D                     i1rstRefri@start:
  4601  004D                     i1resetAndOff@light:	
  4602                           ; 1 bytes @ 0x0
  4603                           
  4604                           
  4605                           ; 1 bytes @ 0x0
  4606  004D                     	ds	1
  4607  004E                     i1butt3Pres@state:
  4608                           
  4609                           ; 1 bytes @ 0x1
  4610  004E                     	ds	1
  4611  004F                     ??_pRC1_ISR:
  4612                           
  4613                           ; 1 bytes @ 0x2
  4614  004F                     	ds	1
  4615  0050                     pRC1_ISR@cha:
  4616                           
  4617                           ; 1 bytes @ 0x3
  4618  0050                     	ds	1
  4619  0051                     ?_SPI2_ExchangeByte:
  4620  0051                     ??_SPI2_Open:	
  4621                           ; 1 bytes @ 0x4
  4622                           
  4623  0051                     ?_IOCCF1_SetInterruptHandler:	
  4624                           ; 1 bytes @ 0x4
  4625                           
  4626  0051                     ?_IOCCF2_SetInterruptHandler:	
  4627                           ; 1 bytes @ 0x4
  4628                           
  4629  0051                     ?_IOCCF3_SetInterruptHandler:	
  4630                           ; 1 bytes @ 0x4
  4631                           
  4632  0051                     ??_PMD_Initialize:	
  4633                           ; 1 bytes @ 0x4
  4634                           
  4635  0051                     ??_SPI2_Initialize:	
  4636                           ; 1 bytes @ 0x4
  4637                           
  4638  0051                     ??_OSCILLATOR_Initialize:	
  4639                           ; 1 bytes @ 0x4
  4640                           
  4641  0051                     ??_WDT_Initialize:	
  4642                           ; 1 bytes @ 0x4
  4643                           
  4644  0051                     ?_EUSART_SetRxInterruptHandler:	
  4645                           ; 1 bytes @ 0x4
  4646                           
  4647  0051                     ?_EUSART_SetFramingErrorHandler:	
  4648                           ; 1 bytes @ 0x4
  4649                           
  4650  0051                     ?_EUSART_SetOverrunErrorHandler:	
  4651                           ; 1 bytes @ 0x4
  4652                           
  4653  0051                     ?_EUSART_SetErrorHandler:	
  4654                           ; 1 bytes @ 0x4
  4655                           
  4656  0051                     ?_TMR2_SetInterruptHandler:	
  4657                           ; 1 bytes @ 0x4
  4658                           
  4659  0051                     ?_TMR1_SetInterruptHandler:	
  4660                           ; 1 bytes @ 0x4
  4661                           
  4662  0051                     ??_rstMusik:	
  4663                           ; 1 bytes @ 0x4
  4664                           
  4665  0051                     ??_waitX0ms:	
  4666                           ; 1 bytes @ 0x4
  4667                           
  4668  0051                     ??_EUSART_Write:	
  4669                           ; 1 bytes @ 0x4
  4670                           
  4671  0051                     ??_valfromGroup:	
  4672                           ; 1 bytes @ 0x4
  4673                           
  4674  0051                     ?_val2group:	
  4675                           ; 1 bytes @ 0x4
  4676                           
  4677  0051                     ?_mergeBridge1:	
  4678                           ; 1 bytes @ 0x4
  4679                           
  4680  0051                     ?_mergeBridge2:	
  4681                           ; 1 bytes @ 0x4
  4682                           
  4683  0051                     ??_sendOrderX:	
  4684                           ; 1 bytes @ 0x4
  4685                           
  4686  0051                     ??_rstShadow:	
  4687                           ; 1 bytes @ 0x4
  4688                           
  4689  0051                     ??_crashOn2:	
  4690                           ; 1 bytes @ 0x4
  4691                           
  4692  0051                     ??_crashOff3:	
  4693                           ; 1 bytes @ 0x4
  4694                           
  4695  0051                     ??_rstMaskOn:	
  4696                           ; 1 bytes @ 0x4
  4697                           
  4698  0051                     ??_rstMaskOff:	
  4699                           ; 1 bytes @ 0x4
  4700                           
  4701  0051                     ??_rstDemoOn:	
  4702                           ; 1 bytes @ 0x4
  4703                           
  4704  0051                     ??_rstDemoOff:	
  4705                           ; 1 bytes @ 0x4
  4706                           
  4707  0051                     ?_seqByZone_On:	
  4708                           ; 1 bytes @ 0x4
  4709                           
  4710  0051                     ?_seqByZone_Off:	
  4711                           ; 1 bytes @ 0x4
  4712                           
  4713  0051                     ??_rstPressOn:	
  4714                           ; 1 bytes @ 0x4
  4715                           
  4716  0051                     ??_rstPressOff:	
  4717                           ; 1 bytes @ 0x4
  4718                           
  4719  0051                     ??_rstSeq:	
  4720                           ; 1 bytes @ 0x4
  4721                           
  4722  0051                     ??_protExec:	
  4723                           ; 1 bytes @ 0x4
  4724                           
  4725  0051                     ?___bmul:	
  4726                           ; 1 bytes @ 0x4
  4727                           
  4728  0051                     EUSART_Write@txData:	
  4729                           ; 1 bytes @ 0x4
  4730                           
  4731  0051                     SPI2_ExchangeByte@data:	
  4732                           ; 1 bytes @ 0x4
  4733                           
  4734  0051                     val2group@val:	
  4735                           ; 1 bytes @ 0x4
  4736                           
  4737  0051                     ___bmul@multiplicand:	
  4738                           ; 1 bytes @ 0x4
  4739                           
  4740  0051                     IOCCF1_SetInterruptHandler@InterruptHandler:	
  4741                           ; 1 bytes @ 0x4
  4742                           
  4743  0051                     IOCCF2_SetInterruptHandler@InterruptHandler:	
  4744                           ; 2 bytes @ 0x4
  4745                           
  4746  0051                     IOCCF3_SetInterruptHandler@InterruptHandler:	
  4747                           ; 2 bytes @ 0x4
  4748                           
  4749  0051                     EUSART_SetFramingErrorHandler@interruptHandler:	
  4750                           ; 2 bytes @ 0x4
  4751                           
  4752  0051                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  4753                           ; 2 bytes @ 0x4
  4754                           
  4755  0051                     EUSART_SetErrorHandler@interruptHandler:	
  4756                           ; 2 bytes @ 0x4
  4757                           
  4758  0051                     EUSART_SetRxInterruptHandler@interruptHandler:	
  4759                           ; 2 bytes @ 0x4
  4760                           
  4761  0051                     TMR2_SetInterruptHandler@InterruptHandler:	
  4762                           ; 2 bytes @ 0x4
  4763                           
  4764  0051                     TMR1_SetInterruptHandler@InterruptHandler:	
  4765                           ; 2 bytes @ 0x4
  4766                           
  4767  0051                     mergeBridge1@cantB:	
  4768                           ; 2 bytes @ 0x4
  4769                           
  4770  0051                     mergeBridge2@cantB:	
  4771                           ; 2 bytes @ 0x4
  4772                           
  4773  0051                     seqByZone_On@time:	
  4774                           ; 2 bytes @ 0x4
  4775                           
  4776  0051                     seqByZone_Off@time:	
  4777                           ; 2 bytes @ 0x4
  4778                           
  4779                           
  4780                           ; 2 bytes @ 0x4
  4781  0051                     	ds	1
  4782  0052                     ??_SPI2_ExchangeByte:
  4783  0052                     ??_putch:	
  4784                           ; 1 bytes @ 0x5
  4785                           
  4786  0052                     ??_val2group:	
  4787                           ; 1 bytes @ 0x5
  4788                           
  4789  0052                     ??_dotStart:	
  4790                           ; 1 bytes @ 0x5
  4791                           
  4792  0052                     ?_sendDotStar:	
  4793                           ; 1 bytes @ 0x5
  4794                           
  4795  0052                     ??___bmul:	
  4796                           ; 1 bytes @ 0x5
  4797                           
  4798  0052                     sendDotStar@g:	
  4799                           ; 1 bytes @ 0x5
  4800                           
  4801  0052                     rstShadow@start:	
  4802                           ; 1 bytes @ 0x5
  4803                           
  4804  0052                     crashOff3@ix:	
  4805                           ; 1 bytes @ 0x5
  4806                           
  4807  0052                     rstMaskOn@start:	
  4808                           ; 1 bytes @ 0x5
  4809                           
  4810  0052                     rstMaskOff@start:	
  4811                           ; 1 bytes @ 0x5
  4812                           
  4813  0052                     rstDemoOn@start:	
  4814                           ; 1 bytes @ 0x5
  4815                           
  4816  0052                     rstMusik@start:	
  4817                           ; 1 bytes @ 0x5
  4818                           
  4819  0052                     rstDemoOff@start:	
  4820                           ; 1 bytes @ 0x5
  4821                           
  4822  0052                     rstPressOn@start:	
  4823                           ; 1 bytes @ 0x5
  4824                           
  4825  0052                     rstPressOff@start:	
  4826                           ; 1 bytes @ 0x5
  4827                           
  4828  0052                     rstSeq@i:	
  4829                           ; 1 bytes @ 0x5
  4830                           
  4831  0052                     putch@val:	
  4832                           ; 1 bytes @ 0x5
  4833                           
  4834  0052                     waitX0ms@X:	
  4835                           ; 1 bytes @ 0x5
  4836                           
  4837                           
  4838                           ; 1 bytes @ 0x5
  4839  0052                     	ds	1
  4840  0053                     ??_IOCCF1_SetInterruptHandler:
  4841  0053                     ??_IOCCF2_SetInterruptHandler:	
  4842                           ; 1 bytes @ 0x6
  4843                           
  4844  0053                     ??_IOCCF3_SetInterruptHandler:	
  4845                           ; 1 bytes @ 0x6
  4846                           
  4847  0053                     ??_TMR2_Initialize:	
  4848                           ; 1 bytes @ 0x6
  4849                           
  4850  0053                     ??_TMR1_Initialize:	
  4851                           ; 1 bytes @ 0x6
  4852                           
  4853  0053                     ??_EUSART_Initialize:	
  4854                           ; 1 bytes @ 0x6
  4855                           
  4856  0053                     ??_EUSART_SetRxInterruptHandler:	
  4857                           ; 1 bytes @ 0x6
  4858                           
  4859  0053                     ??_EUSART_SetFramingErrorHandler:	
  4860                           ; 1 bytes @ 0x6
  4861                           
  4862  0053                     ??_EUSART_SetOverrunErrorHandler:	
  4863                           ; 1 bytes @ 0x6
  4864                           
  4865  0053                     ??_EUSART_SetErrorHandler:	
  4866                           ; 1 bytes @ 0x6
  4867                           
  4868  0053                     ??_TMR2_SetInterruptHandler:	
  4869                           ; 1 bytes @ 0x6
  4870                           
  4871  0053                     ??_TMR1_SetInterruptHandler:	
  4872                           ; 1 bytes @ 0x6
  4873                           
  4874  0053                     ??_PIN_MANAGER_Initialize:	
  4875                           ; 1 bytes @ 0x6
  4876                           
  4877  0053                     ??_SYSTEM_Initialize:	
  4878                           ; 1 bytes @ 0x6
  4879                           
  4880  0053                     ??_seqByZone_On:	
  4881                           ; 1 bytes @ 0x6
  4882                           
  4883  0053                     ??_seqByZone_Off:	
  4884                           ; 1 bytes @ 0x6
  4885                           
  4886  0053                     valfromGroup@groupID:	
  4887                           ; 1 bytes @ 0x6
  4888                           
  4889  0053                     dotStart@i:	
  4890                           ; 1 bytes @ 0x6
  4891                           
  4892  0053                     sendDotStar@b:	
  4893                           ; 1 bytes @ 0x6
  4894                           
  4895  0053                     ___bmul@product:	
  4896                           ; 1 bytes @ 0x6
  4897                           
  4898  0053                     mergeBridge1@accum:	
  4899                           ; 1 bytes @ 0x6
  4900                           
  4901  0053                     mergeBridge2@accum:	
  4902                           ; 2 bytes @ 0x6
  4903                           
  4904                           
  4905                           ; 2 bytes @ 0x6
  4906  0053                     	ds	1
  4907  0054                     ??_sendDotStar:
  4908  0054                     SPI2_Open@spi2UniqueConfiguration:	
  4909                           ; 1 bytes @ 0x7
  4910                           
  4911  0054                     valfromGroup@i:	
  4912                           ; 1 bytes @ 0x7
  4913                           
  4914  0054                     val2group@groupID:	
  4915                           ; 1 bytes @ 0x7
  4916                           
  4917  0054                     ___bmul@multiplier:	
  4918                           ; 1 bytes @ 0x7
  4919                           
  4920                           
  4921                           ; 1 bytes @ 0x7
  4922  0054                     	ds	1
  4923  0055                     ?_mergeGroup1:
  4924  0055                     ?_mergeGroup2:	
  4925                           ; 1 bytes @ 0x8
  4926                           
  4927  0055                     ??_mergeBridge1:	
  4928                           ; 1 bytes @ 0x8
  4929                           
  4930  0055                     ??_mergeBridge2:	
  4931                           ; 1 bytes @ 0x8
  4932                           
  4933  0055                     val2group@i:	
  4934                           ; 1 bytes @ 0x8
  4935                           
  4936  0055                     sendDotStar@r:	
  4937                           ; 1 bytes @ 0x8
  4938                           
  4939  0055                     mergeGroup1@accum:	
  4940                           ; 1 bytes @ 0x8
  4941                           
  4942  0055                     mergeGroup2@accum:	
  4943                           ; 2 bytes @ 0x8
  4944                           
  4945                           
  4946                           ; 2 bytes @ 0x8
  4947  0055                     	ds	1
  4948  0056                     ?_applyColor:
  4949  0056                     ??_sendOrderDot:	
  4950                           ; 1 bytes @ 0x9
  4951                           
  4952  0056                     ??_translateShadows:	
  4953                           ; 1 bytes @ 0x9
  4954                           
  4955  0056                     ??_seqApply:	
  4956                           ; 1 bytes @ 0x9
  4957                           
  4958  0056                     ??_maskOn:	
  4959                           ; 1 bytes @ 0x9
  4960                           
  4961  0056                     ??_maskOff:	
  4962                           ; 1 bytes @ 0x9
  4963                           
  4964  0056                     ??_musik:	
  4965                           ; 1 bytes @ 0x9
  4966                           
  4967  0056                     applyColor@color:	
  4968                           ; 1 bytes @ 0x9
  4969                           
  4970                           
  4971                           ; 1 bytes @ 0x9
  4972  0056                     	ds	1
  4973  0057                     ??_mergeGroup1:
  4974  0057                     ??_mergeGroup2:	
  4975                           ; 1 bytes @ 0xA
  4976                           
  4977  0057                     translateShadows@sas:	
  4978                           ; 1 bytes @ 0xA
  4979                           
  4980  0057                     seqByZone_On@num:	
  4981                           ; 1 bytes @ 0xA
  4982                           
  4983  0057                     seqByZone_Off@num:	
  4984                           ; 1 bytes @ 0xA
  4985                           
  4986  0057                     applyColor@intensity:	
  4987                           ; 1 bytes @ 0xA
  4988                           
  4989                           
  4990                           ; 1 bytes @ 0xA
  4991  0057                     	ds	1
  4992  0058                     ??_applyColor:
  4993  0058                     ??_SeqPresOn:	
  4994                           ; 1 bytes @ 0xB
  4995                           
  4996  0058                     translateShadows@i:	
  4997                           ; 1 bytes @ 0xB
  4998                           
  4999                           
  5000                           ; 1 bytes @ 0xB
  5001  0058                     	ds	1
  5002  0059                     ??_despShadow:
  5003  0059                     maskOff@i:	
  5004                           ; 1 bytes @ 0xC
  5005                           
  5006  0059                     applyColor@group:	
  5007                           ; 1 bytes @ 0xC
  5008                           
  5009  0059                     mergeBridge1@i:	
  5010                           ; 1 bytes @ 0xC
  5011                           
  5012  0059                     mergeBridge2@i:	
  5013                           ; 2 bytes @ 0xC
  5014                           
  5015                           
  5016                           ; 2 bytes @ 0xC
  5017  0059                     	ds	1
  5018  005A                     ?_allBodyVal:
  5019  005A                     ??_initArrays:	
  5020                           ; 1 bytes @ 0xD
  5021                           
  5022  005A                     ??_dragonCrashTool:	
  5023                           ; 1 bytes @ 0xD
  5024                           
  5025  005A                     ??_refriShoulderTool:	
  5026                           ; 1 bytes @ 0xD
  5027                           
  5028  005A                     maskOff@i_1379:	
  5029                           ; 1 bytes @ 0xD
  5030                           
  5031  005A                     allBodyVal@color:	
  5032                           ; 1 bytes @ 0xD
  5033                           
  5034                           
  5035                           ; 1 bytes @ 0xD
  5036  005A                     	ds	1
  5037  005B                     ??_allBodyVal:
  5038  005B                     initArrays@i:	
  5039                           ; 1 bytes @ 0xE
  5040                           
  5041  005B                     maskOff@i_1381:	
  5042                           ; 1 bytes @ 0xE
  5043                           
  5044                           
  5045                           ; 1 bytes @ 0xE
  5046  005B                     	ds	1
  5047  005C                     ??_rstDragon:
  5048  005C                     despShadow@i:	
  5049                           ; 1 bytes @ 0xF
  5050                           
  5051  005C                     refriShoulderTool@on:	
  5052                           ; 1 bytes @ 0xF
  5053                           
  5054                           
  5055                           ; 1 bytes @ 0xF
  5056  005C                     	ds	1
  5057  005D                     despShadow@i_1341:
  5058  005D                     rstDragon@start:	
  5059                           ; 1 bytes @ 0x10
  5060                           
  5061  005D                     refriShoulderTool@col:	
  5062                           ; 1 bytes @ 0x10
  5063                           
  5064  005D                     allBodyVal@val:	
  5065                           ; 1 bytes @ 0x10
  5066                           
  5067                           
  5068                           ; 1 bytes @ 0x10
  5069  005D                     	ds	1
  5070  005E                     ??_rstRefri:
  5071  005E                     rstDragon@i:	
  5072                           ; 1 bytes @ 0x11
  5073                           
  5074  005E                     allBodyVal@i:	
  5075                           ; 1 bytes @ 0x11
  5076                           
  5077  005E                     mergeGroup1@size:	
  5078                           ; 1 bytes @ 0x11
  5079                           
  5080  005E                     mergeGroup2@size:	
  5081                           ; 2 bytes @ 0x11
  5082                           
  5083  005E                     sendOrderDot@i:	
  5084                           ; 2 bytes @ 0x11
  5085                           
  5086                           
  5087                           ; 2 bytes @ 0x11
  5088  005E                     	ds	1
  5089  005F                     ??_resetAndOff:
  5090  005F                     ??_dragonCrash:	
  5091                           ; 1 bytes @ 0x12
  5092                           
  5093  005F                     ??_demoEfectOn:	
  5094                           ; 1 bytes @ 0x12
  5095                           
  5096  005F                     rstRefri@start:	
  5097                           ; 1 bytes @ 0x12
  5098                           
  5099  005F                     resetAndOff@light:	
  5100                           ; 1 bytes @ 0x12
  5101                           
  5102                           
  5103                           ; 1 bytes @ 0x12
  5104  005F                     	ds	1
  5105  0060                     ??_butt3Pres:
  5106  0060                     ??_refriShoulder:	
  5107                           ; 1 bytes @ 0x13
  5108                           
  5109  0060                     ??_demoEfectOff:	
  5110                           ; 1 bytes @ 0x13
  5111                           
  5112  0060                     ??_SeqPresOff:	
  5113                           ; 1 bytes @ 0x13
  5114                           
  5115  0060                     mergeGroup1@groupID:	
  5116                           ; 1 bytes @ 0x13
  5117                           
  5118  0060                     mergeGroup2@groupID:	
  5119                           ; 1 bytes @ 0x13
  5120                           
  5121  0060                     butt3Pres@state:	
  5122                           ; 1 bytes @ 0x13
  5123                           
  5124                           
  5125                           ; 1 bytes @ 0x13
  5126  0060                     	ds	1
  5127  0061                     ??_changeDemoMode:
  5128  0061                     mergeGroup1@i:	
  5129                           ; 1 bytes @ 0x14
  5130                           
  5131  0061                     mergeGroup2@i:	
  5132                           ; 2 bytes @ 0x14
  5133                           
  5134                           
  5135                           ; 2 bytes @ 0x14
  5136  0061                     	ds	2
  5137  0063                     ??_merger:
  5138                           
  5139                           ; 1 bytes @ 0x16
  5140  0063                     	ds	7
  5141  006A                     ??_sendOrderXs:
  5142  006A                     ??_secuences:	
  5143                           ; 1 bytes @ 0x1D
  5144                           
  5145                           
  5146                           ; 1 bytes @ 0x1D
  5147  006A                     	ds	1
  5148  006B                     ??_main:
  5149                           
  5150                           	psect	maintext
  5151  078D                     __pmaintext:	
  5152                           ; 1 bytes @ 0x1E
  5153 ;;
  5154 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  5155 ;;
  5156 ;; *************** function _main *****************
  5157 ;; Defined at:
  5158 ;;		line 1664 in file "main.c"
  5159 ;; Parameters:    Size  Location     Type
  5160 ;;		None
  5161 ;; Auto vars:     Size  Location     Type
  5162 ;;		None
  5163 ;; Return value:  Size  Location     Type
  5164 ;;                  1    wreg      void 
  5165 ;; Registers used:
  5166 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5167 ;; Tracked objects:
  5168 ;;		On entry : B1F/0
  5169 ;;		On exit  : 0/0
  5170 ;;		Unchanged: 0/0
  5171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5176 ;;Total ram usage:        0 bytes
  5177 ;; Hardware stack levels required when called: 18
  5178 ;; This function calls:
  5179 ;;		_EUSART_SetRxInterruptHandler
  5180 ;;		_IOCCF1_SetInterruptHandler
  5181 ;;		_IOCCF2_SetInterruptHandler
  5182 ;;		_IOCCF3_SetInterruptHandler
  5183 ;;		_SPI2_Open
  5184 ;;		_SYSTEM_Initialize
  5185 ;;		_TMR1_SetInterruptHandler
  5186 ;;		_TMR2_SetInterruptHandler
  5187 ;;		_butt3Pres
  5188 ;;		_changeDemoMode
  5189 ;;		_initArrays
  5190 ;;		_protExec
  5191 ;;		_resetAndOff
  5192 ;;		_secuences
  5193 ;; This function is called by:
  5194 ;;		Startup code after reset
  5195 ;; This function uses a non-reentrant model
  5196 ;;
  5197                           
  5198                           
  5199                           ;psect for function _main
  5200  078D                     _main:
  5201  078D                     l7823:	
  5202                           ;incstack = 0
  5203 ;; hardware stack exceeded
  5204                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5205                           
  5206                           
  5207                           ;main.c: 1665:     SYSTEM_Initialize();
  5208  078D  31A4  2455  3187   	fcall	_SYSTEM_Initialize
  5209  0790                     l7825:
  5210                           
  5211                           ;main.c: 1666:     initArrays();
  5212  0790  31A7  27B7  3187   	fcall	_initArrays
  5213  0793                     l7827:
  5214                           
  5215                           ;main.c: 1667:     SPI2_Open(MASTER0_CONFIG);
  5216  0793  3000               	movlw	0
  5217  0794  319B  2373  3187   	fcall	_SPI2_Open
  5218  0797                     l7829:
  5219                           
  5220                           ;main.c: 1668:     TMR2_SetInterruptHandler(pTMR2_ISR);
  5221  0797  3072               	movlw	low _pTMR2_ISR
  5222  0798  0020               	movlb	0	; select bank0
  5223  0799  00D1               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  5224  079A  3023               	movlw	high _pTMR2_ISR
  5225  079B  00D2               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  5226  079C  31A1  2165  3187   	fcall	_TMR2_SetInterruptHandler
  5227  079F                     l7831:
  5228                           
  5229                           ;main.c: 1669:     TMR1_SetInterruptHandler(pTMR1_ISR);
  5230  079F  3000               	movlw	low _pTMR1_ISR
  5231  07A0  0020               	movlb	0	; select bank0
  5232  07A1  00D1               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  5233  07A2  3025               	movlw	high _pTMR1_ISR
  5234  07A3  00D2               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  5235  07A4  31A1  215C  3187   	fcall	_TMR1_SetInterruptHandler
  5236  07A7                     l7833:
  5237                           
  5238                           ;main.c: 1670:     IOCCF1_SetInterruptHandler(IOC_DI1_ISR);
  5239  07A7  3051               	movlw	low _IOC_DI1_ISR
  5240  07A8  0020               	movlb	0	; select bank0
  5241  07A9  00D1               	movwf	IOCCF1_SetInterruptHandler@InterruptHandler
  5242  07AA  3022               	movlw	high _IOC_DI1_ISR
  5243  07AB  00D2               	movwf	IOCCF1_SetInterruptHandler@InterruptHandler+1
  5244  07AC  31A1  2141  3187   	fcall	_IOCCF1_SetInterruptHandler
  5245  07AF                     l7835:
  5246                           
  5247                           ;main.c: 1671:     IOCCF2_SetInterruptHandler(IOC_AN2_ISR);
  5248  07AF  3035               	movlw	low _IOC_AN2_ISR
  5249  07B0  0020               	movlb	0	; select bank0
  5250  07B1  00D1               	movwf	IOCCF2_SetInterruptHandler@InterruptHandler
  5251  07B2  3022               	movlw	high _IOC_AN2_ISR
  5252  07B3  00D2               	movwf	IOCCF2_SetInterruptHandler@InterruptHandler+1
  5253  07B4  31A1  214A  3187   	fcall	_IOCCF2_SetInterruptHandler
  5254  07B7                     l7837:
  5255                           
  5256                           ;main.c: 1672:     IOCCF3_SetInterruptHandler(IOC_AN1_ISR);
  5257  07B7  307E               	movlw	low _IOC_AN1_ISR
  5258  07B8  0020               	movlb	0	; select bank0
  5259  07B9  00D1               	movwf	IOCCF3_SetInterruptHandler@InterruptHandler
  5260  07BA  3022               	movlw	high _IOC_AN1_ISR
  5261  07BB  00D2               	movwf	IOCCF3_SetInterruptHandler@InterruptHandler+1
  5262  07BC  31A1  2153  3187   	fcall	_IOCCF3_SetInterruptHandler
  5263  07BF                     l7839:
  5264                           
  5265                           ;main.c: 1673:     EUSART_SetRxInterruptHandler(pRC1_ISR);
  5266  07BF  3088               	movlw	low _pRC1_ISR
  5267  07C0  0020               	movlb	0	; select bank0
  5268  07C1  00D1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  5269  07C2  301E               	movlw	high _pRC1_ISR
  5270  07C3  00D2               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  5271  07C4  31A1  2138  3187   	fcall	_EUSART_SetRxInterruptHandler
  5272  07C7                     l7841:
  5273                           
  5274                           ;main.c: 1675:     (INTCONbits.GIE = 1);
  5275  07C7  178B               	bsf	11,7	;volatile
  5276  07C8                     l7843:
  5277                           
  5278                           ;main.c: 1676:     (INTCONbits.PEIE = 1);
  5279  07C8  170B               	bsf	11,6	;volatile
  5280  07C9                     l7845:
  5281                           
  5282                           ;main.c: 1678:     resetAndOff(1);
  5283  07C9  3001               	movlw	1
  5284  07CA  3199  216D  3187   	fcall	_resetAndOff
  5285  07CD                     l7847:
  5286                           
  5287                           ;main.c: 1679:     butt3Pres(!PORTCbits.RC2);
  5288  07CD  1003               	clrc
  5289  07CE  0020               	movlb	0	; select bank0
  5290  07CF  1D0E               	btfss	14,2	;volatile
  5291  07D0  1403               	setc
  5292  07D1  3000               	movlw	0
  5293  07D2  3D09               	addwfc	9,w
  5294  07D3  31A6  2606  3187   	fcall	_butt3Pres
  5295  07D6                     l7849:
  5296                           
  5297                           ;main.c: 1682:     {;main.c: 1683:         if(tick) {
  5298  07D6  0020               	movlb	0	; select bank0
  5299  07D7  0847               	movf	_tick,w
  5300  07D8  1903               	btfsc	3,2
  5301  07D9  2FDB               	goto	u6711
  5302  07DA  2FDC               	goto	u6710
  5303  07DB                     u6711:
  5304  07DB  2FE0               	goto	l7855
  5305  07DC                     u6710:
  5306  07DC                     l7851:
  5307                           
  5308                           ;main.c: 1684:             tick = 0;
  5309  07DC  01C7               	clrf	_tick
  5310  07DD                     l7853:
  5311                           
  5312                           ;main.c: 1685:             secuences();
  5313  07DD  319D  25F3  3187   	fcall	_secuences
  5314  07E0                     l7855:
  5315                           
  5316                           ;main.c: 1687:         if(DemoSwitchChange && !waitingTime) {
  5317  07E0  0021               	movlb	1	; select bank1
  5318  07E1  0866               	movf	_DemoSwitchChange^(0+128),w
  5319  07E2  1903               	btfsc	3,2
  5320  07E3  2FE5               	goto	u6721
  5321  07E4  2FE6               	goto	u6720
  5322  07E5                     u6721:
  5323  07E5  2FF1               	goto	l7863
  5324  07E6                     u6720:
  5325  07E6                     l7857:
  5326  07E6  0020               	movlb	0	; select bank0
  5327  07E7  0849               	movf	_waitingTime,w
  5328  07E8  1D03               	btfss	3,2
  5329  07E9  2FEB               	goto	u6731
  5330  07EA  2FEC               	goto	u6730
  5331  07EB                     u6731:
  5332  07EB  2FF1               	goto	l7863
  5333  07EC                     u6730:
  5334  07EC                     l7859:
  5335                           
  5336                           ;main.c: 1688:             DemoSwitchChange = 0;
  5337  07EC  0021               	movlb	1	; select bank1
  5338  07ED  01E6               	clrf	_DemoSwitchChange^(0+128)
  5339  07EE                     l7861:
  5340                           
  5341                           ;main.c: 1689:             changeDemoMode();
  5342  07EE  31A3  23F4  3187   	fcall	_changeDemoMode
  5343  07F1                     l7863:
  5344                           
  5345                           ;main.c: 1691:         if(execChan) {
  5346  07F1  0021               	movlb	1	; select bank1
  5347  07F2  0853               	movf	_execChan^(0+128),w
  5348  07F3  1903               	btfsc	3,2
  5349  07F4  2FF6               	goto	u6741
  5350  07F5  2FF7               	goto	u6740
  5351  07F6                     u6741:
  5352  07F6  2FD6               	goto	l7849
  5353  07F7                     u6740:
  5354  07F7                     l7865:
  5355                           
  5356                           ;main.c: 1692:             protExec();
  5357  07F7  3198  2038  3187   	fcall	_protExec
  5358  07FA  2FD6               	goto	l7849
  5359  07FB  3180  2847         	ljmp	start
  5360  07FD                     __end_of_main:
  5361                           
  5362                           	psect	text1
  5363  1DF3                     __ptext1:	
  5364 ;; *************** function _secuences *****************
  5365 ;; Defined at:
  5366 ;;		line 1405 in file "main.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;		None
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;		None
  5371 ;; Return value:  Size  Location     Type
  5372 ;;                  1    wreg      void 
  5373 ;; Registers used:
  5374 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5375 ;; Tracked objects:
  5376 ;;		On entry : 0/0
  5377 ;;		On exit  : 0/0
  5378 ;;		Unchanged: 0/0
  5379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5382 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5383 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5384 ;;Total ram usage:        1 bytes
  5385 ;; Hardware stack levels used: 1
  5386 ;; Hardware stack levels required when called: 17
  5387 ;; This function calls:
  5388 ;;		_SeqPresOff
  5389 ;;		_SeqPresOn
  5390 ;;		_demoEfectOff
  5391 ;;		_demoEfectOn
  5392 ;;		_despShadow
  5393 ;;		_dragonCrash
  5394 ;;		_maskOff
  5395 ;;		_maskOn
  5396 ;;		_musik
  5397 ;;		_refriShoulder
  5398 ;;		_rstShadow
  5399 ;;		_sendOrderXs
  5400 ;; This function is called by:
  5401 ;;		_main
  5402 ;; This function uses a non-reentrant model
  5403 ;;
  5404                           
  5405                           
  5406                           ;psect for function _secuences
  5407  1DF3                     _secuences:
  5408  1DF3                     l7773:	
  5409                           ;incstack = 0
  5410 ;; hardware stack exceeded
  5411                           ; Regs used in _secuences: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5412                           
  5413                           
  5414                           ;main.c: 1406:     if(run) {
  5415  1DF3  0020               	movlb	0	; select bank0
  5416  1DF4  0845               	movf	_run,w
  5417  1DF5  1903               	btfsc	3,2
  5418  1DF6  2DF8               	goto	u6591
  5419  1DF7  2DF9               	goto	u6590
  5420  1DF8                     u6591:
  5421  1DF8  2E7E               	goto	l7819
  5422  1DF9                     u6590:
  5423  1DF9                     l7775:
  5424                           
  5425                           ;main.c: 1407:         if(flagPressOn)
  5426  1DF9  0021               	movlb	1	; select bank1
  5427  1DFA  0863               	movf	_flagPressOn^(0+128),w
  5428  1DFB  1903               	btfsc	3,2
  5429  1DFC  2DFE               	goto	u6601
  5430  1DFD  2DFF               	goto	u6600
  5431  1DFE                     u6601:
  5432  1DFE  2E03               	goto	l7779
  5433  1DFF                     u6600:
  5434  1DFF                     l7777:
  5435                           
  5436                           ;main.c: 1408:             SeqPresOn();
  5437  1DFF  3190  200A  319D   	fcall	_SeqPresOn
  5438  1E02  2E7E               	goto	l7819
  5439  1E03                     l7779:
  5440  1E03  0862               	movf	_flagPressOff^(0+128),w
  5441  1E04  1903               	btfsc	3,2
  5442  1E05  2E07               	goto	u6611
  5443  1E06  2E08               	goto	u6610
  5444  1E07                     u6611:
  5445  1E07  2E0C               	goto	l7783
  5446  1E08                     u6610:
  5447  1E08                     l7781:
  5448                           
  5449                           ;main.c: 1410:             SeqPresOff();
  5450  1E08  319D  257F  319D   	fcall	_SeqPresOff
  5451  1E0B  2E7E               	goto	l7819
  5452  1E0C                     l7783:
  5453  1E0C  0020               	movlb	0	; select bank0
  5454  1E0D  0843               	movf	_flagDemoOn,w
  5455  1E0E  1903               	btfsc	3,2
  5456  1E0F  2E11               	goto	u6621
  5457  1E10  2E12               	goto	u6620
  5458  1E11                     u6621:
  5459  1E11  2E16               	goto	l7787
  5460  1E12                     u6620:
  5461  1E12                     l7785:
  5462                           
  5463                           ;main.c: 1412:             demoEfectOn();
  5464  1E12  319A  2211  319D   	fcall	_demoEfectOn
  5465  1E15  2E7E               	goto	l7819
  5466  1E16                     l7787:
  5467  1E16  0021               	movlb	1	; select bank1
  5468  1E17  0861               	movf	_flagDemoOff^(0+128),w
  5469  1E18  1903               	btfsc	3,2
  5470  1E19  2E1B               	goto	u6631
  5471  1E1A  2E1C               	goto	u6630
  5472  1E1B                     u6631:
  5473  1E1B  2E20               	goto	l7791
  5474  1E1C                     u6630:
  5475  1E1C                     l7789:
  5476                           
  5477                           ;main.c: 1414:             demoEfectOff();
  5478  1E1C  319C  24A2  319D   	fcall	_demoEfectOff
  5479  1E1F  2E7E               	goto	l7819
  5480  1E20                     l7791:
  5481  1E20  0020               	movlb	0	; select bank0
  5482  1E21  0846               	movf	_modoPress_nDemo,w
  5483  1E22  1903               	btfsc	3,2
  5484  1E23  2E25               	goto	u6641
  5485  1E24  2E26               	goto	u6640
  5486  1E25                     u6641:
  5487  1E25  2E33               	goto	l7795
  5488  1E26                     u6640:
  5489  1E26                     l7793:
  5490                           
  5491                           ;main.c: 1416:             maskOn();
  5492  1E26  319A  22BF  319D   	fcall	_maskOn
  5493                           
  5494                           ;main.c: 1417:             maskOff();
  5495  1E29  3188  2044  319D   	fcall	_maskOff
  5496                           
  5497                           ;main.c: 1418:             dragonCrash();
  5498  1E2C  319A  2268  319D   	fcall	_dragonCrash
  5499                           
  5500                           ;main.c: 1419:             refriShoulder();
  5501  1E2F  319D  2510  319D   	fcall	_refriShoulder
  5502                           
  5503                           ;main.c: 1420:         }else {
  5504  1E32  2E7E               	goto	l7819
  5505  1E33                     l7795:
  5506                           
  5507                           ;main.c: 1421:             if(lightsOn && !runShadow) {
  5508  1E33  0844               	movf	_lightsOn,w
  5509  1E34  1903               	btfsc	3,2
  5510  1E35  2E37               	goto	u6651
  5511  1E36  2E38               	goto	u6650
  5512  1E37                     u6651:
  5513  1E37  2E72               	goto	l7815
  5514  1E38                     u6650:
  5515  1E38                     l7797:
  5516  1E38  083F               	movf	_runShadow,w
  5517  1E39  1D03               	btfss	3,2
  5518  1E3A  2E3C               	goto	u6661
  5519  1E3B  2E3D               	goto	u6660
  5520  1E3C                     u6661:
  5521  1E3C  2E72               	goto	l7815
  5522  1E3D                     u6660:
  5523  1E3D                     l7799:
  5524                           
  5525                           ;main.c: 1422:                 stepContDemo++;
  5526  1E3D  3001               	movlw	1
  5527  1E3E  00EA               	movwf	??_secuences
  5528  1E3F  086A               	movf	??_secuences,w
  5529  1E40  0021               	movlb	1	; select bank1
  5530  1E41  07D7               	addwf	_stepContDemo^(0+128),f
  5531  1E42                     l7801:
  5532                           
  5533                           ;main.c: 1423:                 if(stepContDemo >= 96) {
  5534  1E42  3060               	movlw	96
  5535  1E43  0257               	subwf	_stepContDemo^(0+128),w
  5536  1E44  1C03               	skipc
  5537  1E45  2E47               	goto	u6671
  5538  1E46  2E48               	goto	u6670
  5539  1E47                     u6671:
  5540  1E47  2E53               	goto	l7807
  5541  1E48                     u6670:
  5542  1E48                     l7803:
  5543                           
  5544                           ;main.c: 1424:                     secCont++;
  5545  1E48  3001               	movlw	1
  5546  1E49  0023               	movlb	3	; select bank3
  5547  1E4A  07C6               	addwf	_secCont^(0+384),f
  5548  1E4B  3000               	movlw	0
  5549  1E4C  3DC7               	addwfc	(_secCont+1)^(0+384),f
  5550  1E4D  3000               	movlw	0
  5551  1E4E  3DC8               	addwfc	(_secCont+2)^(0+384),f
  5552  1E4F  3000               	movlw	0
  5553  1E50  3DC9               	addwfc	(_secCont+3)^(0+384),f
  5554  1E51                     l7805:
  5555                           
  5556                           ;main.c: 1425:                     stepContDemo = 0;
  5557  1E51  0021               	movlb	1	; select bank1
  5558  1E52  01D7               	clrf	_stepContDemo^(0+128)
  5559  1E53                     l7807:
  5560                           
  5561                           ;main.c: 1427:                 if(secCont >= 30) {
  5562  1E53  0023               	movlb	3	; select bank3
  5563  1E54  0849               	movf	(_secCont+3)^(0+384),w
  5564  1E55  1D03               	btfss	3,2
  5565  1E56  2E63               	goto	u6680
  5566  1E57  0848               	movf	(_secCont+2)^(0+384),w
  5567  1E58  1D03               	btfss	3,2
  5568  1E59  2E63               	goto	u6680
  5569  1E5A  0847               	movf	(_secCont+1)^(0+384),w
  5570  1E5B  1D03               	btfss	3,2
  5571  1E5C  2E63               	goto	u6680
  5572  1E5D  301E               	movlw	30
  5573  1E5E  0246               	subwf	_secCont^(0+384),w
  5574  1E5F  1C03               	btfss	3,0
  5575  1E60  2E62               	goto	u6681
  5576  1E61  2E63               	goto	u6680
  5577  1E62                     u6681:
  5578  1E62  2E72               	goto	l7815
  5579  1E63                     u6680:
  5580  1E63                     l7809:
  5581                           
  5582                           ;main.c: 1428:                     secCont = 0;
  5583  1E63  3000               	movlw	0
  5584  1E64  0023               	movlb	3	; select bank3
  5585  1E65  00C9               	movwf	(_secCont+3)^(0+384)
  5586  1E66  3000               	movlw	0
  5587  1E67  00C8               	movwf	(_secCont+2)^(0+384)
  5588  1E68  3000               	movlw	0
  5589  1E69  00C7               	movwf	(_secCont+1)^(0+384)
  5590  1E6A  3000               	movlw	0
  5591  1E6B  00C6               	movwf	_secCont^(0+384)
  5592  1E6C                     l7811:
  5593                           
  5594                           ;main.c: 1429:                     stepContDemo = 0;
  5595  1E6C  0021               	movlb	1	; select bank1
  5596  1E6D  01D7               	clrf	_stepContDemo^(0+128)
  5597  1E6E                     l7813:
  5598                           
  5599                           ;main.c: 1430:                     rstShadow(1);
  5600  1E6E  3001               	movlw	1
  5601  1E6F  31A2  22AB  319D   	fcall	_rstShadow
  5602  1E72                     l7815:
  5603                           
  5604                           ;main.c: 1433:             if(!musikRun)
  5605  1E72  0020               	movlb	0	; select bank0
  5606  1E73  083A               	movf	_musikRun,w
  5607  1E74  1D03               	btfss	3,2
  5608  1E75  2E77               	goto	u6691
  5609  1E76  2E78               	goto	u6690
  5610  1E77                     u6691:
  5611  1E77  2E7B               	goto	l1364
  5612  1E78                     u6690:
  5613  1E78                     l7817:
  5614                           
  5615                           ;main.c: 1434:                 despShadow();
  5616  1E78  3193  23A0  319D   	fcall	_despShadow
  5617  1E7B                     l1364:
  5618                           
  5619                           ;main.c: 1435:             musik();
  5620  1E7B  3184  24D4  319D   	fcall	_musik
  5621  1E7E                     l7819:
  5622                           
  5623                           ;main.c: 1438:     if(sendOrder)
  5624  1E7E  0021               	movlb	1	; select bank1
  5625  1E7F  0854               	movf	_sendOrder^(0+128),w
  5626  1E80  1903               	btfsc	3,2
  5627  1E81  2E83               	goto	u6701
  5628  1E82  2E84               	goto	u6700
  5629  1E83                     u6701:
  5630  1E83  2E87               	goto	l1366
  5631  1E84                     u6700:
  5632  1E84                     l7821:
  5633                           
  5634                           ;main.c: 1439:         sendOrderXs();
  5635  1E84  31A1  216E  319D   	fcall	_sendOrderXs
  5636  1E87                     l1366:
  5637  1E87  0008               	return
  5638  1E88                     __end_of_secuences:
  5639                           
  5640                           	psect	text2
  5641  216E                     __ptext2:	
  5642 ;; *************** function _sendOrderXs *****************
  5643 ;; Defined at:
  5644 ;;		line 499 in file "main.c"
  5645 ;; Parameters:    Size  Location     Type
  5646 ;;		None
  5647 ;; Auto vars:     Size  Location     Type
  5648 ;;		None
  5649 ;; Return value:  Size  Location     Type
  5650 ;;                  1    wreg      void 
  5651 ;; Registers used:
  5652 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5653 ;; Tracked objects:
  5654 ;;		On entry : 0/0
  5655 ;;		On exit  : 0/0
  5656 ;;		Unchanged: 0/0
  5657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5662 ;;Total ram usage:        0 bytes
  5663 ;; Hardware stack levels used: 1
  5664 ;; Hardware stack levels required when called: 14
  5665 ;; This function calls:
  5666 ;;		_merger
  5667 ;;		_sendOrderDot
  5668 ;; This function is called by:
  5669 ;;		_secuences
  5670 ;; This function uses a non-reentrant model
  5671 ;;
  5672                           
  5673                           
  5674                           ;psect for function _sendOrderXs
  5675  216E                     _sendOrderXs:
  5676  216E                     l7767:	
  5677                           ;incstack = 0
  5678                           ; Regs used in _sendOrderXs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5679                           
  5680                           
  5681                           ;main.c: 500:     merger();
  5682  216E  3180  20EA  31A1   	fcall	_merger
  5683  2171                     l7769:
  5684                           
  5685                           ;main.c: 501:     sendOrderDot();
  5686  2171  318C  245C  31A1   	fcall	_sendOrderDot
  5687  2174                     l7771:
  5688                           
  5689                           ;main.c: 502:     sendOrder = 0;
  5690  2174  0021               	movlb	1	; select bank1
  5691  2175  01D4               	clrf	_sendOrder^(0+128)
  5692  2176                     l943:
  5693  2176  0008               	return
  5694  2177                     __end_of_sendOrderXs:
  5695                           
  5696                           	psect	text3
  5697  0C5C                     __ptext3:	
  5698 ;; *************** function _sendOrderDot *****************
  5699 ;; Defined at:
  5700 ;;		line 526 in file "main.c"
  5701 ;; Parameters:    Size  Location     Type
  5702 ;;		None
  5703 ;; Auto vars:     Size  Location     Type
  5704 ;;  i               2   17[BANK0 ] short 
  5705 ;; Return value:  Size  Location     Type
  5706 ;;                  1    wreg      void 
  5707 ;; Registers used:
  5708 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5709 ;; Tracked objects:
  5710 ;;		On entry : 0/0
  5711 ;;		On exit  : 0/0
  5712 ;;		Unchanged: 0/0
  5713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5715 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5716 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5717 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5718 ;;Total ram usage:       10 bytes
  5719 ;; Hardware stack levels used: 1
  5720 ;; Hardware stack levels required when called: 13
  5721 ;; This function calls:
  5722 ;;		_dotStart
  5723 ;;		_sendDotStar
  5724 ;; This function is called by:
  5725 ;;		_sendOrderXs
  5726 ;; This function uses a non-reentrant model
  5727 ;;
  5728                           
  5729                           
  5730                           ;psect for function _sendOrderDot
  5731  0C5C                     _sendOrderDot:
  5732  0C5C                     l5637:	
  5733                           ;incstack = 0
  5734                           ; Regs used in _sendOrderDot: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5735                           
  5736  0C5C                     l5639:
  5737                           
  5738                           ;main.c: 528:     dotStart(i);
  5739  0C5C  3000               	movlw	0
  5740  0C5D  31A2  22EC  318C   	fcall	_dotStart
  5741  0C60                     l5641:
  5742                           
  5743                           ;main.c: 529:     for(i = 0; i < dotCant1; i++) {
  5744  0C60  0020               	movlb	0	; select bank0
  5745  0C61  01DE               	clrf	sendOrderDot@i
  5746  0C62  01DF               	clrf	sendOrderDot@i+1
  5747  0C63  2E21               	goto	l5685
  5748  0C64                     l5643:
  5749                           
  5750                           ;main.c: 530:         if(dotColor1[i] == 1)
  5751  0C64  30F1               	movlw	241
  5752  0C65  00D6               	movwf	??_sendOrderDot
  5753  0C66  3026               	movlw	38
  5754  0C67  00D7               	movwf	??_sendOrderDot+1
  5755  0C68  085E               	movf	sendOrderDot@i,w
  5756  0C69  0756               	addwf	??_sendOrderDot,w
  5757  0C6A  0086               	movwf	6
  5758  0C6B  085F               	movf	sendOrderDot@i+1,w
  5759  0C6C  3D57               	addwfc	??_sendOrderDot+1,w
  5760  0C6D  0087               	movwf	7
  5761  0C6E  0301               	decf	1,w
  5762  0C6F  1D03               	btfss	3,2
  5763  0C70  2C72               	goto	u3631
  5764  0C71  2C73               	goto	u3630
  5765  0C72                     u3631:
  5766  0C72  2C84               	goto	l5647
  5767  0C73                     u3630:
  5768  0C73                     l5645:
  5769                           
  5770                           ;main.c: 531:             sendDotStar(dotValue1[i],0,0);
  5771  0C73  01D2               	clrf	sendDotStar@g
  5772  0C74  01D3               	clrf	sendDotStar@b
  5773  0C75  309B               	movlw	155
  5774  0C76  00D6               	movwf	??_sendOrderDot
  5775  0C77  3027               	movlw	39
  5776  0C78  00D7               	movwf	??_sendOrderDot+1
  5777  0C79  085E               	movf	sendOrderDot@i,w
  5778  0C7A  0756               	addwf	??_sendOrderDot,w
  5779  0C7B  0086               	movwf	6
  5780  0C7C  085F               	movf	sendOrderDot@i+1,w
  5781  0C7D  3D57               	addwfc	??_sendOrderDot+1,w
  5782  0C7E  0087               	movwf	7
  5783  0C7F  0801               	movf	1,w
  5784  0C80  31A5  2522  318C   	fcall	_sendDotStar
  5785  0C83  2E1C               	goto	l5683
  5786  0C84                     l5647:
  5787  0C84  30F1               	movlw	241
  5788  0C85  00D6               	movwf	??_sendOrderDot
  5789  0C86  3026               	movlw	38
  5790  0C87  00D7               	movwf	??_sendOrderDot+1
  5791  0C88  085E               	movf	sendOrderDot@i,w
  5792  0C89  0756               	addwf	??_sendOrderDot,w
  5793  0C8A  0086               	movwf	6
  5794  0C8B  085F               	movf	sendOrderDot@i+1,w
  5795  0C8C  3D57               	addwfc	??_sendOrderDot+1,w
  5796  0C8D  0087               	movwf	7
  5797  0C8E  0801               	movf	1,w
  5798  0C8F  1D03               	btfss	3,2
  5799  0C90  2C92               	goto	u3641
  5800  0C91  2C93               	goto	u3640
  5801  0C92                     u3641:
  5802  0C92  2CA7               	goto	l5651
  5803  0C93                     u3640:
  5804  0C93                     l5649:
  5805                           
  5806                           ;main.c: 533:             sendDotStar(0,dotValue1[i],0);
  5807  0C93  309B               	movlw	155
  5808  0C94  00D6               	movwf	??_sendOrderDot
  5809  0C95  3027               	movlw	39
  5810  0C96  00D7               	movwf	??_sendOrderDot+1
  5811  0C97  085E               	movf	sendOrderDot@i,w
  5812  0C98  0756               	addwf	??_sendOrderDot,w
  5813  0C99  0086               	movwf	6
  5814  0C9A  085F               	movf	sendOrderDot@i+1,w
  5815  0C9B  3D57               	addwfc	??_sendOrderDot+1,w
  5816  0C9C  0087               	movwf	7
  5817  0C9D  0801               	movf	1,w
  5818  0C9E  00D8               	movwf	??_sendOrderDot+2
  5819  0C9F  0858               	movf	??_sendOrderDot+2,w
  5820  0CA0  00D2               	movwf	sendDotStar@g
  5821  0CA1  01D3               	clrf	sendDotStar@b
  5822  0CA2  3000               	movlw	0
  5823  0CA3  31A5  2522  318C   	fcall	_sendDotStar
  5824  0CA6  2E1C               	goto	l5683
  5825  0CA7                     l5651:
  5826  0CA7  30F1               	movlw	241
  5827  0CA8  00D6               	movwf	??_sendOrderDot
  5828  0CA9  3026               	movlw	38
  5829  0CAA  00D7               	movwf	??_sendOrderDot+1
  5830  0CAB  085E               	movf	sendOrderDot@i,w
  5831  0CAC  0756               	addwf	??_sendOrderDot,w
  5832  0CAD  0086               	movwf	6
  5833  0CAE  085F               	movf	sendOrderDot@i+1,w
  5834  0CAF  3D57               	addwfc	??_sendOrderDot+1,w
  5835  0CB0  0087               	movwf	7
  5836  0CB1  3002               	movlw	2
  5837  0CB2  0601               	xorwf	1,w
  5838  0CB3  1D03               	btfss	3,2
  5839  0CB4  2CB6               	goto	u3651
  5840  0CB5  2CB7               	goto	u3650
  5841  0CB6                     u3651:
  5842  0CB6  2CCB               	goto	l5655
  5843  0CB7                     u3650:
  5844  0CB7                     l5653:
  5845                           
  5846                           ;main.c: 535:             sendDotStar(0,0,dotValue1[i]);
  5847  0CB7  01D2               	clrf	sendDotStar@g
  5848  0CB8  309B               	movlw	155
  5849  0CB9  00D6               	movwf	??_sendOrderDot
  5850  0CBA  3027               	movlw	39
  5851  0CBB  00D7               	movwf	??_sendOrderDot+1
  5852  0CBC  085E               	movf	sendOrderDot@i,w
  5853  0CBD  0756               	addwf	??_sendOrderDot,w
  5854  0CBE  0086               	movwf	6
  5855  0CBF  085F               	movf	sendOrderDot@i+1,w
  5856  0CC0  3D57               	addwfc	??_sendOrderDot+1,w
  5857  0CC1  0087               	movwf	7
  5858  0CC2  0801               	movf	1,w
  5859  0CC3  00D8               	movwf	??_sendOrderDot+2
  5860  0CC4  0858               	movf	??_sendOrderDot+2,w
  5861  0CC5  00D3               	movwf	sendDotStar@b
  5862  0CC6  3000               	movlw	0
  5863  0CC7  31A5  2522  318C   	fcall	_sendDotStar
  5864  0CCA  2E1C               	goto	l5683
  5865  0CCB                     l5655:
  5866  0CCB  30F1               	movlw	241
  5867  0CCC  00D6               	movwf	??_sendOrderDot
  5868  0CCD  3026               	movlw	38
  5869  0CCE  00D7               	movwf	??_sendOrderDot+1
  5870  0CCF  085E               	movf	sendOrderDot@i,w
  5871  0CD0  0756               	addwf	??_sendOrderDot,w
  5872  0CD1  0086               	movwf	6
  5873  0CD2  085F               	movf	sendOrderDot@i+1,w
  5874  0CD3  3D57               	addwfc	??_sendOrderDot+1,w
  5875  0CD4  0087               	movwf	7
  5876  0CD5  3003               	movlw	3
  5877  0CD6  0601               	xorwf	1,w
  5878  0CD7  1D03               	btfss	3,2
  5879  0CD8  2CDA               	goto	u3661
  5880  0CD9  2CDB               	goto	u3660
  5881  0CDA                     u3661:
  5882  0CDA  2CF9               	goto	l5659
  5883  0CDB                     u3660:
  5884  0CDB                     l5657:
  5885                           
  5886                           ;main.c: 537:             sendDotStar(dotValue1[i],dotValue1[i],0);
  5887  0CDB  309B               	movlw	155
  5888  0CDC  00D6               	movwf	??_sendOrderDot
  5889  0CDD  3027               	movlw	39
  5890  0CDE  00D7               	movwf	??_sendOrderDot+1
  5891  0CDF  085E               	movf	sendOrderDot@i,w
  5892  0CE0  0756               	addwf	??_sendOrderDot,w
  5893  0CE1  0086               	movwf	6
  5894  0CE2  085F               	movf	sendOrderDot@i+1,w
  5895  0CE3  3D57               	addwfc	??_sendOrderDot+1,w
  5896  0CE4  0087               	movwf	7
  5897  0CE5  0801               	movf	1,w
  5898  0CE6  00D8               	movwf	??_sendOrderDot+2
  5899  0CE7  0858               	movf	??_sendOrderDot+2,w
  5900  0CE8  00D2               	movwf	sendDotStar@g
  5901  0CE9  01D3               	clrf	sendDotStar@b
  5902  0CEA  309B               	movlw	155
  5903  0CEB  00D9               	movwf	??_sendOrderDot+3
  5904  0CEC  3027               	movlw	39
  5905  0CED  00DA               	movwf	??_sendOrderDot+4
  5906  0CEE  085E               	movf	sendOrderDot@i,w
  5907  0CEF  0759               	addwf	??_sendOrderDot+3,w
  5908  0CF0  0086               	movwf	6
  5909  0CF1  085F               	movf	sendOrderDot@i+1,w
  5910  0CF2  3D5A               	addwfc	??_sendOrderDot+4,w
  5911  0CF3  0087               	movwf	7
  5912  0CF4  0801               	movf	1,w
  5913  0CF5  31A5  2522  318C   	fcall	_sendDotStar
  5914  0CF8  2E1C               	goto	l5683
  5915  0CF9                     l5659:
  5916  0CF9  30F1               	movlw	241
  5917  0CFA  00D6               	movwf	??_sendOrderDot
  5918  0CFB  3026               	movlw	38
  5919  0CFC  00D7               	movwf	??_sendOrderDot+1
  5920  0CFD  085E               	movf	sendOrderDot@i,w
  5921  0CFE  0756               	addwf	??_sendOrderDot,w
  5922  0CFF  0086               	movwf	6
  5923  0D00  085F               	movf	sendOrderDot@i+1,w
  5924  0D01  3D57               	addwfc	??_sendOrderDot+1,w
  5925  0D02  0087               	movwf	7
  5926  0D03  3004               	movlw	4
  5927  0D04  0601               	xorwf	1,w
  5928  0D05  1D03               	btfss	3,2
  5929  0D06  2D08               	goto	u3671
  5930  0D07  2D09               	goto	u3670
  5931  0D08                     u3671:
  5932  0D08  2D27               	goto	l5663
  5933  0D09                     u3670:
  5934  0D09                     l5661:
  5935                           
  5936                           ;main.c: 539:             sendDotStar(dotValue1[i],0,dotValue1[i]);
  5937  0D09  01D2               	clrf	sendDotStar@g
  5938  0D0A  309B               	movlw	155
  5939  0D0B  00D6               	movwf	??_sendOrderDot
  5940  0D0C  3027               	movlw	39
  5941  0D0D  00D7               	movwf	??_sendOrderDot+1
  5942  0D0E  085E               	movf	sendOrderDot@i,w
  5943  0D0F  0756               	addwf	??_sendOrderDot,w
  5944  0D10  0086               	movwf	6
  5945  0D11  085F               	movf	sendOrderDot@i+1,w
  5946  0D12  3D57               	addwfc	??_sendOrderDot+1,w
  5947  0D13  0087               	movwf	7
  5948  0D14  0801               	movf	1,w
  5949  0D15  00D8               	movwf	??_sendOrderDot+2
  5950  0D16  0858               	movf	??_sendOrderDot+2,w
  5951  0D17  00D3               	movwf	sendDotStar@b
  5952  0D18  309B               	movlw	155
  5953  0D19  00D9               	movwf	??_sendOrderDot+3
  5954  0D1A  3027               	movlw	39
  5955  0D1B  00DA               	movwf	??_sendOrderDot+4
  5956  0D1C  085E               	movf	sendOrderDot@i,w
  5957  0D1D  0759               	addwf	??_sendOrderDot+3,w
  5958  0D1E  0086               	movwf	6
  5959  0D1F  085F               	movf	sendOrderDot@i+1,w
  5960  0D20  3D5A               	addwfc	??_sendOrderDot+4,w
  5961  0D21  0087               	movwf	7
  5962  0D22  0801               	movf	1,w
  5963  0D23  31A5  2522  318C   	fcall	_sendDotStar
  5964  0D26  2E1C               	goto	l5683
  5965  0D27                     l5663:
  5966  0D27  30F1               	movlw	241
  5967  0D28  00D6               	movwf	??_sendOrderDot
  5968  0D29  3026               	movlw	38
  5969  0D2A  00D7               	movwf	??_sendOrderDot+1
  5970  0D2B  085E               	movf	sendOrderDot@i,w
  5971  0D2C  0756               	addwf	??_sendOrderDot,w
  5972  0D2D  0086               	movwf	6
  5973  0D2E  085F               	movf	sendOrderDot@i+1,w
  5974  0D2F  3D57               	addwfc	??_sendOrderDot+1,w
  5975  0D30  0087               	movwf	7
  5976  0D31  3008               	movlw	8
  5977  0D32  0601               	xorwf	1,w
  5978  0D33  1D03               	btfss	3,2
  5979  0D34  2D36               	goto	u3681
  5980  0D35  2D37               	goto	u3680
  5981  0D36                     u3681:
  5982  0D36  2D58               	goto	l5667
  5983  0D37                     u3680:
  5984  0D37                     l5665:
  5985                           
  5986                           ;main.c: 541:             sendDotStar(0,dotValue1[i],dotValue1[i]);
  5987  0D37  309B               	movlw	155
  5988  0D38  00D6               	movwf	??_sendOrderDot
  5989  0D39  3027               	movlw	39
  5990  0D3A  00D7               	movwf	??_sendOrderDot+1
  5991  0D3B  085E               	movf	sendOrderDot@i,w
  5992  0D3C  0756               	addwf	??_sendOrderDot,w
  5993  0D3D  0086               	movwf	6
  5994  0D3E  085F               	movf	sendOrderDot@i+1,w
  5995  0D3F  3D57               	addwfc	??_sendOrderDot+1,w
  5996  0D40  0087               	movwf	7
  5997  0D41  0801               	movf	1,w
  5998  0D42  00D8               	movwf	??_sendOrderDot+2
  5999  0D43  0858               	movf	??_sendOrderDot+2,w
  6000  0D44  00D2               	movwf	sendDotStar@g
  6001  0D45  309B               	movlw	155
  6002  0D46  00D9               	movwf	??_sendOrderDot+3
  6003  0D47  3027               	movlw	39
  6004  0D48  00DA               	movwf	??_sendOrderDot+4
  6005  0D49  085E               	movf	sendOrderDot@i,w
  6006  0D4A  0759               	addwf	??_sendOrderDot+3,w
  6007  0D4B  0086               	movwf	6
  6008  0D4C  085F               	movf	sendOrderDot@i+1,w
  6009  0D4D  3D5A               	addwfc	??_sendOrderDot+4,w
  6010  0D4E  0087               	movwf	7
  6011  0D4F  0801               	movf	1,w
  6012  0D50  00DB               	movwf	??_sendOrderDot+5
  6013  0D51  085B               	movf	??_sendOrderDot+5,w
  6014  0D52  00D3               	movwf	sendDotStar@b
  6015  0D53  3000               	movlw	0
  6016  0D54  31A5  2522  318C   	fcall	_sendDotStar
  6017  0D57  2E1C               	goto	l5683
  6018  0D58                     l5667:
  6019  0D58  30F1               	movlw	241
  6020  0D59  00D6               	movwf	??_sendOrderDot
  6021  0D5A  3026               	movlw	38
  6022  0D5B  00D7               	movwf	??_sendOrderDot+1
  6023  0D5C  085E               	movf	sendOrderDot@i,w
  6024  0D5D  0756               	addwf	??_sendOrderDot,w
  6025  0D5E  0086               	movwf	6
  6026  0D5F  085F               	movf	sendOrderDot@i+1,w
  6027  0D60  3D57               	addwfc	??_sendOrderDot+1,w
  6028  0D61  0087               	movwf	7
  6029  0D62  300A               	movlw	10
  6030  0D63  0601               	xorwf	1,w
  6031  0D64  1D03               	btfss	3,2
  6032  0D65  2D67               	goto	u3691
  6033  0D66  2D68               	goto	u3690
  6034  0D67                     u3691:
  6035  0D67  2D93               	goto	l5671
  6036  0D68                     u3690:
  6037  0D68                     l5669:
  6038                           
  6039                           ;main.c: 543:             sendDotStar(dotValue1[i],dotValue1[i],dotValue1[i]);
  6040  0D68  309B               	movlw	155
  6041  0D69  00D6               	movwf	??_sendOrderDot
  6042  0D6A  3027               	movlw	39
  6043  0D6B  00D7               	movwf	??_sendOrderDot+1
  6044  0D6C  085E               	movf	sendOrderDot@i,w
  6045  0D6D  0756               	addwf	??_sendOrderDot,w
  6046  0D6E  0086               	movwf	6
  6047  0D6F  085F               	movf	sendOrderDot@i+1,w
  6048  0D70  3D57               	addwfc	??_sendOrderDot+1,w
  6049  0D71  0087               	movwf	7
  6050  0D72  0801               	movf	1,w
  6051  0D73  00D8               	movwf	??_sendOrderDot+2
  6052  0D74  0858               	movf	??_sendOrderDot+2,w
  6053  0D75  00D2               	movwf	sendDotStar@g
  6054  0D76  309B               	movlw	155
  6055  0D77  00D9               	movwf	??_sendOrderDot+3
  6056  0D78  3027               	movlw	39
  6057  0D79  00DA               	movwf	??_sendOrderDot+4
  6058  0D7A  085E               	movf	sendOrderDot@i,w
  6059  0D7B  0759               	addwf	??_sendOrderDot+3,w
  6060  0D7C  0086               	movwf	6
  6061  0D7D  085F               	movf	sendOrderDot@i+1,w
  6062  0D7E  3D5A               	addwfc	??_sendOrderDot+4,w
  6063  0D7F  0087               	movwf	7
  6064  0D80  0801               	movf	1,w
  6065  0D81  00DB               	movwf	??_sendOrderDot+5
  6066  0D82  085B               	movf	??_sendOrderDot+5,w
  6067  0D83  00D3               	movwf	sendDotStar@b
  6068  0D84  309B               	movlw	155
  6069  0D85  00DC               	movwf	??_sendOrderDot+6
  6070  0D86  3027               	movlw	39
  6071  0D87  00DD               	movwf	??_sendOrderDot+7
  6072  0D88  085E               	movf	sendOrderDot@i,w
  6073  0D89  075C               	addwf	??_sendOrderDot+6,w
  6074  0D8A  0086               	movwf	6
  6075  0D8B  085F               	movf	sendOrderDot@i+1,w
  6076  0D8C  3D5D               	addwfc	??_sendOrderDot+7,w
  6077  0D8D  0087               	movwf	7
  6078  0D8E  0801               	movf	1,w
  6079  0D8F  31A5  2522  318C   	fcall	_sendDotStar
  6080  0D92  2E1C               	goto	l5683
  6081  0D93                     l5671:
  6082  0D93  30F1               	movlw	241
  6083  0D94  00D6               	movwf	??_sendOrderDot
  6084  0D95  3026               	movlw	38
  6085  0D96  00D7               	movwf	??_sendOrderDot+1
  6086  0D97  085E               	movf	sendOrderDot@i,w
  6087  0D98  0756               	addwf	??_sendOrderDot,w
  6088  0D99  0086               	movwf	6
  6089  0D9A  085F               	movf	sendOrderDot@i+1,w
  6090  0D9B  3D57               	addwfc	??_sendOrderDot+1,w
  6091  0D9C  0087               	movwf	7
  6092  0D9D  3014               	movlw	20
  6093  0D9E  0601               	xorwf	1,w
  6094  0D9F  1D03               	btfss	3,2
  6095  0DA0  2DA2               	goto	u3701
  6096  0DA1  2DA3               	goto	u3700
  6097  0DA2                     u3701:
  6098  0DA2  2DC4               	goto	l5675
  6099  0DA3                     u3700:
  6100  0DA3                     l5673:
  6101                           
  6102                           ;main.c: 545:             sendDotStar(0, dotValue1[i], 255-dotValue1[i]);
  6103  0DA3  309B               	movlw	155
  6104  0DA4  00D6               	movwf	??_sendOrderDot
  6105  0DA5  3027               	movlw	39
  6106  0DA6  00D7               	movwf	??_sendOrderDot+1
  6107  0DA7  085E               	movf	sendOrderDot@i,w
  6108  0DA8  0756               	addwf	??_sendOrderDot,w
  6109  0DA9  0086               	movwf	6
  6110  0DAA  085F               	movf	sendOrderDot@i+1,w
  6111  0DAB  3D57               	addwfc	??_sendOrderDot+1,w
  6112  0DAC  0087               	movwf	7
  6113  0DAD  0801               	movf	1,w
  6114  0DAE  00D8               	movwf	??_sendOrderDot+2
  6115  0DAF  0858               	movf	??_sendOrderDot+2,w
  6116  0DB0  00D2               	movwf	sendDotStar@g
  6117  0DB1  309B               	movlw	155
  6118  0DB2  00D9               	movwf	??_sendOrderDot+3
  6119  0DB3  3027               	movlw	39
  6120  0DB4  00DA               	movwf	??_sendOrderDot+4
  6121  0DB5  085E               	movf	sendOrderDot@i,w
  6122  0DB6  0759               	addwf	??_sendOrderDot+3,w
  6123  0DB7  0086               	movwf	6
  6124  0DB8  085F               	movf	sendOrderDot@i+1,w
  6125  0DB9  3D5A               	addwfc	??_sendOrderDot+4,w
  6126  0DBA  0087               	movwf	7
  6127  0DBB  0901               	comf	1,w
  6128  0DBC  00DB               	movwf	??_sendOrderDot+5
  6129  0DBD  085B               	movf	??_sendOrderDot+5,w
  6130  0DBE  00D3               	movwf	sendDotStar@b
  6131  0DBF  3000               	movlw	0
  6132  0DC0  31A5  2522  318C   	fcall	_sendDotStar
  6133  0DC3  2E1C               	goto	l5683
  6134  0DC4                     l5675:
  6135  0DC4  30F1               	movlw	241
  6136  0DC5  00D6               	movwf	??_sendOrderDot
  6137  0DC6  3026               	movlw	38
  6138  0DC7  00D7               	movwf	??_sendOrderDot+1
  6139  0DC8  085E               	movf	sendOrderDot@i,w
  6140  0DC9  0756               	addwf	??_sendOrderDot,w
  6141  0DCA  0086               	movwf	6
  6142  0DCB  085F               	movf	sendOrderDot@i+1,w
  6143  0DCC  3D57               	addwfc	??_sendOrderDot+1,w
  6144  0DCD  0087               	movwf	7
  6145  0DCE  3015               	movlw	21
  6146  0DCF  0601               	xorwf	1,w
  6147  0DD0  1D03               	btfss	3,2
  6148  0DD1  2DD3               	goto	u3711
  6149  0DD2  2DD4               	goto	u3710
  6150  0DD3                     u3711:
  6151  0DD3  2DF5               	goto	l5679
  6152  0DD4                     u3710:
  6153  0DD4                     l5677:
  6154                           
  6155                           ;main.c: 547:             sendDotStar(0, 255-dotValue1[i], dotValue1[i]);
  6156  0DD4  309B               	movlw	155
  6157  0DD5  00D6               	movwf	??_sendOrderDot
  6158  0DD6  3027               	movlw	39
  6159  0DD7  00D7               	movwf	??_sendOrderDot+1
  6160  0DD8  085E               	movf	sendOrderDot@i,w
  6161  0DD9  0756               	addwf	??_sendOrderDot,w
  6162  0DDA  0086               	movwf	6
  6163  0DDB  085F               	movf	sendOrderDot@i+1,w
  6164  0DDC  3D57               	addwfc	??_sendOrderDot+1,w
  6165  0DDD  0087               	movwf	7
  6166  0DDE  0901               	comf	1,w
  6167  0DDF  00D8               	movwf	??_sendOrderDot+2
  6168  0DE0  0858               	movf	??_sendOrderDot+2,w
  6169  0DE1  00D2               	movwf	sendDotStar@g
  6170  0DE2  309B               	movlw	155
  6171  0DE3  00D9               	movwf	??_sendOrderDot+3
  6172  0DE4  3027               	movlw	39
  6173  0DE5  00DA               	movwf	??_sendOrderDot+4
  6174  0DE6  085E               	movf	sendOrderDot@i,w
  6175  0DE7  0759               	addwf	??_sendOrderDot+3,w
  6176  0DE8  0086               	movwf	6
  6177  0DE9  085F               	movf	sendOrderDot@i+1,w
  6178  0DEA  3D5A               	addwfc	??_sendOrderDot+4,w
  6179  0DEB  0087               	movwf	7
  6180  0DEC  0801               	movf	1,w
  6181  0DED  00DB               	movwf	??_sendOrderDot+5
  6182  0DEE  085B               	movf	??_sendOrderDot+5,w
  6183  0DEF  00D3               	movwf	sendDotStar@b
  6184  0DF0  3000               	movlw	0
  6185  0DF1  31A5  2522  318C   	fcall	_sendDotStar
  6186  0DF4  2E1C               	goto	l5683
  6187  0DF5                     l5679:
  6188  0DF5  30F1               	movlw	241
  6189  0DF6  00D6               	movwf	??_sendOrderDot
  6190  0DF7  3026               	movlw	38
  6191  0DF8  00D7               	movwf	??_sendOrderDot+1
  6192  0DF9  085E               	movf	sendOrderDot@i,w
  6193  0DFA  0756               	addwf	??_sendOrderDot,w
  6194  0DFB  0086               	movwf	6
  6195  0DFC  085F               	movf	sendOrderDot@i+1,w
  6196  0DFD  3D57               	addwfc	??_sendOrderDot+1,w
  6197  0DFE  0087               	movwf	7
  6198  0DFF  3016               	movlw	22
  6199  0E00  0601               	xorwf	1,w
  6200  0E01  1D03               	btfss	3,2
  6201  0E02  2E04               	goto	u3721
  6202  0E03  2E05               	goto	u3720
  6203  0E04                     u3721:
  6204  0E04  2E1C               	goto	l973
  6205  0E05                     u3720:
  6206  0E05                     l5681:
  6207                           
  6208                           ;main.c: 549:             sendDotStar(0, dotValue1[i], intensityRefri);
  6209  0E05  309B               	movlw	155
  6210  0E06  00D6               	movwf	??_sendOrderDot
  6211  0E07  3027               	movlw	39
  6212  0E08  00D7               	movwf	??_sendOrderDot+1
  6213  0E09  085E               	movf	sendOrderDot@i,w
  6214  0E0A  0756               	addwf	??_sendOrderDot,w
  6215  0E0B  0086               	movwf	6
  6216  0E0C  085F               	movf	sendOrderDot@i+1,w
  6217  0E0D  3D57               	addwfc	??_sendOrderDot+1,w
  6218  0E0E  0087               	movwf	7
  6219  0E0F  0801               	movf	1,w
  6220  0E10  00D8               	movwf	??_sendOrderDot+2
  6221  0E11  0858               	movf	??_sendOrderDot+2,w
  6222  0E12  00D2               	movwf	sendDotStar@g
  6223  0E13  083B               	movf	_intensityRefri,w
  6224  0E14  00D9               	movwf	??_sendOrderDot+3
  6225  0E15  0859               	movf	??_sendOrderDot+3,w
  6226  0E16  00D3               	movwf	sendDotStar@b
  6227  0E17  3000               	movlw	0
  6228  0E18  31A5  2522  318C   	fcall	_sendDotStar
  6229  0E1B  2E1C               	goto	l5683
  6230  0E1C                     l973:
  6231  0E1C                     l5683:
  6232                           
  6233                           ;main.c: 550:     }
  6234  0E1C  3001               	movlw	1
  6235  0E1D  0020               	movlb	0	; select bank0
  6236  0E1E  07DE               	addwf	sendOrderDot@i,f
  6237  0E1F  3000               	movlw	0
  6238  0E20  3DDF               	addwfc	sendOrderDot@i+1,f
  6239  0E21                     l5685:
  6240  0E21  3000               	movlw	0
  6241  0E22  025F               	subwf	sendOrderDot@i+1,w
  6242  0E23  3055               	movlw	85
  6243  0E24  1903               	skipnz
  6244  0E25  025E               	subwf	sendOrderDot@i,w
  6245  0E26  1C03               	skipc
  6246  0E27  2E29               	goto	u3731
  6247  0E28  2E2A               	goto	u3730
  6248  0E29                     u3731:
  6249  0E29  2C64               	goto	l5643
  6250  0E2A                     u3730:
  6251  0E2A                     l5687:
  6252                           
  6253                           ;main.c: 551:     for(i = 0; i < dotCant2; i++) {
  6254  0E2A  01DE               	clrf	sendOrderDot@i
  6255  0E2B  01DF               	clrf	sendOrderDot@i+1
  6256  0E2C  2FEA               	goto	l5731
  6257  0E2D                     l5689:
  6258                           
  6259                           ;main.c: 552:         if(dotColor2[i] == 1)
  6260  0E2D  309C               	movlw	156
  6261  0E2E  00D6               	movwf	??_sendOrderDot
  6262  0E2F  3026               	movlw	38
  6263  0E30  00D7               	movwf	??_sendOrderDot+1
  6264  0E31  085E               	movf	sendOrderDot@i,w
  6265  0E32  0756               	addwf	??_sendOrderDot,w
  6266  0E33  0086               	movwf	6
  6267  0E34  085F               	movf	sendOrderDot@i+1,w
  6268  0E35  3D57               	addwfc	??_sendOrderDot+1,w
  6269  0E36  0087               	movwf	7
  6270  0E37  0301               	decf	1,w
  6271  0E38  1D03               	btfss	3,2
  6272  0E39  2E3B               	goto	u3741
  6273  0E3A  2E3C               	goto	u3740
  6274  0E3B                     u3741:
  6275  0E3B  2E4D               	goto	l5693
  6276  0E3C                     u3740:
  6277  0E3C                     l5691:
  6278                           
  6279                           ;main.c: 553:             sendDotStar(dotValue2[i],0,0);
  6280  0E3C  01D2               	clrf	sendDotStar@g
  6281  0E3D  01D3               	clrf	sendDotStar@b
  6282  0E3E  3046               	movlw	70
  6283  0E3F  00D6               	movwf	??_sendOrderDot
  6284  0E40  3027               	movlw	39
  6285  0E41  00D7               	movwf	??_sendOrderDot+1
  6286  0E42  085E               	movf	sendOrderDot@i,w
  6287  0E43  0756               	addwf	??_sendOrderDot,w
  6288  0E44  0086               	movwf	6
  6289  0E45  085F               	movf	sendOrderDot@i+1,w
  6290  0E46  3D57               	addwfc	??_sendOrderDot+1,w
  6291  0E47  0087               	movwf	7
  6292  0E48  0801               	movf	1,w
  6293  0E49  31A5  2522  318C   	fcall	_sendDotStar
  6294  0E4C  2FE5               	goto	l5729
  6295  0E4D                     l5693:
  6296  0E4D  309C               	movlw	156
  6297  0E4E  00D6               	movwf	??_sendOrderDot
  6298  0E4F  3026               	movlw	38
  6299  0E50  00D7               	movwf	??_sendOrderDot+1
  6300  0E51  085E               	movf	sendOrderDot@i,w
  6301  0E52  0756               	addwf	??_sendOrderDot,w
  6302  0E53  0086               	movwf	6
  6303  0E54  085F               	movf	sendOrderDot@i+1,w
  6304  0E55  3D57               	addwfc	??_sendOrderDot+1,w
  6305  0E56  0087               	movwf	7
  6306  0E57  0801               	movf	1,w
  6307  0E58  1D03               	btfss	3,2
  6308  0E59  2E5B               	goto	u3751
  6309  0E5A  2E5C               	goto	u3750
  6310  0E5B                     u3751:
  6311  0E5B  2E70               	goto	l5697
  6312  0E5C                     u3750:
  6313  0E5C                     l5695:
  6314                           
  6315                           ;main.c: 555:             sendDotStar(0,dotValue2[i],0);
  6316  0E5C  3046               	movlw	70
  6317  0E5D  00D6               	movwf	??_sendOrderDot
  6318  0E5E  3027               	movlw	39
  6319  0E5F  00D7               	movwf	??_sendOrderDot+1
  6320  0E60  085E               	movf	sendOrderDot@i,w
  6321  0E61  0756               	addwf	??_sendOrderDot,w
  6322  0E62  0086               	movwf	6
  6323  0E63  085F               	movf	sendOrderDot@i+1,w
  6324  0E64  3D57               	addwfc	??_sendOrderDot+1,w
  6325  0E65  0087               	movwf	7
  6326  0E66  0801               	movf	1,w
  6327  0E67  00D8               	movwf	??_sendOrderDot+2
  6328  0E68  0858               	movf	??_sendOrderDot+2,w
  6329  0E69  00D2               	movwf	sendDotStar@g
  6330  0E6A  01D3               	clrf	sendDotStar@b
  6331  0E6B  3000               	movlw	0
  6332  0E6C  31A5  2522  318C   	fcall	_sendDotStar
  6333  0E6F  2FE5               	goto	l5729
  6334  0E70                     l5697:
  6335  0E70  309C               	movlw	156
  6336  0E71  00D6               	movwf	??_sendOrderDot
  6337  0E72  3026               	movlw	38
  6338  0E73  00D7               	movwf	??_sendOrderDot+1
  6339  0E74  085E               	movf	sendOrderDot@i,w
  6340  0E75  0756               	addwf	??_sendOrderDot,w
  6341  0E76  0086               	movwf	6
  6342  0E77  085F               	movf	sendOrderDot@i+1,w
  6343  0E78  3D57               	addwfc	??_sendOrderDot+1,w
  6344  0E79  0087               	movwf	7
  6345  0E7A  3002               	movlw	2
  6346  0E7B  0601               	xorwf	1,w
  6347  0E7C  1D03               	btfss	3,2
  6348  0E7D  2E7F               	goto	u3761
  6349  0E7E  2E80               	goto	u3760
  6350  0E7F                     u3761:
  6351  0E7F  2E94               	goto	l5701
  6352  0E80                     u3760:
  6353  0E80                     l5699:
  6354                           
  6355                           ;main.c: 557:             sendDotStar(0,0,dotValue2[i]);
  6356  0E80  01D2               	clrf	sendDotStar@g
  6357  0E81  3046               	movlw	70
  6358  0E82  00D6               	movwf	??_sendOrderDot
  6359  0E83  3027               	movlw	39
  6360  0E84  00D7               	movwf	??_sendOrderDot+1
  6361  0E85  085E               	movf	sendOrderDot@i,w
  6362  0E86  0756               	addwf	??_sendOrderDot,w
  6363  0E87  0086               	movwf	6
  6364  0E88  085F               	movf	sendOrderDot@i+1,w
  6365  0E89  3D57               	addwfc	??_sendOrderDot+1,w
  6366  0E8A  0087               	movwf	7
  6367  0E8B  0801               	movf	1,w
  6368  0E8C  00D8               	movwf	??_sendOrderDot+2
  6369  0E8D  0858               	movf	??_sendOrderDot+2,w
  6370  0E8E  00D3               	movwf	sendDotStar@b
  6371  0E8F  3000               	movlw	0
  6372  0E90  31A5  2522  318C   	fcall	_sendDotStar
  6373  0E93  2FE5               	goto	l5729
  6374  0E94                     l5701:
  6375  0E94  309C               	movlw	156
  6376  0E95  00D6               	movwf	??_sendOrderDot
  6377  0E96  3026               	movlw	38
  6378  0E97  00D7               	movwf	??_sendOrderDot+1
  6379  0E98  085E               	movf	sendOrderDot@i,w
  6380  0E99  0756               	addwf	??_sendOrderDot,w
  6381  0E9A  0086               	movwf	6
  6382  0E9B  085F               	movf	sendOrderDot@i+1,w
  6383  0E9C  3D57               	addwfc	??_sendOrderDot+1,w
  6384  0E9D  0087               	movwf	7
  6385  0E9E  3003               	movlw	3
  6386  0E9F  0601               	xorwf	1,w
  6387  0EA0  1D03               	btfss	3,2
  6388  0EA1  2EA3               	goto	u3771
  6389  0EA2  2EA4               	goto	u3770
  6390  0EA3                     u3771:
  6391  0EA3  2EC2               	goto	l5705
  6392  0EA4                     u3770:
  6393  0EA4                     l5703:
  6394                           
  6395                           ;main.c: 559:             sendDotStar(dotValue2[i],dotValue2[i],0);
  6396  0EA4  3046               	movlw	70
  6397  0EA5  00D6               	movwf	??_sendOrderDot
  6398  0EA6  3027               	movlw	39
  6399  0EA7  00D7               	movwf	??_sendOrderDot+1
  6400  0EA8  085E               	movf	sendOrderDot@i,w
  6401  0EA9  0756               	addwf	??_sendOrderDot,w
  6402  0EAA  0086               	movwf	6
  6403  0EAB  085F               	movf	sendOrderDot@i+1,w
  6404  0EAC  3D57               	addwfc	??_sendOrderDot+1,w
  6405  0EAD  0087               	movwf	7
  6406  0EAE  0801               	movf	1,w
  6407  0EAF  00D8               	movwf	??_sendOrderDot+2
  6408  0EB0  0858               	movf	??_sendOrderDot+2,w
  6409  0EB1  00D2               	movwf	sendDotStar@g
  6410  0EB2  01D3               	clrf	sendDotStar@b
  6411  0EB3  3046               	movlw	70
  6412  0EB4  00D9               	movwf	??_sendOrderDot+3
  6413  0EB5  3027               	movlw	39
  6414  0EB6  00DA               	movwf	??_sendOrderDot+4
  6415  0EB7  085E               	movf	sendOrderDot@i,w
  6416  0EB8  0759               	addwf	??_sendOrderDot+3,w
  6417  0EB9  0086               	movwf	6
  6418  0EBA  085F               	movf	sendOrderDot@i+1,w
  6419  0EBB  3D5A               	addwfc	??_sendOrderDot+4,w
  6420  0EBC  0087               	movwf	7
  6421  0EBD  0801               	movf	1,w
  6422  0EBE  31A5  2522  318C   	fcall	_sendDotStar
  6423  0EC1  2FE5               	goto	l5729
  6424  0EC2                     l5705:
  6425  0EC2  309C               	movlw	156
  6426  0EC3  00D6               	movwf	??_sendOrderDot
  6427  0EC4  3026               	movlw	38
  6428  0EC5  00D7               	movwf	??_sendOrderDot+1
  6429  0EC6  085E               	movf	sendOrderDot@i,w
  6430  0EC7  0756               	addwf	??_sendOrderDot,w
  6431  0EC8  0086               	movwf	6
  6432  0EC9  085F               	movf	sendOrderDot@i+1,w
  6433  0ECA  3D57               	addwfc	??_sendOrderDot+1,w
  6434  0ECB  0087               	movwf	7
  6435  0ECC  3004               	movlw	4
  6436  0ECD  0601               	xorwf	1,w
  6437  0ECE  1D03               	btfss	3,2
  6438  0ECF  2ED1               	goto	u3781
  6439  0ED0  2ED2               	goto	u3780
  6440  0ED1                     u3781:
  6441  0ED1  2EF0               	goto	l5709
  6442  0ED2                     u3780:
  6443  0ED2                     l5707:
  6444                           
  6445                           ;main.c: 561:             sendDotStar(dotValue2[i],0,dotValue2[i]);
  6446  0ED2  01D2               	clrf	sendDotStar@g
  6447  0ED3  3046               	movlw	70
  6448  0ED4  00D6               	movwf	??_sendOrderDot
  6449  0ED5  3027               	movlw	39
  6450  0ED6  00D7               	movwf	??_sendOrderDot+1
  6451  0ED7  085E               	movf	sendOrderDot@i,w
  6452  0ED8  0756               	addwf	??_sendOrderDot,w
  6453  0ED9  0086               	movwf	6
  6454  0EDA  085F               	movf	sendOrderDot@i+1,w
  6455  0EDB  3D57               	addwfc	??_sendOrderDot+1,w
  6456  0EDC  0087               	movwf	7
  6457  0EDD  0801               	movf	1,w
  6458  0EDE  00D8               	movwf	??_sendOrderDot+2
  6459  0EDF  0858               	movf	??_sendOrderDot+2,w
  6460  0EE0  00D3               	movwf	sendDotStar@b
  6461  0EE1  3046               	movlw	70
  6462  0EE2  00D9               	movwf	??_sendOrderDot+3
  6463  0EE3  3027               	movlw	39
  6464  0EE4  00DA               	movwf	??_sendOrderDot+4
  6465  0EE5  085E               	movf	sendOrderDot@i,w
  6466  0EE6  0759               	addwf	??_sendOrderDot+3,w
  6467  0EE7  0086               	movwf	6
  6468  0EE8  085F               	movf	sendOrderDot@i+1,w
  6469  0EE9  3D5A               	addwfc	??_sendOrderDot+4,w
  6470  0EEA  0087               	movwf	7
  6471  0EEB  0801               	movf	1,w
  6472  0EEC  31A5  2522  318C   	fcall	_sendDotStar
  6473  0EEF  2FE5               	goto	l5729
  6474  0EF0                     l5709:
  6475  0EF0  309C               	movlw	156
  6476  0EF1  00D6               	movwf	??_sendOrderDot
  6477  0EF2  3026               	movlw	38
  6478  0EF3  00D7               	movwf	??_sendOrderDot+1
  6479  0EF4  085E               	movf	sendOrderDot@i,w
  6480  0EF5  0756               	addwf	??_sendOrderDot,w
  6481  0EF6  0086               	movwf	6
  6482  0EF7  085F               	movf	sendOrderDot@i+1,w
  6483  0EF8  3D57               	addwfc	??_sendOrderDot+1,w
  6484  0EF9  0087               	movwf	7
  6485  0EFA  3008               	movlw	8
  6486  0EFB  0601               	xorwf	1,w
  6487  0EFC  1D03               	btfss	3,2
  6488  0EFD  2EFF               	goto	u3791
  6489  0EFE  2F00               	goto	u3790
  6490  0EFF                     u3791:
  6491  0EFF  2F21               	goto	l5713
  6492  0F00                     u3790:
  6493  0F00                     l5711:
  6494                           
  6495                           ;main.c: 563:             sendDotStar(0,dotValue2[i],dotValue2[i]);
  6496  0F00  3046               	movlw	70
  6497  0F01  00D6               	movwf	??_sendOrderDot
  6498  0F02  3027               	movlw	39
  6499  0F03  00D7               	movwf	??_sendOrderDot+1
  6500  0F04  085E               	movf	sendOrderDot@i,w
  6501  0F05  0756               	addwf	??_sendOrderDot,w
  6502  0F06  0086               	movwf	6
  6503  0F07  085F               	movf	sendOrderDot@i+1,w
  6504  0F08  3D57               	addwfc	??_sendOrderDot+1,w
  6505  0F09  0087               	movwf	7
  6506  0F0A  0801               	movf	1,w
  6507  0F0B  00D8               	movwf	??_sendOrderDot+2
  6508  0F0C  0858               	movf	??_sendOrderDot+2,w
  6509  0F0D  00D2               	movwf	sendDotStar@g
  6510  0F0E  3046               	movlw	70
  6511  0F0F  00D9               	movwf	??_sendOrderDot+3
  6512  0F10  3027               	movlw	39
  6513  0F11  00DA               	movwf	??_sendOrderDot+4
  6514  0F12  085E               	movf	sendOrderDot@i,w
  6515  0F13  0759               	addwf	??_sendOrderDot+3,w
  6516  0F14  0086               	movwf	6
  6517  0F15  085F               	movf	sendOrderDot@i+1,w
  6518  0F16  3D5A               	addwfc	??_sendOrderDot+4,w
  6519  0F17  0087               	movwf	7
  6520  0F18  0801               	movf	1,w
  6521  0F19  00DB               	movwf	??_sendOrderDot+5
  6522  0F1A  085B               	movf	??_sendOrderDot+5,w
  6523  0F1B  00D3               	movwf	sendDotStar@b
  6524  0F1C  3000               	movlw	0
  6525  0F1D  31A5  2522  318C   	fcall	_sendDotStar
  6526  0F20  2FE5               	goto	l5729
  6527  0F21                     l5713:
  6528  0F21  309C               	movlw	156
  6529  0F22  00D6               	movwf	??_sendOrderDot
  6530  0F23  3026               	movlw	38
  6531  0F24  00D7               	movwf	??_sendOrderDot+1
  6532  0F25  085E               	movf	sendOrderDot@i,w
  6533  0F26  0756               	addwf	??_sendOrderDot,w
  6534  0F27  0086               	movwf	6
  6535  0F28  085F               	movf	sendOrderDot@i+1,w
  6536  0F29  3D57               	addwfc	??_sendOrderDot+1,w
  6537  0F2A  0087               	movwf	7
  6538  0F2B  300A               	movlw	10
  6539  0F2C  0601               	xorwf	1,w
  6540  0F2D  1D03               	btfss	3,2
  6541  0F2E  2F30               	goto	u3801
  6542  0F2F  2F31               	goto	u3800
  6543  0F30                     u3801:
  6544  0F30  2F5C               	goto	l5717
  6545  0F31                     u3800:
  6546  0F31                     l5715:
  6547                           
  6548                           ;main.c: 565:             sendDotStar(dotValue2[i],dotValue2[i],dotValue2[i]);
  6549  0F31  3046               	movlw	70
  6550  0F32  00D6               	movwf	??_sendOrderDot
  6551  0F33  3027               	movlw	39
  6552  0F34  00D7               	movwf	??_sendOrderDot+1
  6553  0F35  085E               	movf	sendOrderDot@i,w
  6554  0F36  0756               	addwf	??_sendOrderDot,w
  6555  0F37  0086               	movwf	6
  6556  0F38  085F               	movf	sendOrderDot@i+1,w
  6557  0F39  3D57               	addwfc	??_sendOrderDot+1,w
  6558  0F3A  0087               	movwf	7
  6559  0F3B  0801               	movf	1,w
  6560  0F3C  00D8               	movwf	??_sendOrderDot+2
  6561  0F3D  0858               	movf	??_sendOrderDot+2,w
  6562  0F3E  00D2               	movwf	sendDotStar@g
  6563  0F3F  3046               	movlw	70
  6564  0F40  00D9               	movwf	??_sendOrderDot+3
  6565  0F41  3027               	movlw	39
  6566  0F42  00DA               	movwf	??_sendOrderDot+4
  6567  0F43  085E               	movf	sendOrderDot@i,w
  6568  0F44  0759               	addwf	??_sendOrderDot+3,w
  6569  0F45  0086               	movwf	6
  6570  0F46  085F               	movf	sendOrderDot@i+1,w
  6571  0F47  3D5A               	addwfc	??_sendOrderDot+4,w
  6572  0F48  0087               	movwf	7
  6573  0F49  0801               	movf	1,w
  6574  0F4A  00DB               	movwf	??_sendOrderDot+5
  6575  0F4B  085B               	movf	??_sendOrderDot+5,w
  6576  0F4C  00D3               	movwf	sendDotStar@b
  6577  0F4D  3046               	movlw	70
  6578  0F4E  00DC               	movwf	??_sendOrderDot+6
  6579  0F4F  3027               	movlw	39
  6580  0F50  00DD               	movwf	??_sendOrderDot+7
  6581  0F51  085E               	movf	sendOrderDot@i,w
  6582  0F52  075C               	addwf	??_sendOrderDot+6,w
  6583  0F53  0086               	movwf	6
  6584  0F54  085F               	movf	sendOrderDot@i+1,w
  6585  0F55  3D5D               	addwfc	??_sendOrderDot+7,w
  6586  0F56  0087               	movwf	7
  6587  0F57  0801               	movf	1,w
  6588  0F58  31A5  2522  318C   	fcall	_sendDotStar
  6589  0F5B  2FE5               	goto	l5729
  6590  0F5C                     l5717:
  6591  0F5C  309C               	movlw	156
  6592  0F5D  00D6               	movwf	??_sendOrderDot
  6593  0F5E  3026               	movlw	38
  6594  0F5F  00D7               	movwf	??_sendOrderDot+1
  6595  0F60  085E               	movf	sendOrderDot@i,w
  6596  0F61  0756               	addwf	??_sendOrderDot,w
  6597  0F62  0086               	movwf	6
  6598  0F63  085F               	movf	sendOrderDot@i+1,w
  6599  0F64  3D57               	addwfc	??_sendOrderDot+1,w
  6600  0F65  0087               	movwf	7
  6601  0F66  3014               	movlw	20
  6602  0F67  0601               	xorwf	1,w
  6603  0F68  1D03               	btfss	3,2
  6604  0F69  2F6B               	goto	u3811
  6605  0F6A  2F6C               	goto	u3810
  6606  0F6B                     u3811:
  6607  0F6B  2F8D               	goto	l5721
  6608  0F6C                     u3810:
  6609  0F6C                     l5719:
  6610                           
  6611                           ;main.c: 567:             sendDotStar(0, dotValue2[i], 255-dotValue2[i]);
  6612  0F6C  3046               	movlw	70
  6613  0F6D  00D6               	movwf	??_sendOrderDot
  6614  0F6E  3027               	movlw	39
  6615  0F6F  00D7               	movwf	??_sendOrderDot+1
  6616  0F70  085E               	movf	sendOrderDot@i,w
  6617  0F71  0756               	addwf	??_sendOrderDot,w
  6618  0F72  0086               	movwf	6
  6619  0F73  085F               	movf	sendOrderDot@i+1,w
  6620  0F74  3D57               	addwfc	??_sendOrderDot+1,w
  6621  0F75  0087               	movwf	7
  6622  0F76  0801               	movf	1,w
  6623  0F77  00D8               	movwf	??_sendOrderDot+2
  6624  0F78  0858               	movf	??_sendOrderDot+2,w
  6625  0F79  00D2               	movwf	sendDotStar@g
  6626  0F7A  3046               	movlw	70
  6627  0F7B  00D9               	movwf	??_sendOrderDot+3
  6628  0F7C  3027               	movlw	39
  6629  0F7D  00DA               	movwf	??_sendOrderDot+4
  6630  0F7E  085E               	movf	sendOrderDot@i,w
  6631  0F7F  0759               	addwf	??_sendOrderDot+3,w
  6632  0F80  0086               	movwf	6
  6633  0F81  085F               	movf	sendOrderDot@i+1,w
  6634  0F82  3D5A               	addwfc	??_sendOrderDot+4,w
  6635  0F83  0087               	movwf	7
  6636  0F84  0901               	comf	1,w
  6637  0F85  00DB               	movwf	??_sendOrderDot+5
  6638  0F86  085B               	movf	??_sendOrderDot+5,w
  6639  0F87  00D3               	movwf	sendDotStar@b
  6640  0F88  3000               	movlw	0
  6641  0F89  31A5  2522  318C   	fcall	_sendDotStar
  6642  0F8C  2FE5               	goto	l5729
  6643  0F8D                     l5721:
  6644  0F8D  309C               	movlw	156
  6645  0F8E  00D6               	movwf	??_sendOrderDot
  6646  0F8F  3026               	movlw	38
  6647  0F90  00D7               	movwf	??_sendOrderDot+1
  6648  0F91  085E               	movf	sendOrderDot@i,w
  6649  0F92  0756               	addwf	??_sendOrderDot,w
  6650  0F93  0086               	movwf	6
  6651  0F94  085F               	movf	sendOrderDot@i+1,w
  6652  0F95  3D57               	addwfc	??_sendOrderDot+1,w
  6653  0F96  0087               	movwf	7
  6654  0F97  3015               	movlw	21
  6655  0F98  0601               	xorwf	1,w
  6656  0F99  1D03               	btfss	3,2
  6657  0F9A  2F9C               	goto	u3821
  6658  0F9B  2F9D               	goto	u3820
  6659  0F9C                     u3821:
  6660  0F9C  2FBE               	goto	l5725
  6661  0F9D                     u3820:
  6662  0F9D                     l5723:
  6663                           
  6664                           ;main.c: 569:             sendDotStar(0, 255-dotValue2[i], dotValue2[i]);
  6665  0F9D  3046               	movlw	70
  6666  0F9E  00D6               	movwf	??_sendOrderDot
  6667  0F9F  3027               	movlw	39
  6668  0FA0  00D7               	movwf	??_sendOrderDot+1
  6669  0FA1  085E               	movf	sendOrderDot@i,w
  6670  0FA2  0756               	addwf	??_sendOrderDot,w
  6671  0FA3  0086               	movwf	6
  6672  0FA4  085F               	movf	sendOrderDot@i+1,w
  6673  0FA5  3D57               	addwfc	??_sendOrderDot+1,w
  6674  0FA6  0087               	movwf	7
  6675  0FA7  0901               	comf	1,w
  6676  0FA8  00D8               	movwf	??_sendOrderDot+2
  6677  0FA9  0858               	movf	??_sendOrderDot+2,w
  6678  0FAA  00D2               	movwf	sendDotStar@g
  6679  0FAB  3046               	movlw	70
  6680  0FAC  00D9               	movwf	??_sendOrderDot+3
  6681  0FAD  3027               	movlw	39
  6682  0FAE  00DA               	movwf	??_sendOrderDot+4
  6683  0FAF  085E               	movf	sendOrderDot@i,w
  6684  0FB0  0759               	addwf	??_sendOrderDot+3,w
  6685  0FB1  0086               	movwf	6
  6686  0FB2  085F               	movf	sendOrderDot@i+1,w
  6687  0FB3  3D5A               	addwfc	??_sendOrderDot+4,w
  6688  0FB4  0087               	movwf	7
  6689  0FB5  0801               	movf	1,w
  6690  0FB6  00DB               	movwf	??_sendOrderDot+5
  6691  0FB7  085B               	movf	??_sendOrderDot+5,w
  6692  0FB8  00D3               	movwf	sendDotStar@b
  6693  0FB9  3000               	movlw	0
  6694  0FBA  31A5  2522  318C   	fcall	_sendDotStar
  6695  0FBD  2FE5               	goto	l5729
  6696  0FBE                     l5725:
  6697  0FBE  309C               	movlw	156
  6698  0FBF  00D6               	movwf	??_sendOrderDot
  6699  0FC0  3026               	movlw	38
  6700  0FC1  00D7               	movwf	??_sendOrderDot+1
  6701  0FC2  085E               	movf	sendOrderDot@i,w
  6702  0FC3  0756               	addwf	??_sendOrderDot,w
  6703  0FC4  0086               	movwf	6
  6704  0FC5  085F               	movf	sendOrderDot@i+1,w
  6705  0FC6  3D57               	addwfc	??_sendOrderDot+1,w
  6706  0FC7  0087               	movwf	7
  6707  0FC8  3016               	movlw	22
  6708  0FC9  0601               	xorwf	1,w
  6709  0FCA  1D03               	btfss	3,2
  6710  0FCB  2FCD               	goto	u3831
  6711  0FCC  2FCE               	goto	u3830
  6712  0FCD                     u3831:
  6713  0FCD  2FE5               	goto	l995
  6714  0FCE                     u3830:
  6715  0FCE                     l5727:
  6716                           
  6717                           ;main.c: 571:             sendDotStar(0, dotValue2[i], intensityRefri);
  6718  0FCE  3046               	movlw	70
  6719  0FCF  00D6               	movwf	??_sendOrderDot
  6720  0FD0  3027               	movlw	39
  6721  0FD1  00D7               	movwf	??_sendOrderDot+1
  6722  0FD2  085E               	movf	sendOrderDot@i,w
  6723  0FD3  0756               	addwf	??_sendOrderDot,w
  6724  0FD4  0086               	movwf	6
  6725  0FD5  085F               	movf	sendOrderDot@i+1,w
  6726  0FD6  3D57               	addwfc	??_sendOrderDot+1,w
  6727  0FD7  0087               	movwf	7
  6728  0FD8  0801               	movf	1,w
  6729  0FD9  00D8               	movwf	??_sendOrderDot+2
  6730  0FDA  0858               	movf	??_sendOrderDot+2,w
  6731  0FDB  00D2               	movwf	sendDotStar@g
  6732  0FDC  083B               	movf	_intensityRefri,w
  6733  0FDD  00D9               	movwf	??_sendOrderDot+3
  6734  0FDE  0859               	movf	??_sendOrderDot+3,w
  6735  0FDF  00D3               	movwf	sendDotStar@b
  6736  0FE0  3000               	movlw	0
  6737  0FE1  31A5  2522  318C   	fcall	_sendDotStar
  6738  0FE4  2FE5               	goto	l5729
  6739  0FE5                     l995:
  6740  0FE5                     l5729:
  6741                           
  6742                           ;main.c: 572:     }
  6743  0FE5  3001               	movlw	1
  6744  0FE6  0020               	movlb	0	; select bank0
  6745  0FE7  07DE               	addwf	sendOrderDot@i,f
  6746  0FE8  3000               	movlw	0
  6747  0FE9  3DDF               	addwfc	sendOrderDot@i+1,f
  6748  0FEA                     l5731:
  6749  0FEA  3000               	movlw	0
  6750  0FEB  025F               	subwf	sendOrderDot@i+1,w
  6751  0FEC  3055               	movlw	85
  6752  0FED  1903               	skipnz
  6753  0FEE  025E               	subwf	sendOrderDot@i,w
  6754  0FEF  1C03               	skipc
  6755  0FF0  2FF2               	goto	u3841
  6756  0FF1  2FF3               	goto	u3840
  6757  0FF2                     u3841:
  6758  0FF2  2E2D               	goto	l5689
  6759  0FF3                     u3840:
  6760  0FF3                     l5733:
  6761                           
  6762                           ;main.c: 573:     sendDotStar(255,255,255);
  6763  0FF3  30FF               	movlw	255
  6764  0FF4  00D6               	movwf	??_sendOrderDot
  6765  0FF5  0856               	movf	??_sendOrderDot,w
  6766  0FF6  00D2               	movwf	sendDotStar@g
  6767  0FF7  30FF               	movlw	255
  6768  0FF8  00D7               	movwf	??_sendOrderDot+1
  6769  0FF9  0857               	movf	??_sendOrderDot+1,w
  6770  0FFA  00D3               	movwf	sendDotStar@b
  6771  0FFB  30FF               	movlw	255
  6772  0FFC  31A5  2522  318C   	fcall	_sendDotStar
  6773  0FFF                     l1002:
  6774  0FFF  0008               	return
  6775  1000                     __end_of_sendOrderDot:
  6776                           
  6777                           	psect	text4
  6778  2522                     __ptext4:	
  6779 ;; *************** function _sendDotStar *****************
  6780 ;; Defined at:
  6781 ;;		line 512 in file "main.c"
  6782 ;; Parameters:    Size  Location     Type
  6783 ;;  r               1    wreg     unsigned char 
  6784 ;;  g               1    5[BANK0 ] unsigned char 
  6785 ;;  b               1    6[BANK0 ] unsigned char 
  6786 ;; Auto vars:     Size  Location     Type
  6787 ;;  r               1    8[BANK0 ] unsigned char 
  6788 ;; Return value:  Size  Location     Type
  6789 ;;                  1    wreg      void 
  6790 ;; Registers used:
  6791 ;;		wreg, status,2, status,0, pclath, cstack
  6792 ;; Tracked objects:
  6793 ;;		On entry : 0/0
  6794 ;;		On exit  : 0/0
  6795 ;;		Unchanged: 0/0
  6796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6797 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6798 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6799 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6800 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6801 ;;Total ram usage:        4 bytes
  6802 ;; Hardware stack levels used: 1
  6803 ;; Hardware stack levels required when called: 12
  6804 ;; This function calls:
  6805 ;;		_SPI2_ExchangeByte
  6806 ;; This function is called by:
  6807 ;;		_sendOrderDot
  6808 ;;		_dotTest1
  6809 ;;		_dotTest2
  6810 ;;		_dotTest3
  6811 ;; This function uses a non-reentrant model
  6812 ;;
  6813                           
  6814                           
  6815                           ;psect for function _sendDotStar
  6816  2522                     _sendDotStar:
  6817                           
  6818                           ;incstack = 0
  6819                           ; Regs used in _sendDotStar: [wreg+status,2+status,0+pclath+cstack]
  6820                           ;sendDotStar@r stored from wreg
  6821  2522  0020               	movlb	0	; select bank0
  6822  2523  00D5               	movwf	sendDotStar@r
  6823  2524                     l5401:
  6824                           
  6825                           ;main.c: 513:     SPI2_ExchangeByte(0b11100000 | defaultLum);
  6826  2524  0021               	movlb	1	; select bank1
  6827  2525  086D               	movf	_defaultLum^(0+128),w
  6828  2526  38E0               	iorlw	224
  6829  2527  0020               	movlb	0	; select bank0
  6830  2528  00D4               	movwf	??_sendDotStar
  6831  2529  0854               	movf	??_sendDotStar,w
  6832  252A  00D1               	movwf	SPI2_ExchangeByte@data
  6833  252B  31A2  221A  31A5   	fcall	_SPI2_ExchangeByte
  6834                           
  6835                           ;main.c: 514:     SPI2_ExchangeByte(b);
  6836  252E  0020               	movlb	0	; select bank0
  6837  252F  0853               	movf	sendDotStar@b,w
  6838  2530  00D4               	movwf	??_sendDotStar
  6839  2531  0854               	movf	??_sendDotStar,w
  6840  2532  00D1               	movwf	SPI2_ExchangeByte@data
  6841  2533  31A2  221A  31A5   	fcall	_SPI2_ExchangeByte
  6842                           
  6843                           ;main.c: 515:     SPI2_ExchangeByte(g);SPI2_ExchangeByte(r);
  6844  2536  0020               	movlb	0	; select bank0
  6845  2537  0852               	movf	sendDotStar@g,w
  6846  2538  00D4               	movwf	??_sendDotStar
  6847  2539  0854               	movf	??_sendDotStar,w
  6848  253A  00D1               	movwf	SPI2_ExchangeByte@data
  6849  253B  31A2  221A  31A5   	fcall	_SPI2_ExchangeByte
  6850  253E  0020               	movlb	0	; select bank0
  6851  253F  0855               	movf	sendDotStar@r,w
  6852  2540  00D4               	movwf	??_sendDotStar
  6853  2541  0854               	movf	??_sendDotStar,w
  6854  2542  00D1               	movwf	SPI2_ExchangeByte@data
  6855  2543  31A2  221A  31A5   	fcall	_SPI2_ExchangeByte
  6856  2546                     l951:
  6857  2546  0008               	return
  6858  2547                     __end_of_sendDotStar:
  6859                           
  6860                           	psect	text5
  6861  22EC                     __ptext5:	
  6862 ;; *************** function _dotStart *****************
  6863 ;; Defined at:
  6864 ;;		line 507 in file "main.c"
  6865 ;; Parameters:    Size  Location     Type
  6866 ;;  i               1    wreg     unsigned char 
  6867 ;; Auto vars:     Size  Location     Type
  6868 ;;  i               1    6[BANK0 ] unsigned char 
  6869 ;; Return value:  Size  Location     Type
  6870 ;;                  1    wreg      void 
  6871 ;; Registers used:
  6872 ;;		wreg, status,2, status,0, pclath, cstack
  6873 ;; Tracked objects:
  6874 ;;		On entry : 0/0
  6875 ;;		On exit  : 0/0
  6876 ;;		Unchanged: 0/0
  6877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6879 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6880 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6881 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6882 ;;Total ram usage:        2 bytes
  6883 ;; Hardware stack levels used: 1
  6884 ;; Hardware stack levels required when called: 12
  6885 ;; This function calls:
  6886 ;;		_SPI2_ExchangeByte
  6887 ;; This function is called by:
  6888 ;;		_sendOrderDot
  6889 ;;		_dotTest1
  6890 ;;		_dotTest2
  6891 ;;		_dotTest3
  6892 ;; This function uses a non-reentrant model
  6893 ;;
  6894                           
  6895                           
  6896                           ;psect for function _dotStart
  6897  22EC                     _dotStart:
  6898  22EC                     l5389:	
  6899                           ;incstack = 0
  6900                           ; Regs used in _dotStart: [wreg+status,2+status,0+pclath+cstack]
  6901                           
  6902                           
  6903                           ;main.c: 508:     for(i = 0; i < 4; i++)
  6904  22EC  0020               	movlb	0	; select bank0
  6905  22ED  01D3               	clrf	dotStart@i
  6906  22EE                     l5395:
  6907                           
  6908                           ;main.c: 509:         SPI2_ExchangeByte(0);
  6909  22EE  01D1               	clrf	SPI2_ExchangeByte@data
  6910  22EF  31A2  221A  31A2   	fcall	_SPI2_ExchangeByte
  6911  22F2                     l5397:
  6912  22F2  3001               	movlw	1
  6913  22F3  0020               	movlb	0	; select bank0
  6914  22F4  00D2               	movwf	??_dotStart
  6915  22F5  0852               	movf	??_dotStart,w
  6916  22F6  07D3               	addwf	dotStart@i,f
  6917  22F7                     l5399:
  6918  22F7  3004               	movlw	4
  6919  22F8  0253               	subwf	dotStart@i,w
  6920  22F9  1C03               	skipc
  6921  22FA  2AFC               	goto	u3551
  6922  22FB  2AFD               	goto	u3550
  6923  22FC                     u3551:
  6924  22FC  2AEE               	goto	l5395
  6925  22FD                     u3550:
  6926  22FD                     l948:
  6927  22FD  0008               	return
  6928  22FE                     __end_of_dotStart:
  6929                           
  6930                           	psect	text6
  6931  221A                     __ptext6:	
  6932 ;; *************** function _SPI2_ExchangeByte *****************
  6933 ;; Defined at:
  6934 ;;		line 98 in file "mcc_generated_files/spi2.c"
  6935 ;; Parameters:    Size  Location     Type
  6936 ;;  data            1    4[BANK0 ] unsigned char 
  6937 ;; Auto vars:     Size  Location     Type
  6938 ;;		None
  6939 ;; Return value:  Size  Location     Type
  6940 ;;                  1    wreg      unsigned char 
  6941 ;; Registers used:
  6942 ;;		wreg
  6943 ;; Tracked objects:
  6944 ;;		On entry : 0/0
  6945 ;;		On exit  : 0/0
  6946 ;;		Unchanged: 0/0
  6947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6948 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6951 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6952 ;;Total ram usage:        1 bytes
  6953 ;; Hardware stack levels used: 1
  6954 ;; Hardware stack levels required when called: 11
  6955 ;; This function calls:
  6956 ;;		Nothing
  6957 ;; This function is called by:
  6958 ;;		_dotStart
  6959 ;;		_sendDotStar
  6960 ;;		_SPI2_WriteBlock
  6961 ;;		_SPI2_ReadBlock
  6962 ;;		_sendDotStar2
  6963 ;; This function uses a non-reentrant model
  6964 ;;
  6965                           
  6966                           
  6967                           ;psect for function _SPI2_ExchangeByte
  6968  221A                     _SPI2_ExchangeByte:
  6969  221A                     l5167:	
  6970                           ;incstack = 0
  6971                           ; Regs used in _SPI2_ExchangeByte: [wreg]
  6972                           
  6973                           
  6974                           ;mcc_generated_files/spi2.c: 98: uint8_t SPI2_ExchangeByte(uint8_t data);mcc_generated_f
      +                          iles/spi2.c: 99: {;mcc_generated_files/spi2.c: 100:     SSP2BUF = data;
  6975  221A  0020               	movlb	0	; select bank0
  6976  221B  0851               	movf	SPI2_ExchangeByte@data,w
  6977  221C  0024               	movlb	4	; select bank4
  6978  221D  0099               	movwf	25	;volatile
  6979  221E                     l392:	
  6980                           ;mcc_generated_files/spi2.c: 101:     while(!PIR2bits.SSP2IF);
  6981                           
  6982  221E  0020               	movlb	0	; select bank0
  6983  221F  1D92               	btfss	18,3	;volatile
  6984  2220  2A22               	goto	u3361
  6985  2221  2A23               	goto	u3360
  6986  2222                     u3361:
  6987  2222  2A1E               	goto	l392
  6988  2223                     u3360:
  6989  2223                     l394:
  6990                           
  6991                           ;mcc_generated_files/spi2.c: 102:     PIR2bits.SSP2IF = 0;
  6992  2223  1192               	bcf	18,3	;volatile
  6993  2224                     l5169:
  6994                           
  6995                           ;mcc_generated_files/spi2.c: 103:     return SSP2BUF;
  6996  2224  0024               	movlb	4	; select bank4
  6997  2225  0819               	movf	25,w	;volatile
  6998  2226                     l395:
  6999  2226  0008               	return
  7000  2227                     __end_of_SPI2_ExchangeByte:
  7001                           
  7002                           	psect	text7
  7003  00EA                     __ptext7:	
  7004 ;; *************** function _merger *****************
  7005 ;; Defined at:
  7006 ;;		line 441 in file "main.c"
  7007 ;; Parameters:    Size  Location     Type
  7008 ;;		None
  7009 ;; Auto vars:     Size  Location     Type
  7010 ;;  accum           2    2[BANK4 ] short 
  7011 ;;  i               2    0[BANK4 ] short 
  7012 ;; Return value:  Size  Location     Type
  7013 ;;                  1    wreg      void 
  7014 ;; Registers used:
  7015 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7016 ;; Tracked objects:
  7017 ;;		On entry : 0/0
  7018 ;;		On exit  : 0/0
  7019 ;;		Unchanged: 0/0
  7020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7022 ;;      Locals:         0       0       0       0       0       4       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7023 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7024 ;;      Totals:         0       7       0       0       0       4       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7025 ;;Total ram usage:       11 bytes
  7026 ;; Hardware stack levels used: 1
  7027 ;; Hardware stack levels required when called: 13
  7028 ;; This function calls:
  7029 ;;		_mergeBridge1
  7030 ;;		_mergeBridge2
  7031 ;;		_mergeGroup1
  7032 ;;		_mergeGroup2
  7033 ;; This function is called by:
  7034 ;;		_sendOrderXs
  7035 ;; This function uses a non-reentrant model
  7036 ;;
  7037                           
  7038                           
  7039                           ;psect for function _merger
  7040  00EA                     _merger:
  7041  00EA                     l7675:	
  7042                           ;incstack = 0
  7043                           ; Regs used in _merger: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7044                           
  7045                           
  7046                           ;main.c: 442:     short accum = 0;
  7047  00EA  0024               	movlb	4	; select bank4
  7048  00EB  01EE               	clrf	merger@accum^(0+512)
  7049  00EC  01EF               	clrf	(merger@accum+1)^(0+512)
  7050  00ED                     l7677:
  7051                           
  7052                           ;main.c: 446:     accum = mergeGroup1(21, accum);
  7053  00ED  086F               	movf	(merger@accum+1)^(0+512),w
  7054  00EE  0020               	movlb	0	; select bank0
  7055  00EF  00D6               	movwf	mergeGroup1@accum+1
  7056  00F0  0024               	movlb	4	; select bank4
  7057  00F1  086E               	movf	merger@accum^(0+512),w
  7058  00F2  0020               	movlb	0	; select bank0
  7059  00F3  00D5               	movwf	mergeGroup1@accum
  7060  00F4  3015               	movlw	21
  7061  00F5  319B  23CE  3180   	fcall	_mergeGroup1
  7062  00F8  0020               	movlb	0	; select bank0
  7063  00F9  00E3               	movwf	??_merger
  7064  00FA  01E4               	clrf	??_merger+1
  7065  00FB  0863               	movf	??_merger,w
  7066  00FC  0024               	movlb	4	; select bank4
  7067  00FD  00EE               	movwf	merger@accum^(0+512)
  7068  00FE  0020               	movlb	0	; select bank0
  7069  00FF  0864               	movf	??_merger+1,w
  7070  0100  0024               	movlb	4	; select bank4
  7071  0101  00EF               	movwf	(merger@accum+1)^(0+512)
  7072  0102                     l7679:
  7073                           
  7074                           ;main.c: 447:     accum = mergeGroup1(19, accum);
  7075  0102  086F               	movf	(merger@accum+1)^(0+512),w
  7076  0103  0020               	movlb	0	; select bank0
  7077  0104  00D6               	movwf	mergeGroup1@accum+1
  7078  0105  0024               	movlb	4	; select bank4
  7079  0106  086E               	movf	merger@accum^(0+512),w
  7080  0107  0020               	movlb	0	; select bank0
  7081  0108  00D5               	movwf	mergeGroup1@accum
  7082  0109  3013               	movlw	19
  7083  010A  319B  23CE  3180   	fcall	_mergeGroup1
  7084  010D  0020               	movlb	0	; select bank0
  7085  010E  00E3               	movwf	??_merger
  7086  010F  01E4               	clrf	??_merger+1
  7087  0110  0863               	movf	??_merger,w
  7088  0111  0024               	movlb	4	; select bank4
  7089  0112  00EE               	movwf	merger@accum^(0+512)
  7090  0113  0020               	movlb	0	; select bank0
  7091  0114  0864               	movf	??_merger+1,w
  7092  0115  0024               	movlb	4	; select bank4
  7093  0116  00EF               	movwf	(merger@accum+1)^(0+512)
  7094  0117                     l7681:
  7095                           
  7096                           ;main.c: 448:     accum = mergeGroup1(20, accum);
  7097  0117  086F               	movf	(merger@accum+1)^(0+512),w
  7098  0118  0020               	movlb	0	; select bank0
  7099  0119  00D6               	movwf	mergeGroup1@accum+1
  7100  011A  0024               	movlb	4	; select bank4
  7101  011B  086E               	movf	merger@accum^(0+512),w
  7102  011C  0020               	movlb	0	; select bank0
  7103  011D  00D5               	movwf	mergeGroup1@accum
  7104  011E  3014               	movlw	20
  7105  011F  319B  23CE  3180   	fcall	_mergeGroup1
  7106  0122  0020               	movlb	0	; select bank0
  7107  0123  00E3               	movwf	??_merger
  7108  0124  01E4               	clrf	??_merger+1
  7109  0125  0863               	movf	??_merger,w
  7110  0126  0024               	movlb	4	; select bank4
  7111  0127  00EE               	movwf	merger@accum^(0+512)
  7112  0128  0020               	movlb	0	; select bank0
  7113  0129  0864               	movf	??_merger+1,w
  7114  012A  0024               	movlb	4	; select bank4
  7115  012B  00EF               	movwf	(merger@accum+1)^(0+512)
  7116  012C                     l7683:
  7117                           
  7118                           ;main.c: 449:     accum = mergeBridge1(3, accum);
  7119  012C  3003               	movlw	3
  7120  012D  0020               	movlb	0	; select bank0
  7121  012E  00D1               	movwf	mergeBridge1@cantB
  7122  012F  3000               	movlw	0
  7123  0130  00D2               	movwf	mergeBridge1@cantB+1
  7124  0131  0024               	movlb	4	; select bank4
  7125  0132  086F               	movf	(merger@accum+1)^(0+512),w
  7126  0133  0020               	movlb	0	; select bank0
  7127  0134  00D4               	movwf	mergeBridge1@accum+1
  7128  0135  0024               	movlb	4	; select bank4
  7129  0136  086E               	movf	merger@accum^(0+512),w
  7130  0137  0020               	movlb	0	; select bank0
  7131  0138  00D3               	movwf	mergeBridge1@accum
  7132  0139  31A7  272D  3180   	fcall	_mergeBridge1
  7133  013C  0020               	movlb	0	; select bank0
  7134  013D  00E3               	movwf	??_merger
  7135  013E  01E4               	clrf	??_merger+1
  7136  013F  0863               	movf	??_merger,w
  7137  0140  0024               	movlb	4	; select bank4
  7138  0141  00EE               	movwf	merger@accum^(0+512)
  7139  0142  0020               	movlb	0	; select bank0
  7140  0143  0864               	movf	??_merger+1,w
  7141  0144  0024               	movlb	4	; select bank4
  7142  0145  00EF               	movwf	(merger@accum+1)^(0+512)
  7143  0146                     l7685:
  7144                           
  7145                           ;main.c: 450:     accum = mergeGroup1(8, accum);
  7146  0146  086F               	movf	(merger@accum+1)^(0+512),w
  7147  0147  0020               	movlb	0	; select bank0
  7148  0148  00D6               	movwf	mergeGroup1@accum+1
  7149  0149  0024               	movlb	4	; select bank4
  7150  014A  086E               	movf	merger@accum^(0+512),w
  7151  014B  0020               	movlb	0	; select bank0
  7152  014C  00D5               	movwf	mergeGroup1@accum
  7153  014D  3008               	movlw	8
  7154  014E  319B  23CE  3180   	fcall	_mergeGroup1
  7155  0151  0020               	movlb	0	; select bank0
  7156  0152  00E3               	movwf	??_merger
  7157  0153  01E4               	clrf	??_merger+1
  7158  0154  0863               	movf	??_merger,w
  7159  0155  0024               	movlb	4	; select bank4
  7160  0156  00EE               	movwf	merger@accum^(0+512)
  7161  0157  0020               	movlb	0	; select bank0
  7162  0158  0864               	movf	??_merger+1,w
  7163  0159  0024               	movlb	4	; select bank4
  7164  015A  00EF               	movwf	(merger@accum+1)^(0+512)
  7165  015B                     l7687:
  7166                           
  7167                           ;main.c: 451:     accum = mergeGroup1(6, accum);
  7168  015B  086F               	movf	(merger@accum+1)^(0+512),w
  7169  015C  0020               	movlb	0	; select bank0
  7170  015D  00D6               	movwf	mergeGroup1@accum+1
  7171  015E  0024               	movlb	4	; select bank4
  7172  015F  086E               	movf	merger@accum^(0+512),w
  7173  0160  0020               	movlb	0	; select bank0
  7174  0161  00D5               	movwf	mergeGroup1@accum
  7175  0162  3006               	movlw	6
  7176  0163  319B  23CE  3180   	fcall	_mergeGroup1
  7177  0166  0020               	movlb	0	; select bank0
  7178  0167  00E3               	movwf	??_merger
  7179  0168  01E4               	clrf	??_merger+1
  7180  0169  0863               	movf	??_merger,w
  7181  016A  0024               	movlb	4	; select bank4
  7182  016B  00EE               	movwf	merger@accum^(0+512)
  7183  016C  0020               	movlb	0	; select bank0
  7184  016D  0864               	movf	??_merger+1,w
  7185  016E  0024               	movlb	4	; select bank4
  7186  016F  00EF               	movwf	(merger@accum+1)^(0+512)
  7187  0170                     l7689:
  7188                           
  7189                           ;main.c: 452:     accum = mergeGroup1(4, accum);
  7190  0170  086F               	movf	(merger@accum+1)^(0+512),w
  7191  0171  0020               	movlb	0	; select bank0
  7192  0172  00D6               	movwf	mergeGroup1@accum+1
  7193  0173  0024               	movlb	4	; select bank4
  7194  0174  086E               	movf	merger@accum^(0+512),w
  7195  0175  0020               	movlb	0	; select bank0
  7196  0176  00D5               	movwf	mergeGroup1@accum
  7197  0177  3004               	movlw	4
  7198  0178  319B  23CE  3180   	fcall	_mergeGroup1
  7199  017B  0020               	movlb	0	; select bank0
  7200  017C  00E3               	movwf	??_merger
  7201  017D  01E4               	clrf	??_merger+1
  7202  017E  0863               	movf	??_merger,w
  7203  017F  0024               	movlb	4	; select bank4
  7204  0180  00EE               	movwf	merger@accum^(0+512)
  7205  0181  0020               	movlb	0	; select bank0
  7206  0182  0864               	movf	??_merger+1,w
  7207  0183  0024               	movlb	4	; select bank4
  7208  0184  00EF               	movwf	(merger@accum+1)^(0+512)
  7209  0185                     l7691:
  7210                           
  7211                           ;main.c: 453:     accum = mergeBridge1(1, accum);
  7212  0185  3001               	movlw	1
  7213  0186  0020               	movlb	0	; select bank0
  7214  0187  00D1               	movwf	mergeBridge1@cantB
  7215  0188  3000               	movlw	0
  7216  0189  00D2               	movwf	mergeBridge1@cantB+1
  7217  018A  0024               	movlb	4	; select bank4
  7218  018B  086F               	movf	(merger@accum+1)^(0+512),w
  7219  018C  0020               	movlb	0	; select bank0
  7220  018D  00D4               	movwf	mergeBridge1@accum+1
  7221  018E  0024               	movlb	4	; select bank4
  7222  018F  086E               	movf	merger@accum^(0+512),w
  7223  0190  0020               	movlb	0	; select bank0
  7224  0191  00D3               	movwf	mergeBridge1@accum
  7225  0192  31A7  272D  3180   	fcall	_mergeBridge1
  7226  0195  0020               	movlb	0	; select bank0
  7227  0196  00E3               	movwf	??_merger
  7228  0197  01E4               	clrf	??_merger+1
  7229  0198  0863               	movf	??_merger,w
  7230  0199  0024               	movlb	4	; select bank4
  7231  019A  00EE               	movwf	merger@accum^(0+512)
  7232  019B  0020               	movlb	0	; select bank0
  7233  019C  0864               	movf	??_merger+1,w
  7234  019D  0024               	movlb	4	; select bank4
  7235  019E  00EF               	movwf	(merger@accum+1)^(0+512)
  7236  019F                     l7693:
  7237                           
  7238                           ;main.c: 454:     accum = mergeGroup1(10, accum);
  7239  019F  086F               	movf	(merger@accum+1)^(0+512),w
  7240  01A0  0020               	movlb	0	; select bank0
  7241  01A1  00D6               	movwf	mergeGroup1@accum+1
  7242  01A2  0024               	movlb	4	; select bank4
  7243  01A3  086E               	movf	merger@accum^(0+512),w
  7244  01A4  0020               	movlb	0	; select bank0
  7245  01A5  00D5               	movwf	mergeGroup1@accum
  7246  01A6  300A               	movlw	10
  7247  01A7  319B  23CE  3180   	fcall	_mergeGroup1
  7248  01AA  0020               	movlb	0	; select bank0
  7249  01AB  00E3               	movwf	??_merger
  7250  01AC  01E4               	clrf	??_merger+1
  7251  01AD  0863               	movf	??_merger,w
  7252  01AE  0024               	movlb	4	; select bank4
  7253  01AF  00EE               	movwf	merger@accum^(0+512)
  7254  01B0  0020               	movlb	0	; select bank0
  7255  01B1  0864               	movf	??_merger+1,w
  7256  01B2  0024               	movlb	4	; select bank4
  7257  01B3  00EF               	movwf	(merger@accum+1)^(0+512)
  7258  01B4                     l7695:
  7259                           
  7260                           ;main.c: 455:     for(i = 0; i < groupSize[12]; i++) {
  7261  01B4  01EC               	clrf	merger@i^(0+512)
  7262  01B5  01ED               	clrf	(merger@i+1)^(0+512)
  7263  01B6  2A08               	goto	l7701
  7264  01B7                     l7697:
  7265                           
  7266                           ;main.c: 456:         dotValue1[i + accum] = NeckBR[i];
  7267  01B7  0024               	movlb	4	; select bank4
  7268  01B8  086C               	movf	merger@i^(0+512),w
  7269  01B9  3EB0               	addlw	(low (_NeckBR| 0))& (0+255)
  7270  01BA  0086               	movwf	6
  7271  01BB  0187               	clrf	7
  7272  01BC  0801               	movf	1,w
  7273  01BD  0020               	movlb	0	; select bank0
  7274  01BE  00E3               	movwf	??_merger
  7275  01BF  309B               	movlw	155
  7276  01C0  00E4               	movwf	??_merger+1
  7277  01C1  3027               	movlw	39
  7278  01C2  00E5               	movwf	??_merger+2
  7279  01C3  0024               	movlb	4	; select bank4
  7280  01C4  086C               	movf	merger@i^(0+512),w
  7281  01C5  0020               	movlb	0	; select bank0
  7282  01C6  0764               	addwf	??_merger+1,w
  7283  01C7  00E6               	movwf	??_merger+3
  7284  01C8  0024               	movlb	4	; select bank4
  7285  01C9  086D               	movf	(merger@i+1)^(0+512),w
  7286  01CA  0020               	movlb	0	; select bank0
  7287  01CB  3D65               	addwfc	??_merger+2,w
  7288  01CC  00E7               	movwf	??_merger+4
  7289  01CD  0024               	movlb	4	; select bank4
  7290  01CE  086E               	movf	merger@accum^(0+512),w
  7291  01CF  0020               	movlb	0	; select bank0
  7292  01D0  0766               	addwf	??_merger+3,w
  7293  01D1  00E8               	movwf	??_merger+5
  7294  01D2  0024               	movlb	4	; select bank4
  7295  01D3  086F               	movf	(merger@accum+1)^(0+512),w
  7296  01D4  0020               	movlb	0	; select bank0
  7297  01D5  3D67               	addwfc	??_merger+4,w
  7298  01D6  00E9               	movwf	??_merger+6
  7299  01D7  0868               	movf	??_merger+5,w
  7300  01D8  0086               	movwf	6
  7301  01D9  0869               	movf	??_merger+6,w
  7302  01DA  0087               	movwf	7
  7303  01DB  0863               	movf	??_merger,w
  7304  01DC  0081               	movwf	1
  7305                           
  7306                           ;main.c: 457:         dotColor1[i + accum] = NeckBRcolor[i];
  7307  01DD  0024               	movlb	4	; select bank4
  7308  01DE  086C               	movf	merger@i^(0+512),w
  7309  01DF  3EAC               	addlw	(low (_NeckBRcolor| 0))& (0+255)
  7310  01E0  0086               	movwf	6
  7311  01E1  0187               	clrf	7
  7312  01E2  0801               	movf	1,w
  7313  01E3  0020               	movlb	0	; select bank0
  7314  01E4  00E3               	movwf	??_merger
  7315  01E5  30F1               	movlw	241
  7316  01E6  00E4               	movwf	??_merger+1
  7317  01E7  3026               	movlw	38
  7318  01E8  00E5               	movwf	??_merger+2
  7319  01E9  0024               	movlb	4	; select bank4
  7320  01EA  086C               	movf	merger@i^(0+512),w
  7321  01EB  0020               	movlb	0	; select bank0
  7322  01EC  0764               	addwf	??_merger+1,w
  7323  01ED  00E6               	movwf	??_merger+3
  7324  01EE  0024               	movlb	4	; select bank4
  7325  01EF  086D               	movf	(merger@i+1)^(0+512),w
  7326  01F0  0020               	movlb	0	; select bank0
  7327  01F1  3D65               	addwfc	??_merger+2,w
  7328  01F2  00E7               	movwf	??_merger+4
  7329  01F3  0024               	movlb	4	; select bank4
  7330  01F4  086E               	movf	merger@accum^(0+512),w
  7331  01F5  0020               	movlb	0	; select bank0
  7332  01F6  0766               	addwf	??_merger+3,w
  7333  01F7  00E8               	movwf	??_merger+5
  7334  01F8  0024               	movlb	4	; select bank4
  7335  01F9  086F               	movf	(merger@accum+1)^(0+512),w
  7336  01FA  0020               	movlb	0	; select bank0
  7337  01FB  3D67               	addwfc	??_merger+4,w
  7338  01FC  00E9               	movwf	??_merger+6
  7339  01FD  0868               	movf	??_merger+5,w
  7340  01FE  0086               	movwf	6
  7341  01FF  0869               	movf	??_merger+6,w
  7342  0200  0087               	movwf	7
  7343  0201  0863               	movf	??_merger,w
  7344  0202  0081               	movwf	1
  7345  0203                     l7699:
  7346                           
  7347                           ;main.c: 458:     }
  7348  0203  3001               	movlw	1
  7349  0204  0024               	movlb	4	; select bank4
  7350  0205  07EC               	addwf	merger@i^(0+512),f
  7351  0206  3000               	movlw	0
  7352  0207  3DED               	addwfc	(merger@i+1)^(0+512),f
  7353  0208                     l7701:
  7354  0208  086D               	movf	(merger@i+1)^(0+512),w
  7355  0209  3A80               	xorlw	128
  7356  020A  0020               	movlb	0	; select bank0
  7357  020B  00E3               	movwf	??_merger
  7358  020C  3080               	movlw	128
  7359  020D  0263               	subwf	??_merger,w
  7360  020E  1D03               	skipz
  7361  020F  2A14               	goto	u6585
  7362  0210  0026               	movlb	6	; select bank6
  7363  0211  082C               	movf	(_groupSize^(0+768)+12),w
  7364  0212  0024               	movlb	4	; select bank4
  7365  0213  026C               	subwf	merger@i^(0+512),w
  7366  0214                     u6585:
  7367  0214  1C03               	skipc
  7368  0215  2A17               	goto	u6581
  7369  0216  2A18               	goto	u6580
  7370  0217                     u6581:
  7371  0217  29B7               	goto	l7697
  7372  0218                     u6580:
  7373  0218                     l7703:
  7374                           
  7375                           ;main.c: 459:     accum += groupSize[12];
  7376  0218  0026               	movlb	6	; select bank6
  7377  0219  082C               	movf	(_groupSize^(0+768)+12),w
  7378  021A  0020               	movlb	0	; select bank0
  7379  021B  00E3               	movwf	??_merger
  7380  021C  01E4               	clrf	??_merger+1
  7381  021D  0863               	movf	??_merger,w
  7382  021E  0024               	movlb	4	; select bank4
  7383  021F  07EE               	addwf	merger@accum^(0+512),f
  7384  0220  0020               	movlb	0	; select bank0
  7385  0221  0864               	movf	??_merger+1,w
  7386  0222  0024               	movlb	4	; select bank4
  7387  0223  3DEF               	addwfc	(merger@accum+1)^(0+512),f
  7388  0224                     l7705:
  7389                           
  7390                           ;main.c: 461:     accum = mergeGroup1(1, accum);
  7391  0224  086F               	movf	(merger@accum+1)^(0+512),w
  7392  0225  0020               	movlb	0	; select bank0
  7393  0226  00D6               	movwf	mergeGroup1@accum+1
  7394  0227  0024               	movlb	4	; select bank4
  7395  0228  086E               	movf	merger@accum^(0+512),w
  7396  0229  0020               	movlb	0	; select bank0
  7397  022A  00D5               	movwf	mergeGroup1@accum
  7398  022B  3001               	movlw	1
  7399  022C  319B  23CE  3180   	fcall	_mergeGroup1
  7400  022F  0020               	movlb	0	; select bank0
  7401  0230  00E3               	movwf	??_merger
  7402  0231  01E4               	clrf	??_merger+1
  7403  0232  0863               	movf	??_merger,w
  7404  0233  0024               	movlb	4	; select bank4
  7405  0234  00EE               	movwf	merger@accum^(0+512)
  7406  0235  0020               	movlb	0	; select bank0
  7407  0236  0864               	movf	??_merger+1,w
  7408  0237  0024               	movlb	4	; select bank4
  7409  0238  00EF               	movwf	(merger@accum+1)^(0+512)
  7410  0239                     l7707:
  7411                           
  7412                           ;main.c: 463:     accum = mergeGroup1(11, accum);
  7413  0239  086F               	movf	(merger@accum+1)^(0+512),w
  7414  023A  0020               	movlb	0	; select bank0
  7415  023B  00D6               	movwf	mergeGroup1@accum+1
  7416  023C  0024               	movlb	4	; select bank4
  7417  023D  086E               	movf	merger@accum^(0+512),w
  7418  023E  0020               	movlb	0	; select bank0
  7419  023F  00D5               	movwf	mergeGroup1@accum
  7420  0240  300B               	movlw	11
  7421  0241  319B  23CE  3180   	fcall	_mergeGroup1
  7422  0244  0020               	movlb	0	; select bank0
  7423  0245  00E3               	movwf	??_merger
  7424  0246  01E4               	clrf	??_merger+1
  7425  0247  0863               	movf	??_merger,w
  7426  0248  0024               	movlb	4	; select bank4
  7427  0249  00EE               	movwf	merger@accum^(0+512)
  7428  024A  0020               	movlb	0	; select bank0
  7429  024B  0864               	movf	??_merger+1,w
  7430  024C  0024               	movlb	4	; select bank4
  7431  024D  00EF               	movwf	(merger@accum+1)^(0+512)
  7432  024E                     l7709:
  7433                           
  7434                           ;main.c: 464:     accum = mergeGroup1(9, accum);
  7435  024E  086F               	movf	(merger@accum+1)^(0+512),w
  7436  024F  0020               	movlb	0	; select bank0
  7437  0250  00D6               	movwf	mergeGroup1@accum+1
  7438  0251  0024               	movlb	4	; select bank4
  7439  0252  086E               	movf	merger@accum^(0+512),w
  7440  0253  0020               	movlb	0	; select bank0
  7441  0254  00D5               	movwf	mergeGroup1@accum
  7442  0255  3009               	movlw	9
  7443  0256  319B  23CE  3180   	fcall	_mergeGroup1
  7444  0259  0020               	movlb	0	; select bank0
  7445  025A  00E3               	movwf	??_merger
  7446  025B  01E4               	clrf	??_merger+1
  7447  025C  0863               	movf	??_merger,w
  7448  025D  0024               	movlb	4	; select bank4
  7449  025E  00EE               	movwf	merger@accum^(0+512)
  7450  025F  0020               	movlb	0	; select bank0
  7451  0260  0864               	movf	??_merger+1,w
  7452  0261  0024               	movlb	4	; select bank4
  7453  0262  00EF               	movwf	(merger@accum+1)^(0+512)
  7454  0263                     l7711:
  7455                           
  7456                           ;main.c: 465:     accum = mergeBridge1(1, accum);
  7457  0263  3001               	movlw	1
  7458  0264  0020               	movlb	0	; select bank0
  7459  0265  00D1               	movwf	mergeBridge1@cantB
  7460  0266  3000               	movlw	0
  7461  0267  00D2               	movwf	mergeBridge1@cantB+1
  7462  0268  0024               	movlb	4	; select bank4
  7463  0269  086F               	movf	(merger@accum+1)^(0+512),w
  7464  026A  0020               	movlb	0	; select bank0
  7465  026B  00D4               	movwf	mergeBridge1@accum+1
  7466  026C  0024               	movlb	4	; select bank4
  7467  026D  086E               	movf	merger@accum^(0+512),w
  7468  026E  0020               	movlb	0	; select bank0
  7469  026F  00D3               	movwf	mergeBridge1@accum
  7470  0270  31A7  272D  3180   	fcall	_mergeBridge1
  7471  0273  0020               	movlb	0	; select bank0
  7472  0274  00E3               	movwf	??_merger
  7473  0275  01E4               	clrf	??_merger+1
  7474  0276  0863               	movf	??_merger,w
  7475  0277  0024               	movlb	4	; select bank4
  7476  0278  00EE               	movwf	merger@accum^(0+512)
  7477  0279  0020               	movlb	0	; select bank0
  7478  027A  0864               	movf	??_merger+1,w
  7479  027B  0024               	movlb	4	; select bank4
  7480  027C  00EF               	movwf	(merger@accum+1)^(0+512)
  7481  027D                     l7713:
  7482                           
  7483                           ;main.c: 466:     accum = mergeGroup1(7, accum);
  7484  027D  086F               	movf	(merger@accum+1)^(0+512),w
  7485  027E  0020               	movlb	0	; select bank0
  7486  027F  00D6               	movwf	mergeGroup1@accum+1
  7487  0280  0024               	movlb	4	; select bank4
  7488  0281  086E               	movf	merger@accum^(0+512),w
  7489  0282  0020               	movlb	0	; select bank0
  7490  0283  00D5               	movwf	mergeGroup1@accum
  7491  0284  3007               	movlw	7
  7492  0285  319B  23CE  3180   	fcall	_mergeGroup1
  7493  0288  0020               	movlb	0	; select bank0
  7494  0289  00E3               	movwf	??_merger
  7495  028A  01E4               	clrf	??_merger+1
  7496  028B  0863               	movf	??_merger,w
  7497  028C  0024               	movlb	4	; select bank4
  7498  028D  00EE               	movwf	merger@accum^(0+512)
  7499  028E  0020               	movlb	0	; select bank0
  7500  028F  0864               	movf	??_merger+1,w
  7501  0290  0024               	movlb	4	; select bank4
  7502  0291  00EF               	movwf	(merger@accum+1)^(0+512)
  7503  0292                     l7715:
  7504                           
  7505                           ;main.c: 467:     accum = mergeGroup1(5, accum);
  7506  0292  086F               	movf	(merger@accum+1)^(0+512),w
  7507  0293  0020               	movlb	0	; select bank0
  7508  0294  00D6               	movwf	mergeGroup1@accum+1
  7509  0295  0024               	movlb	4	; select bank4
  7510  0296  086E               	movf	merger@accum^(0+512),w
  7511  0297  0020               	movlb	0	; select bank0
  7512  0298  00D5               	movwf	mergeGroup1@accum
  7513  0299  3005               	movlw	5
  7514  029A  319B  23CE  3180   	fcall	_mergeGroup1
  7515  029D  0020               	movlb	0	; select bank0
  7516  029E  00E3               	movwf	??_merger
  7517  029F  01E4               	clrf	??_merger+1
  7518  02A0  0863               	movf	??_merger,w
  7519  02A1  0024               	movlb	4	; select bank4
  7520  02A2  00EE               	movwf	merger@accum^(0+512)
  7521  02A3  0020               	movlb	0	; select bank0
  7522  02A4  0864               	movf	??_merger+1,w
  7523  02A5  0024               	movlb	4	; select bank4
  7524  02A6  00EF               	movwf	(merger@accum+1)^(0+512)
  7525  02A7                     l7717:
  7526                           
  7527                           ;main.c: 468:     accum = mergeGroup1(3, accum);
  7528  02A7  086F               	movf	(merger@accum+1)^(0+512),w
  7529  02A8  0020               	movlb	0	; select bank0
  7530  02A9  00D6               	movwf	mergeGroup1@accum+1
  7531  02AA  0024               	movlb	4	; select bank4
  7532  02AB  086E               	movf	merger@accum^(0+512),w
  7533  02AC  0020               	movlb	0	; select bank0
  7534  02AD  00D5               	movwf	mergeGroup1@accum
  7535  02AE  3003               	movlw	3
  7536  02AF  319B  23CE  3180   	fcall	_mergeGroup1
  7537  02B2  0020               	movlb	0	; select bank0
  7538  02B3  00E3               	movwf	??_merger
  7539  02B4  01E4               	clrf	??_merger+1
  7540  02B5  0863               	movf	??_merger,w
  7541  02B6  0024               	movlb	4	; select bank4
  7542  02B7  00EE               	movwf	merger@accum^(0+512)
  7543  02B8  0020               	movlb	0	; select bank0
  7544  02B9  0864               	movf	??_merger+1,w
  7545  02BA  0024               	movlb	4	; select bank4
  7546  02BB  00EF               	movwf	(merger@accum+1)^(0+512)
  7547  02BC                     l7719:
  7548                           
  7549                           ;main.c: 469:     accum = mergeBridge1(3, accum);
  7550  02BC  3003               	movlw	3
  7551  02BD  0020               	movlb	0	; select bank0
  7552  02BE  00D1               	movwf	mergeBridge1@cantB
  7553  02BF  3000               	movlw	0
  7554  02C0  00D2               	movwf	mergeBridge1@cantB+1
  7555  02C1  0024               	movlb	4	; select bank4
  7556  02C2  086F               	movf	(merger@accum+1)^(0+512),w
  7557  02C3  0020               	movlb	0	; select bank0
  7558  02C4  00D4               	movwf	mergeBridge1@accum+1
  7559  02C5  0024               	movlb	4	; select bank4
  7560  02C6  086E               	movf	merger@accum^(0+512),w
  7561  02C7  0020               	movlb	0	; select bank0
  7562  02C8  00D3               	movwf	mergeBridge1@accum
  7563  02C9  31A7  272D  3180   	fcall	_mergeBridge1
  7564  02CC  0020               	movlb	0	; select bank0
  7565  02CD  00E3               	movwf	??_merger
  7566  02CE  01E4               	clrf	??_merger+1
  7567  02CF  0863               	movf	??_merger,w
  7568  02D0  0024               	movlb	4	; select bank4
  7569  02D1  00EE               	movwf	merger@accum^(0+512)
  7570  02D2  0020               	movlb	0	; select bank0
  7571  02D3  0864               	movf	??_merger+1,w
  7572  02D4  0024               	movlb	4	; select bank4
  7573  02D5  00EF               	movwf	(merger@accum+1)^(0+512)
  7574  02D6                     l7721:
  7575                           
  7576                           ;main.c: 470:     accum = mergeGroup1(2, accum);
  7577  02D6  086F               	movf	(merger@accum+1)^(0+512),w
  7578  02D7  0020               	movlb	0	; select bank0
  7579  02D8  00D6               	movwf	mergeGroup1@accum+1
  7580  02D9  0024               	movlb	4	; select bank4
  7581  02DA  086E               	movf	merger@accum^(0+512),w
  7582  02DB  0020               	movlb	0	; select bank0
  7583  02DC  00D5               	movwf	mergeGroup1@accum
  7584  02DD  3002               	movlw	2
  7585  02DE  319B  23CE  3180   	fcall	_mergeGroup1
  7586  02E1  0020               	movlb	0	; select bank0
  7587  02E2  00E3               	movwf	??_merger
  7588  02E3  01E4               	clrf	??_merger+1
  7589  02E4  0863               	movf	??_merger,w
  7590  02E5  0024               	movlb	4	; select bank4
  7591  02E6  00EE               	movwf	merger@accum^(0+512)
  7592  02E7  0020               	movlb	0	; select bank0
  7593  02E8  0864               	movf	??_merger+1,w
  7594  02E9  0024               	movlb	4	; select bank4
  7595  02EA  00EF               	movwf	(merger@accum+1)^(0+512)
  7596  02EB                     l7723:
  7597                           
  7598                           ;main.c: 471:     accum = mergeBridge1(1, accum);
  7599  02EB  3001               	movlw	1
  7600  02EC  0020               	movlb	0	; select bank0
  7601  02ED  00D1               	movwf	mergeBridge1@cantB
  7602  02EE  3000               	movlw	0
  7603  02EF  00D2               	movwf	mergeBridge1@cantB+1
  7604  02F0  0024               	movlb	4	; select bank4
  7605  02F1  086F               	movf	(merger@accum+1)^(0+512),w
  7606  02F2  0020               	movlb	0	; select bank0
  7607  02F3  00D4               	movwf	mergeBridge1@accum+1
  7608  02F4  0024               	movlb	4	; select bank4
  7609  02F5  086E               	movf	merger@accum^(0+512),w
  7610  02F6  0020               	movlb	0	; select bank0
  7611  02F7  00D3               	movwf	mergeBridge1@accum
  7612  02F8  31A7  272D  3180   	fcall	_mergeBridge1
  7613  02FB  0020               	movlb	0	; select bank0
  7614  02FC  00E3               	movwf	??_merger
  7615  02FD  01E4               	clrf	??_merger+1
  7616  02FE  0863               	movf	??_merger,w
  7617  02FF  0024               	movlb	4	; select bank4
  7618  0300  00EE               	movwf	merger@accum^(0+512)
  7619  0301  0020               	movlb	0	; select bank0
  7620  0302  0864               	movf	??_merger+1,w
  7621  0303  0024               	movlb	4	; select bank4
  7622  0304  00EF               	movwf	(merger@accum+1)^(0+512)
  7623  0305                     l7725:
  7624                           
  7625                           ;main.c: 472:     accum = mergeGroup1(13, accum);
  7626  0305  086F               	movf	(merger@accum+1)^(0+512),w
  7627  0306  0020               	movlb	0	; select bank0
  7628  0307  00D6               	movwf	mergeGroup1@accum+1
  7629  0308  0024               	movlb	4	; select bank4
  7630  0309  086E               	movf	merger@accum^(0+512),w
  7631  030A  0020               	movlb	0	; select bank0
  7632  030B  00D5               	movwf	mergeGroup1@accum
  7633  030C  300D               	movlw	13
  7634  030D  319B  23CE  3180   	fcall	_mergeGroup1
  7635  0310  0020               	movlb	0	; select bank0
  7636  0311  00E3               	movwf	??_merger
  7637  0312  01E4               	clrf	??_merger+1
  7638  0313  0863               	movf	??_merger,w
  7639  0314  0024               	movlb	4	; select bank4
  7640  0315  00EE               	movwf	merger@accum^(0+512)
  7641  0316  0020               	movlb	0	; select bank0
  7642  0317  0864               	movf	??_merger+1,w
  7643  0318  0024               	movlb	4	; select bank4
  7644  0319  00EF               	movwf	(merger@accum+1)^(0+512)
  7645  031A                     l7727:
  7646                           
  7647                           ;main.c: 473:     accum = mergeGroup1(14, accum);
  7648  031A  086F               	movf	(merger@accum+1)^(0+512),w
  7649  031B  0020               	movlb	0	; select bank0
  7650  031C  00D6               	movwf	mergeGroup1@accum+1
  7651  031D  0024               	movlb	4	; select bank4
  7652  031E  086E               	movf	merger@accum^(0+512),w
  7653  031F  0020               	movlb	0	; select bank0
  7654  0320  00D5               	movwf	mergeGroup1@accum
  7655  0321  300E               	movlw	14
  7656  0322  319B  23CE  3180   	fcall	_mergeGroup1
  7657  0325  0020               	movlb	0	; select bank0
  7658  0326  00E3               	movwf	??_merger
  7659  0327  01E4               	clrf	??_merger+1
  7660  0328  0863               	movf	??_merger,w
  7661  0329  0024               	movlb	4	; select bank4
  7662  032A  00EE               	movwf	merger@accum^(0+512)
  7663  032B  0020               	movlb	0	; select bank0
  7664  032C  0864               	movf	??_merger+1,w
  7665  032D  0024               	movlb	4	; select bank4
  7666  032E  00EF               	movwf	(merger@accum+1)^(0+512)
  7667  032F                     l7729:
  7668                           
  7669                           ;main.c: 474:     accum = 0;
  7670  032F  01EE               	clrf	merger@accum^(0+512)
  7671  0330  01EF               	clrf	(merger@accum+1)^(0+512)
  7672  0331                     l7731:
  7673                           
  7674                           ;main.c: 475:     accum = mergeGroup2(16, accum);
  7675  0331  086F               	movf	(merger@accum+1)^(0+512),w
  7676  0332  0020               	movlb	0	; select bank0
  7677  0333  00D6               	movwf	mergeGroup2@accum+1
  7678  0334  0024               	movlb	4	; select bank4
  7679  0335  086E               	movf	merger@accum^(0+512),w
  7680  0336  0020               	movlb	0	; select bank0
  7681  0337  00D5               	movwf	mergeGroup2@accum
  7682  0338  3010               	movlw	16
  7683  0339  319C  2438  3180   	fcall	_mergeGroup2
  7684  033C  0020               	movlb	0	; select bank0
  7685  033D  00E3               	movwf	??_merger
  7686  033E  01E4               	clrf	??_merger+1
  7687  033F  0863               	movf	??_merger,w
  7688  0340  0024               	movlb	4	; select bank4
  7689  0341  00EE               	movwf	merger@accum^(0+512)
  7690  0342  0020               	movlb	0	; select bank0
  7691  0343  0864               	movf	??_merger+1,w
  7692  0344  0024               	movlb	4	; select bank4
  7693  0345  00EF               	movwf	(merger@accum+1)^(0+512)
  7694  0346                     l7733:
  7695                           
  7696                           ;main.c: 476:     accum = mergeGroup2(15, accum);
  7697  0346  086F               	movf	(merger@accum+1)^(0+512),w
  7698  0347  0020               	movlb	0	; select bank0
  7699  0348  00D6               	movwf	mergeGroup2@accum+1
  7700  0349  0024               	movlb	4	; select bank4
  7701  034A  086E               	movf	merger@accum^(0+512),w
  7702  034B  0020               	movlb	0	; select bank0
  7703  034C  00D5               	movwf	mergeGroup2@accum
  7704  034D  300F               	movlw	15
  7705  034E  319C  2438  3180   	fcall	_mergeGroup2
  7706  0351  0020               	movlb	0	; select bank0
  7707  0352  00E3               	movwf	??_merger
  7708  0353  01E4               	clrf	??_merger+1
  7709  0354  0863               	movf	??_merger,w
  7710  0355  0024               	movlb	4	; select bank4
  7711  0356  00EE               	movwf	merger@accum^(0+512)
  7712  0357  0020               	movlb	0	; select bank0
  7713  0358  0864               	movf	??_merger+1,w
  7714  0359  0024               	movlb	4	; select bank4
  7715  035A  00EF               	movwf	(merger@accum+1)^(0+512)
  7716  035B                     l7735:
  7717                           
  7718                           ;main.c: 477:     accum = mergeGroup2(17, accum);
  7719  035B  086F               	movf	(merger@accum+1)^(0+512),w
  7720  035C  0020               	movlb	0	; select bank0
  7721  035D  00D6               	movwf	mergeGroup2@accum+1
  7722  035E  0024               	movlb	4	; select bank4
  7723  035F  086E               	movf	merger@accum^(0+512),w
  7724  0360  0020               	movlb	0	; select bank0
  7725  0361  00D5               	movwf	mergeGroup2@accum
  7726  0362  3011               	movlw	17
  7727  0363  319C  2438  3180   	fcall	_mergeGroup2
  7728  0366  0020               	movlb	0	; select bank0
  7729  0367  00E3               	movwf	??_merger
  7730  0368  01E4               	clrf	??_merger+1
  7731  0369  0863               	movf	??_merger,w
  7732  036A  0024               	movlb	4	; select bank4
  7733  036B  00EE               	movwf	merger@accum^(0+512)
  7734  036C  0020               	movlb	0	; select bank0
  7735  036D  0864               	movf	??_merger+1,w
  7736  036E  0024               	movlb	4	; select bank4
  7737  036F  00EF               	movwf	(merger@accum+1)^(0+512)
  7738  0370                     l7737:
  7739                           
  7740                           ;main.c: 478:     accum = mergeGroup2(18, accum);
  7741  0370  086F               	movf	(merger@accum+1)^(0+512),w
  7742  0371  0020               	movlb	0	; select bank0
  7743  0372  00D6               	movwf	mergeGroup2@accum+1
  7744  0373  0024               	movlb	4	; select bank4
  7745  0374  086E               	movf	merger@accum^(0+512),w
  7746  0375  0020               	movlb	0	; select bank0
  7747  0376  00D5               	movwf	mergeGroup2@accum
  7748  0377  3012               	movlw	18
  7749  0378  319C  2438  3180   	fcall	_mergeGroup2
  7750  037B  0020               	movlb	0	; select bank0
  7751  037C  00E3               	movwf	??_merger
  7752  037D  01E4               	clrf	??_merger+1
  7753  037E  0863               	movf	??_merger,w
  7754  037F  0024               	movlb	4	; select bank4
  7755  0380  00EE               	movwf	merger@accum^(0+512)
  7756  0381  0020               	movlb	0	; select bank0
  7757  0382  0864               	movf	??_merger+1,w
  7758  0383  0024               	movlb	4	; select bank4
  7759  0384  00EF               	movwf	(merger@accum+1)^(0+512)
  7760  0385                     l7739:
  7761                           
  7762                           ;main.c: 479:     accum = mergeBridge2(1, accum);
  7763  0385  3001               	movlw	1
  7764  0386  0020               	movlb	0	; select bank0
  7765  0387  00D1               	movwf	mergeBridge2@cantB
  7766  0388  3000               	movlw	0
  7767  0389  00D2               	movwf	mergeBridge2@cantB+1
  7768  038A  0024               	movlb	4	; select bank4
  7769  038B  086F               	movf	(merger@accum+1)^(0+512),w
  7770  038C  0020               	movlb	0	; select bank0
  7771  038D  00D4               	movwf	mergeBridge2@accum+1
  7772  038E  0024               	movlb	4	; select bank4
  7773  038F  086E               	movf	merger@accum^(0+512),w
  7774  0390  0020               	movlb	0	; select bank0
  7775  0391  00D3               	movwf	mergeBridge2@accum
  7776  0392  3188  2002  3180   	fcall	_mergeBridge2
  7777  0395  0020               	movlb	0	; select bank0
  7778  0396  00E3               	movwf	??_merger
  7779  0397  01E4               	clrf	??_merger+1
  7780  0398  0863               	movf	??_merger,w
  7781  0399  0024               	movlb	4	; select bank4
  7782  039A  00EE               	movwf	merger@accum^(0+512)
  7783  039B  0020               	movlb	0	; select bank0
  7784  039C  0864               	movf	??_merger+1,w
  7785  039D  0024               	movlb	4	; select bank4
  7786  039E  00EF               	movwf	(merger@accum+1)^(0+512)
  7787  039F                     l7741:
  7788                           
  7789                           ;main.c: 480:     accum = mergeBridge2(3, accum);
  7790  039F  3003               	movlw	3
  7791  03A0  0020               	movlb	0	; select bank0
  7792  03A1  00D1               	movwf	mergeBridge2@cantB
  7793  03A2  3000               	movlw	0
  7794  03A3  00D2               	movwf	mergeBridge2@cantB+1
  7795  03A4  0024               	movlb	4	; select bank4
  7796  03A5  086F               	movf	(merger@accum+1)^(0+512),w
  7797  03A6  0020               	movlb	0	; select bank0
  7798  03A7  00D4               	movwf	mergeBridge2@accum+1
  7799  03A8  0024               	movlb	4	; select bank4
  7800  03A9  086E               	movf	merger@accum^(0+512),w
  7801  03AA  0020               	movlb	0	; select bank0
  7802  03AB  00D3               	movwf	mergeBridge2@accum
  7803  03AC  3188  2002  3180   	fcall	_mergeBridge2
  7804  03AF  0020               	movlb	0	; select bank0
  7805  03B0  00E3               	movwf	??_merger
  7806  03B1  01E4               	clrf	??_merger+1
  7807  03B2  0863               	movf	??_merger,w
  7808  03B3  0024               	movlb	4	; select bank4
  7809  03B4  00EE               	movwf	merger@accum^(0+512)
  7810  03B5  0020               	movlb	0	; select bank0
  7811  03B6  0864               	movf	??_merger+1,w
  7812  03B7  0024               	movlb	4	; select bank4
  7813  03B8  00EF               	movwf	(merger@accum+1)^(0+512)
  7814  03B9                     l7743:
  7815                           
  7816                           ;main.c: 481:     accum = mergeGroup2(24, accum);
  7817  03B9  086F               	movf	(merger@accum+1)^(0+512),w
  7818  03BA  0020               	movlb	0	; select bank0
  7819  03BB  00D6               	movwf	mergeGroup2@accum+1
  7820  03BC  0024               	movlb	4	; select bank4
  7821  03BD  086E               	movf	merger@accum^(0+512),w
  7822  03BE  0020               	movlb	0	; select bank0
  7823  03BF  00D5               	movwf	mergeGroup2@accum
  7824  03C0  3018               	movlw	24
  7825  03C1  319C  2438  3180   	fcall	_mergeGroup2
  7826  03C4  0020               	movlb	0	; select bank0
  7827  03C5  00E3               	movwf	??_merger
  7828  03C6  01E4               	clrf	??_merger+1
  7829  03C7  0863               	movf	??_merger,w
  7830  03C8  0024               	movlb	4	; select bank4
  7831  03C9  00EE               	movwf	merger@accum^(0+512)
  7832  03CA  0020               	movlb	0	; select bank0
  7833  03CB  0864               	movf	??_merger+1,w
  7834  03CC  0024               	movlb	4	; select bank4
  7835  03CD  00EF               	movwf	(merger@accum+1)^(0+512)
  7836  03CE                     l7745:
  7837                           
  7838                           ;main.c: 482:     accum = mergeBridge2(6, accum);
  7839  03CE  3006               	movlw	6
  7840  03CF  0020               	movlb	0	; select bank0
  7841  03D0  00D1               	movwf	mergeBridge2@cantB
  7842  03D1  3000               	movlw	0
  7843  03D2  00D2               	movwf	mergeBridge2@cantB+1
  7844  03D3  0024               	movlb	4	; select bank4
  7845  03D4  086F               	movf	(merger@accum+1)^(0+512),w
  7846  03D5  0020               	movlb	0	; select bank0
  7847  03D6  00D4               	movwf	mergeBridge2@accum+1
  7848  03D7  0024               	movlb	4	; select bank4
  7849  03D8  086E               	movf	merger@accum^(0+512),w
  7850  03D9  0020               	movlb	0	; select bank0
  7851  03DA  00D3               	movwf	mergeBridge2@accum
  7852  03DB  3188  2002  3180   	fcall	_mergeBridge2
  7853  03DE  0020               	movlb	0	; select bank0
  7854  03DF  00E3               	movwf	??_merger
  7855  03E0  01E4               	clrf	??_merger+1
  7856  03E1  0863               	movf	??_merger,w
  7857  03E2  0024               	movlb	4	; select bank4
  7858  03E3  00EE               	movwf	merger@accum^(0+512)
  7859  03E4  0020               	movlb	0	; select bank0
  7860  03E5  0864               	movf	??_merger+1,w
  7861  03E6  0024               	movlb	4	; select bank4
  7862  03E7  00EF               	movwf	(merger@accum+1)^(0+512)
  7863  03E8                     l7747:
  7864                           
  7865                           ;main.c: 483:     accum = mergeGroup2(26, accum);
  7866  03E8  086F               	movf	(merger@accum+1)^(0+512),w
  7867  03E9  0020               	movlb	0	; select bank0
  7868  03EA  00D6               	movwf	mergeGroup2@accum+1
  7869  03EB  0024               	movlb	4	; select bank4
  7870  03EC  086E               	movf	merger@accum^(0+512),w
  7871  03ED  0020               	movlb	0	; select bank0
  7872  03EE  00D5               	movwf	mergeGroup2@accum
  7873  03EF  301A               	movlw	26
  7874  03F0  319C  2438  3180   	fcall	_mergeGroup2
  7875  03F3  0020               	movlb	0	; select bank0
  7876  03F4  00E3               	movwf	??_merger
  7877  03F5  01E4               	clrf	??_merger+1
  7878  03F6  0863               	movf	??_merger,w
  7879  03F7  0024               	movlb	4	; select bank4
  7880  03F8  00EE               	movwf	merger@accum^(0+512)
  7881  03F9  0020               	movlb	0	; select bank0
  7882  03FA  0864               	movf	??_merger+1,w
  7883  03FB  0024               	movlb	4	; select bank4
  7884  03FC  00EF               	movwf	(merger@accum+1)^(0+512)
  7885  03FD                     l7749:
  7886                           
  7887                           ;main.c: 484:     accum = mergeBridge2(3, accum);
  7888  03FD  3003               	movlw	3
  7889  03FE  0020               	movlb	0	; select bank0
  7890  03FF  00D1               	movwf	mergeBridge2@cantB
  7891  0400  3000               	movlw	0
  7892  0401  00D2               	movwf	mergeBridge2@cantB+1
  7893  0402  0024               	movlb	4	; select bank4
  7894  0403  086F               	movf	(merger@accum+1)^(0+512),w
  7895  0404  0020               	movlb	0	; select bank0
  7896  0405  00D4               	movwf	mergeBridge2@accum+1
  7897  0406  0024               	movlb	4	; select bank4
  7898  0407  086E               	movf	merger@accum^(0+512),w
  7899  0408  0020               	movlb	0	; select bank0
  7900  0409  00D3               	movwf	mergeBridge2@accum
  7901  040A  3188  2002  3180   	fcall	_mergeBridge2
  7902  040D  0020               	movlb	0	; select bank0
  7903  040E  00E3               	movwf	??_merger
  7904  040F  01E4               	clrf	??_merger+1
  7905  0410  0863               	movf	??_merger,w
  7906  0411  0024               	movlb	4	; select bank4
  7907  0412  00EE               	movwf	merger@accum^(0+512)
  7908  0413  0020               	movlb	0	; select bank0
  7909  0414  0864               	movf	??_merger+1,w
  7910  0415  0024               	movlb	4	; select bank4
  7911  0416  00EF               	movwf	(merger@accum+1)^(0+512)
  7912  0417                     l7751:
  7913                           
  7914                           ;main.c: 485:     accum = mergeGroup2(28, accum);
  7915  0417  086F               	movf	(merger@accum+1)^(0+512),w
  7916  0418  0020               	movlb	0	; select bank0
  7917  0419  00D6               	movwf	mergeGroup2@accum+1
  7918  041A  0024               	movlb	4	; select bank4
  7919  041B  086E               	movf	merger@accum^(0+512),w
  7920  041C  0020               	movlb	0	; select bank0
  7921  041D  00D5               	movwf	mergeGroup2@accum
  7922  041E  301C               	movlw	28
  7923  041F  319C  2438  3180   	fcall	_mergeGroup2
  7924  0422  0020               	movlb	0	; select bank0
  7925  0423  00E3               	movwf	??_merger
  7926  0424  01E4               	clrf	??_merger+1
  7927  0425  0863               	movf	??_merger,w
  7928  0426  0024               	movlb	4	; select bank4
  7929  0427  00EE               	movwf	merger@accum^(0+512)
  7930  0428  0020               	movlb	0	; select bank0
  7931  0429  0864               	movf	??_merger+1,w
  7932  042A  0024               	movlb	4	; select bank4
  7933  042B  00EF               	movwf	(merger@accum+1)^(0+512)
  7934  042C                     l7753:
  7935                           
  7936                           ;main.c: 486:     accum = mergeBridge2(1, accum);
  7937  042C  3001               	movlw	1
  7938  042D  0020               	movlb	0	; select bank0
  7939  042E  00D1               	movwf	mergeBridge2@cantB
  7940  042F  3000               	movlw	0
  7941  0430  00D2               	movwf	mergeBridge2@cantB+1
  7942  0431  0024               	movlb	4	; select bank4
  7943  0432  086F               	movf	(merger@accum+1)^(0+512),w
  7944  0433  0020               	movlb	0	; select bank0
  7945  0434  00D4               	movwf	mergeBridge2@accum+1
  7946  0435  0024               	movlb	4	; select bank4
  7947  0436  086E               	movf	merger@accum^(0+512),w
  7948  0437  0020               	movlb	0	; select bank0
  7949  0438  00D3               	movwf	mergeBridge2@accum
  7950  0439  3188  2002  3180   	fcall	_mergeBridge2
  7951  043C  0020               	movlb	0	; select bank0
  7952  043D  00E3               	movwf	??_merger
  7953  043E  01E4               	clrf	??_merger+1
  7954  043F  0863               	movf	??_merger,w
  7955  0440  0024               	movlb	4	; select bank4
  7956  0441  00EE               	movwf	merger@accum^(0+512)
  7957  0442  0020               	movlb	0	; select bank0
  7958  0443  0864               	movf	??_merger+1,w
  7959  0444  0024               	movlb	4	; select bank4
  7960  0445  00EF               	movwf	(merger@accum+1)^(0+512)
  7961  0446                     l7755:
  7962                           
  7963                           ;main.c: 487:     accum = mergeBridge2(10, accum);
  7964  0446  300A               	movlw	10
  7965  0447  0020               	movlb	0	; select bank0
  7966  0448  00D1               	movwf	mergeBridge2@cantB
  7967  0449  3000               	movlw	0
  7968  044A  00D2               	movwf	mergeBridge2@cantB+1
  7969  044B  0024               	movlb	4	; select bank4
  7970  044C  086F               	movf	(merger@accum+1)^(0+512),w
  7971  044D  0020               	movlb	0	; select bank0
  7972  044E  00D4               	movwf	mergeBridge2@accum+1
  7973  044F  0024               	movlb	4	; select bank4
  7974  0450  086E               	movf	merger@accum^(0+512),w
  7975  0451  0020               	movlb	0	; select bank0
  7976  0452  00D3               	movwf	mergeBridge2@accum
  7977  0453  3188  2002  3180   	fcall	_mergeBridge2
  7978  0456  0020               	movlb	0	; select bank0
  7979  0457  00E3               	movwf	??_merger
  7980  0458  01E4               	clrf	??_merger+1
  7981  0459  0863               	movf	??_merger,w
  7982  045A  0024               	movlb	4	; select bank4
  7983  045B  00EE               	movwf	merger@accum^(0+512)
  7984  045C  0020               	movlb	0	; select bank0
  7985  045D  0864               	movf	??_merger+1,w
  7986  045E  0024               	movlb	4	; select bank4
  7987  045F  00EF               	movwf	(merger@accum+1)^(0+512)
  7988  0460                     l7757:
  7989                           
  7990                           ;main.c: 488:     accum = mergeGroup2(23, accum);
  7991  0460  086F               	movf	(merger@accum+1)^(0+512),w
  7992  0461  0020               	movlb	0	; select bank0
  7993  0462  00D6               	movwf	mergeGroup2@accum+1
  7994  0463  0024               	movlb	4	; select bank4
  7995  0464  086E               	movf	merger@accum^(0+512),w
  7996  0465  0020               	movlb	0	; select bank0
  7997  0466  00D5               	movwf	mergeGroup2@accum
  7998  0467  3017               	movlw	23
  7999  0468  319C  2438  3180   	fcall	_mergeGroup2
  8000  046B  0020               	movlb	0	; select bank0
  8001  046C  00E3               	movwf	??_merger
  8002  046D  01E4               	clrf	??_merger+1
  8003  046E  0863               	movf	??_merger,w
  8004  046F  0024               	movlb	4	; select bank4
  8005  0470  00EE               	movwf	merger@accum^(0+512)
  8006  0471  0020               	movlb	0	; select bank0
  8007  0472  0864               	movf	??_merger+1,w
  8008  0473  0024               	movlb	4	; select bank4
  8009  0474  00EF               	movwf	(merger@accum+1)^(0+512)
  8010  0475                     l7759:
  8011                           
  8012                           ;main.c: 489:     accum = mergeBridge2(6, accum);
  8013  0475  3006               	movlw	6
  8014  0476  0020               	movlb	0	; select bank0
  8015  0477  00D1               	movwf	mergeBridge2@cantB
  8016  0478  3000               	movlw	0
  8017  0479  00D2               	movwf	mergeBridge2@cantB+1
  8018  047A  0024               	movlb	4	; select bank4
  8019  047B  086F               	movf	(merger@accum+1)^(0+512),w
  8020  047C  0020               	movlb	0	; select bank0
  8021  047D  00D4               	movwf	mergeBridge2@accum+1
  8022  047E  0024               	movlb	4	; select bank4
  8023  047F  086E               	movf	merger@accum^(0+512),w
  8024  0480  0020               	movlb	0	; select bank0
  8025  0481  00D3               	movwf	mergeBridge2@accum
  8026  0482  3188  2002  3180   	fcall	_mergeBridge2
  8027  0485  0020               	movlb	0	; select bank0
  8028  0486  00E3               	movwf	??_merger
  8029  0487  01E4               	clrf	??_merger+1
  8030  0488  0863               	movf	??_merger,w
  8031  0489  0024               	movlb	4	; select bank4
  8032  048A  00EE               	movwf	merger@accum^(0+512)
  8033  048B  0020               	movlb	0	; select bank0
  8034  048C  0864               	movf	??_merger+1,w
  8035  048D  0024               	movlb	4	; select bank4
  8036  048E  00EF               	movwf	(merger@accum+1)^(0+512)
  8037  048F                     l7761:
  8038                           
  8039                           ;main.c: 490:     accum = mergeGroup2(25, accum);
  8040  048F  086F               	movf	(merger@accum+1)^(0+512),w
  8041  0490  0020               	movlb	0	; select bank0
  8042  0491  00D6               	movwf	mergeGroup2@accum+1
  8043  0492  0024               	movlb	4	; select bank4
  8044  0493  086E               	movf	merger@accum^(0+512),w
  8045  0494  0020               	movlb	0	; select bank0
  8046  0495  00D5               	movwf	mergeGroup2@accum
  8047  0496  3019               	movlw	25
  8048  0497  319C  2438  3180   	fcall	_mergeGroup2
  8049  049A  0020               	movlb	0	; select bank0
  8050  049B  00E3               	movwf	??_merger
  8051  049C  01E4               	clrf	??_merger+1
  8052  049D  0863               	movf	??_merger,w
  8053  049E  0024               	movlb	4	; select bank4
  8054  049F  00EE               	movwf	merger@accum^(0+512)
  8055  04A0  0020               	movlb	0	; select bank0
  8056  04A1  0864               	movf	??_merger+1,w
  8057  04A2  0024               	movlb	4	; select bank4
  8058  04A3  00EF               	movwf	(merger@accum+1)^(0+512)
  8059  04A4                     l7763:
  8060                           
  8061                           ;main.c: 491:     accum = mergeBridge2(3, accum);
  8062  04A4  3003               	movlw	3
  8063  04A5  0020               	movlb	0	; select bank0
  8064  04A6  00D1               	movwf	mergeBridge2@cantB
  8065  04A7  3000               	movlw	0
  8066  04A8  00D2               	movwf	mergeBridge2@cantB+1
  8067  04A9  0024               	movlb	4	; select bank4
  8068  04AA  086F               	movf	(merger@accum+1)^(0+512),w
  8069  04AB  0020               	movlb	0	; select bank0
  8070  04AC  00D4               	movwf	mergeBridge2@accum+1
  8071  04AD  0024               	movlb	4	; select bank4
  8072  04AE  086E               	movf	merger@accum^(0+512),w
  8073  04AF  0020               	movlb	0	; select bank0
  8074  04B0  00D3               	movwf	mergeBridge2@accum
  8075  04B1  3188  2002  3180   	fcall	_mergeBridge2
  8076  04B4  0020               	movlb	0	; select bank0
  8077  04B5  00E3               	movwf	??_merger
  8078  04B6  01E4               	clrf	??_merger+1
  8079  04B7  0863               	movf	??_merger,w
  8080  04B8  0024               	movlb	4	; select bank4
  8081  04B9  00EE               	movwf	merger@accum^(0+512)
  8082  04BA  0020               	movlb	0	; select bank0
  8083  04BB  0864               	movf	??_merger+1,w
  8084  04BC  0024               	movlb	4	; select bank4
  8085  04BD  00EF               	movwf	(merger@accum+1)^(0+512)
  8086  04BE                     l7765:
  8087                           
  8088                           ;main.c: 492:     accum = mergeGroup2(27, accum);
  8089  04BE  086F               	movf	(merger@accum+1)^(0+512),w
  8090  04BF  0020               	movlb	0	; select bank0
  8091  04C0  00D6               	movwf	mergeGroup2@accum+1
  8092  04C1  0024               	movlb	4	; select bank4
  8093  04C2  086E               	movf	merger@accum^(0+512),w
  8094  04C3  0020               	movlb	0	; select bank0
  8095  04C4  00D5               	movwf	mergeGroup2@accum
  8096  04C5  301B               	movlw	27
  8097  04C6  319C  2438  3180   	fcall	_mergeGroup2
  8098  04C9  0020               	movlb	0	; select bank0
  8099  04CA  00E3               	movwf	??_merger
  8100  04CB  01E4               	clrf	??_merger+1
  8101  04CC  0863               	movf	??_merger,w
  8102  04CD  0024               	movlb	4	; select bank4
  8103  04CE  00EE               	movwf	merger@accum^(0+512)
  8104  04CF  0020               	movlb	0	; select bank0
  8105  04D0  0864               	movf	??_merger+1,w
  8106  04D1  0024               	movlb	4	; select bank4
  8107  04D2  00EF               	movwf	(merger@accum+1)^(0+512)
  8108  04D3                     l937:
  8109  04D3  0008               	return
  8110  04D4                     __end_of_merger:
  8111                           
  8112                           	psect	text8
  8113  1C38                     __ptext8:	
  8114 ;; *************** function _mergeGroup2 *****************
  8115 ;; Defined at:
  8116 ;;		line 409 in file "main.c"
  8117 ;; Parameters:    Size  Location     Type
  8118 ;;  groupID         1    wreg     unsigned char 
  8119 ;;  accum           2    8[BANK0 ] short 
  8120 ;; Auto vars:     Size  Location     Type
  8121 ;;  groupID         1   19[BANK0 ] unsigned char 
  8122 ;;  i               2   20[BANK0 ] short 
  8123 ;;  size            2   17[BANK0 ] short 
  8124 ;; Return value:  Size  Location     Type
  8125 ;;                  1    wreg      unsigned char 
  8126 ;; Registers used:
  8127 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8128 ;; Tracked objects:
  8129 ;;		On entry : 0/0
  8130 ;;		On exit  : 0/0
  8131 ;;		Unchanged: 0/0
  8132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8133 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8134 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8135 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8136 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8137 ;;Total ram usage:       14 bytes
  8138 ;; Hardware stack levels used: 1
  8139 ;; Hardware stack levels required when called: 12
  8140 ;; This function calls:
  8141 ;;		_valfromGroup
  8142 ;; This function is called by:
  8143 ;;		_merger
  8144 ;; This function uses a non-reentrant model
  8145 ;;
  8146                           
  8147                           
  8148                           ;psect for function _mergeGroup2
  8149  1C38                     _mergeGroup2:
  8150                           
  8151                           ;incstack = 0
  8152                           ; Regs used in _mergeGroup2: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8153                           ;mergeGroup2@groupID stored from wreg
  8154  1C38  0020               	movlb	0	; select bank0
  8155  1C39  00E0               	movwf	mergeGroup2@groupID
  8156  1C3A                     l7633:
  8157  1C3A                     l7635:
  8158                           
  8159                           ;main.c: 411:     short size = (short)groupSize[groupID];
  8160  1C3A  0860               	movf	mergeGroup2@groupID,w
  8161  1C3B  3E20               	addlw	(low (_groupSize| (0+768)))& (0+255)
  8162  1C3C  0086               	movwf	6
  8163  1C3D  3003               	movlw	3	; select bank6/7
  8164  1C3E  0087               	movwf	7
  8165  1C3F  0801               	movf	1,w
  8166  1C40  00D7               	movwf	??_mergeGroup2
  8167  1C41  01D8               	clrf	??_mergeGroup2+1
  8168  1C42  0857               	movf	??_mergeGroup2,w
  8169  1C43  00DE               	movwf	mergeGroup2@size
  8170  1C44  0858               	movf	??_mergeGroup2+1,w
  8171  1C45  00DF               	movwf	mergeGroup2@size+1
  8172  1C46                     l7637:
  8173                           
  8174                           ;main.c: 412:     valfromGroup(groupID);
  8175  1C46  0860               	movf	mergeGroup2@groupID,w
  8176  1C47  318A  2236  319C   	fcall	_valfromGroup
  8177  1C4A                     l7639:
  8178                           
  8179                           ;main.c: 413:     for(i = 0; i < size; i++) {
  8180  1C4A  0020               	movlb	0	; select bank0
  8181  1C4B  01E1               	clrf	mergeGroup2@i
  8182  1C4C  01E2               	clrf	mergeGroup2@i+1
  8183  1C4D  2C8D               	goto	l7645
  8184  1C4E                     l7641:
  8185                           
  8186                           ;main.c: 414:         dotValue2[i + accum] = groupBuff[i];
  8187  1C4E  0020               	movlb	0	; select bank0
  8188  1C4F  0861               	movf	mergeGroup2@i,w
  8189  1C50  3EA0               	addlw	(low (_groupBuff| (0+256)))& (0+255)
  8190  1C51  0086               	movwf	6
  8191  1C52  3001               	movlw	1	; select bank3/4
  8192  1C53  0087               	movwf	7
  8193  1C54  0801               	movf	1,w
  8194  1C55  00D7               	movwf	??_mergeGroup2
  8195  1C56  3046               	movlw	70
  8196  1C57  00D8               	movwf	??_mergeGroup2+1
  8197  1C58  3027               	movlw	39
  8198  1C59  00D9               	movwf	??_mergeGroup2+2
  8199  1C5A  0861               	movf	mergeGroup2@i,w
  8200  1C5B  0758               	addwf	??_mergeGroup2+1,w
  8201  1C5C  00DA               	movwf	??_mergeGroup2+3
  8202  1C5D  0862               	movf	mergeGroup2@i+1,w
  8203  1C5E  3D59               	addwfc	??_mergeGroup2+2,w
  8204  1C5F  00DB               	movwf	??_mergeGroup2+4
  8205  1C60  0855               	movf	mergeGroup2@accum,w
  8206  1C61  075A               	addwf	??_mergeGroup2+3,w
  8207  1C62  00DC               	movwf	??_mergeGroup2+5
  8208  1C63  0856               	movf	mergeGroup2@accum+1,w
  8209  1C64  3D5B               	addwfc	??_mergeGroup2+4,w
  8210  1C65  00DD               	movwf	??_mergeGroup2+6
  8211  1C66  085C               	movf	??_mergeGroup2+5,w
  8212  1C67  0086               	movwf	6
  8213  1C68  085D               	movf	??_mergeGroup2+6,w
  8214  1C69  0087               	movwf	7
  8215  1C6A  0857               	movf	??_mergeGroup2,w
  8216  1C6B  0081               	movwf	1
  8217                           
  8218                           ;main.c: 415:         dotColor2[i + accum] = groupColor[groupID];
  8219  1C6C  0860               	movf	mergeGroup2@groupID,w
  8220  1C6D  3EA0               	addlw	(low (_groupColor| (0+768)))& (0+255)
  8221  1C6E  0086               	movwf	6
  8222  1C6F  3003               	movlw	3	; select bank7/8
  8223  1C70  0087               	movwf	7
  8224  1C71  0801               	movf	1,w
  8225  1C72  00D7               	movwf	??_mergeGroup2
  8226  1C73  309C               	movlw	156
  8227  1C74  00D8               	movwf	??_mergeGroup2+1
  8228  1C75  3026               	movlw	38
  8229  1C76  00D9               	movwf	??_mergeGroup2+2
  8230  1C77  0861               	movf	mergeGroup2@i,w
  8231  1C78  0758               	addwf	??_mergeGroup2+1,w
  8232  1C79  00DA               	movwf	??_mergeGroup2+3
  8233  1C7A  0862               	movf	mergeGroup2@i+1,w
  8234  1C7B  3D59               	addwfc	??_mergeGroup2+2,w
  8235  1C7C  00DB               	movwf	??_mergeGroup2+4
  8236  1C7D  0855               	movf	mergeGroup2@accum,w
  8237  1C7E  075A               	addwf	??_mergeGroup2+3,w
  8238  1C7F  00DC               	movwf	??_mergeGroup2+5
  8239  1C80  0856               	movf	mergeGroup2@accum+1,w
  8240  1C81  3D5B               	addwfc	??_mergeGroup2+4,w
  8241  1C82  00DD               	movwf	??_mergeGroup2+6
  8242  1C83  085C               	movf	??_mergeGroup2+5,w
  8243  1C84  0086               	movwf	6
  8244  1C85  085D               	movf	??_mergeGroup2+6,w
  8245  1C86  0087               	movwf	7
  8246  1C87  0857               	movf	??_mergeGroup2,w
  8247  1C88  0081               	movwf	1
  8248  1C89                     l7643:
  8249                           
  8250                           ;main.c: 416:     }
  8251  1C89  3001               	movlw	1
  8252  1C8A  07E1               	addwf	mergeGroup2@i,f
  8253  1C8B  3000               	movlw	0
  8254  1C8C  3DE2               	addwfc	mergeGroup2@i+1,f
  8255  1C8D                     l7645:
  8256  1C8D  0862               	movf	mergeGroup2@i+1,w
  8257  1C8E  3A80               	xorlw	128
  8258  1C8F  00D7               	movwf	??_mergeGroup2
  8259  1C90  085F               	movf	mergeGroup2@size+1,w
  8260  1C91  3A80               	xorlw	128
  8261  1C92  0257               	subwf	??_mergeGroup2,w
  8262  1C93  1D03               	skipz
  8263  1C94  2C97               	goto	u6555
  8264  1C95  085E               	movf	mergeGroup2@size,w
  8265  1C96  0261               	subwf	mergeGroup2@i,w
  8266  1C97                     u6555:
  8267  1C97  1C03               	skipc
  8268  1C98  2C9A               	goto	u6551
  8269  1C99  2C9B               	goto	u6550
  8270  1C9A                     u6551:
  8271  1C9A  2C4E               	goto	l7641
  8272  1C9B                     u6550:
  8273  1C9B                     l7647:
  8274                           
  8275                           ;main.c: 417:     accum += size;
  8276  1C9B  0020               	movlb	0	; select bank0
  8277  1C9C  085E               	movf	mergeGroup2@size,w
  8278  1C9D  07D5               	addwf	mergeGroup2@accum,f
  8279  1C9E  085F               	movf	mergeGroup2@size+1,w
  8280  1C9F  3DD6               	addwfc	mergeGroup2@accum+1,f
  8281                           
  8282                           ;main.c: 418:     return accum;
  8283  1CA0  0855               	movf	mergeGroup2@accum,w
  8284  1CA1                     l919:
  8285  1CA1  0008               	return
  8286  1CA2                     __end_of_mergeGroup2:
  8287                           
  8288                           	psect	text9
  8289  1BCE                     __ptext9:	
  8290 ;; *************** function _mergeGroup1 *****************
  8291 ;; Defined at:
  8292 ;;		line 397 in file "main.c"
  8293 ;; Parameters:    Size  Location     Type
  8294 ;;  groupID         1    wreg     unsigned char 
  8295 ;;  accum           2    8[BANK0 ] short 
  8296 ;; Auto vars:     Size  Location     Type
  8297 ;;  groupID         1   19[BANK0 ] unsigned char 
  8298 ;;  i               2   20[BANK0 ] short 
  8299 ;;  size            2   17[BANK0 ] short 
  8300 ;; Return value:  Size  Location     Type
  8301 ;;                  1    wreg      unsigned char 
  8302 ;; Registers used:
  8303 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8304 ;; Tracked objects:
  8305 ;;		On entry : 0/0
  8306 ;;		On exit  : 0/0
  8307 ;;		Unchanged: 0/0
  8308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8309 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8310 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8311 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8312 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8313 ;;Total ram usage:       14 bytes
  8314 ;; Hardware stack levels used: 1
  8315 ;; Hardware stack levels required when called: 12
  8316 ;; This function calls:
  8317 ;;		_valfromGroup
  8318 ;; This function is called by:
  8319 ;;		_merger
  8320 ;; This function uses a non-reentrant model
  8321 ;;
  8322                           
  8323                           
  8324                           ;psect for function _mergeGroup1
  8325  1BCE                     _mergeGroup1:
  8326                           
  8327                           ;incstack = 0
  8328                           ; Regs used in _mergeGroup1: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8329                           ;mergeGroup1@groupID stored from wreg
  8330  1BCE  0020               	movlb	0	; select bank0
  8331  1BCF  00E0               	movwf	mergeGroup1@groupID
  8332  1BD0                     l7615:
  8333  1BD0                     l7617:
  8334                           
  8335                           ;main.c: 399:     short size = (short)groupSize[groupID];
  8336  1BD0  0860               	movf	mergeGroup1@groupID,w
  8337  1BD1  3E20               	addlw	(low (_groupSize| (0+768)))& (0+255)
  8338  1BD2  0086               	movwf	6
  8339  1BD3  3003               	movlw	3	; select bank6/7
  8340  1BD4  0087               	movwf	7
  8341  1BD5  0801               	movf	1,w
  8342  1BD6  00D7               	movwf	??_mergeGroup1
  8343  1BD7  01D8               	clrf	??_mergeGroup1+1
  8344  1BD8  0857               	movf	??_mergeGroup1,w
  8345  1BD9  00DE               	movwf	mergeGroup1@size
  8346  1BDA  0858               	movf	??_mergeGroup1+1,w
  8347  1BDB  00DF               	movwf	mergeGroup1@size+1
  8348  1BDC                     l7619:
  8349                           
  8350                           ;main.c: 400:     valfromGroup(groupID);
  8351  1BDC  0860               	movf	mergeGroup1@groupID,w
  8352  1BDD  318A  2236  319B   	fcall	_valfromGroup
  8353  1BE0                     l7621:
  8354                           
  8355                           ;main.c: 401:     for(i = 0; i < size; i++) {
  8356  1BE0  0020               	movlb	0	; select bank0
  8357  1BE1  01E1               	clrf	mergeGroup1@i
  8358  1BE2  01E2               	clrf	mergeGroup1@i+1
  8359  1BE3  2C23               	goto	l7627
  8360  1BE4                     l7623:
  8361                           
  8362                           ;main.c: 402:         dotValue1[i + accum] = groupBuff[i];
  8363  1BE4  0020               	movlb	0	; select bank0
  8364  1BE5  0861               	movf	mergeGroup1@i,w
  8365  1BE6  3EA0               	addlw	(low (_groupBuff| (0+256)))& (0+255)
  8366  1BE7  0086               	movwf	6
  8367  1BE8  3001               	movlw	1	; select bank3/4
  8368  1BE9  0087               	movwf	7
  8369  1BEA  0801               	movf	1,w
  8370  1BEB  00D7               	movwf	??_mergeGroup1
  8371  1BEC  309B               	movlw	155
  8372  1BED  00D8               	movwf	??_mergeGroup1+1
  8373  1BEE  3027               	movlw	39
  8374  1BEF  00D9               	movwf	??_mergeGroup1+2
  8375  1BF0  0861               	movf	mergeGroup1@i,w
  8376  1BF1  0758               	addwf	??_mergeGroup1+1,w
  8377  1BF2  00DA               	movwf	??_mergeGroup1+3
  8378  1BF3  0862               	movf	mergeGroup1@i+1,w
  8379  1BF4  3D59               	addwfc	??_mergeGroup1+2,w
  8380  1BF5  00DB               	movwf	??_mergeGroup1+4
  8381  1BF6  0855               	movf	mergeGroup1@accum,w
  8382  1BF7  075A               	addwf	??_mergeGroup1+3,w
  8383  1BF8  00DC               	movwf	??_mergeGroup1+5
  8384  1BF9  0856               	movf	mergeGroup1@accum+1,w
  8385  1BFA  3D5B               	addwfc	??_mergeGroup1+4,w
  8386  1BFB  00DD               	movwf	??_mergeGroup1+6
  8387  1BFC  085C               	movf	??_mergeGroup1+5,w
  8388  1BFD  0086               	movwf	6
  8389  1BFE  085D               	movf	??_mergeGroup1+6,w
  8390  1BFF  0087               	movwf	7
  8391  1C00  0857               	movf	??_mergeGroup1,w
  8392  1C01  0081               	movwf	1
  8393                           
  8394                           ;main.c: 403:         dotColor1[i + accum] = groupColor[groupID];
  8395  1C02  0860               	movf	mergeGroup1@groupID,w
  8396  1C03  3EA0               	addlw	(low (_groupColor| (0+768)))& (0+255)
  8397  1C04  0086               	movwf	6
  8398  1C05  3003               	movlw	3	; select bank7/8
  8399  1C06  0087               	movwf	7
  8400  1C07  0801               	movf	1,w
  8401  1C08  00D7               	movwf	??_mergeGroup1
  8402  1C09  30F1               	movlw	241
  8403  1C0A  00D8               	movwf	??_mergeGroup1+1
  8404  1C0B  3026               	movlw	38
  8405  1C0C  00D9               	movwf	??_mergeGroup1+2
  8406  1C0D  0861               	movf	mergeGroup1@i,w
  8407  1C0E  0758               	addwf	??_mergeGroup1+1,w
  8408  1C0F  00DA               	movwf	??_mergeGroup1+3
  8409  1C10  0862               	movf	mergeGroup1@i+1,w
  8410  1C11  3D59               	addwfc	??_mergeGroup1+2,w
  8411  1C12  00DB               	movwf	??_mergeGroup1+4
  8412  1C13  0855               	movf	mergeGroup1@accum,w
  8413  1C14  075A               	addwf	??_mergeGroup1+3,w
  8414  1C15  00DC               	movwf	??_mergeGroup1+5
  8415  1C16  0856               	movf	mergeGroup1@accum+1,w
  8416  1C17  3D5B               	addwfc	??_mergeGroup1+4,w
  8417  1C18  00DD               	movwf	??_mergeGroup1+6
  8418  1C19  085C               	movf	??_mergeGroup1+5,w
  8419  1C1A  0086               	movwf	6
  8420  1C1B  085D               	movf	??_mergeGroup1+6,w
  8421  1C1C  0087               	movwf	7
  8422  1C1D  0857               	movf	??_mergeGroup1,w
  8423  1C1E  0081               	movwf	1
  8424  1C1F                     l7625:
  8425                           
  8426                           ;main.c: 404:     }
  8427  1C1F  3001               	movlw	1
  8428  1C20  07E1               	addwf	mergeGroup1@i,f
  8429  1C21  3000               	movlw	0
  8430  1C22  3DE2               	addwfc	mergeGroup1@i+1,f
  8431  1C23                     l7627:
  8432  1C23  0862               	movf	mergeGroup1@i+1,w
  8433  1C24  3A80               	xorlw	128
  8434  1C25  00D7               	movwf	??_mergeGroup1
  8435  1C26  085F               	movf	mergeGroup1@size+1,w
  8436  1C27  3A80               	xorlw	128
  8437  1C28  0257               	subwf	??_mergeGroup1,w
  8438  1C29  1D03               	skipz
  8439  1C2A  2C2D               	goto	u6545
  8440  1C2B  085E               	movf	mergeGroup1@size,w
  8441  1C2C  0261               	subwf	mergeGroup1@i,w
  8442  1C2D                     u6545:
  8443  1C2D  1C03               	skipc
  8444  1C2E  2C30               	goto	u6541
  8445  1C2F  2C31               	goto	u6540
  8446  1C30                     u6541:
  8447  1C30  2BE4               	goto	l7623
  8448  1C31                     u6540:
  8449  1C31                     l7629:
  8450                           
  8451                           ;main.c: 405:     accum += size;
  8452  1C31  0020               	movlb	0	; select bank0
  8453  1C32  085E               	movf	mergeGroup1@size,w
  8454  1C33  07D5               	addwf	mergeGroup1@accum,f
  8455  1C34  085F               	movf	mergeGroup1@size+1,w
  8456  1C35  3DD6               	addwfc	mergeGroup1@accum+1,f
  8457                           
  8458                           ;main.c: 406:     return accum;
  8459  1C36  0855               	movf	mergeGroup1@accum,w
  8460  1C37                     l913:
  8461  1C37  0008               	return
  8462  1C38                     __end_of_mergeGroup1:
  8463                           
  8464                           	psect	text10
  8465  0A36                     __ptext10:	
  8466 ;; *************** function _valfromGroup *****************
  8467 ;; Defined at:
  8468 ;;		line 206 in file "main.c"
  8469 ;; Parameters:    Size  Location     Type
  8470 ;;  groupID         1    wreg     unsigned char 
  8471 ;; Auto vars:     Size  Location     Type
  8472 ;;  groupID         1    6[BANK0 ] unsigned char 
  8473 ;;  i               1    7[BANK0 ] unsigned char 
  8474 ;; Return value:  Size  Location     Type
  8475 ;;                  1    wreg      void 
  8476 ;; Registers used:
  8477 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  8478 ;; Tracked objects:
  8479 ;;		On entry : 0/0
  8480 ;;		On exit  : 0/0
  8481 ;;		Unchanged: 0/0
  8482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8484 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8485 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8486 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8487 ;;Total ram usage:        4 bytes
  8488 ;; Hardware stack levels used: 1
  8489 ;; Hardware stack levels required when called: 11
  8490 ;; This function calls:
  8491 ;;		Nothing
  8492 ;; This function is called by:
  8493 ;;		_mergeGroup1
  8494 ;;		_mergeGroup2
  8495 ;; This function uses a non-reentrant model
  8496 ;;
  8497                           
  8498                           
  8499                           ;psect for function _valfromGroup
  8500  0A36                     _valfromGroup:
  8501                           
  8502                           ;incstack = 0
  8503                           ; Regs used in _valfromGroup: [wreg-fsr1h+status,2+status,0]
  8504                           ;valfromGroup@groupID stored from wreg
  8505  0A36  0020               	movlb	0	; select bank0
  8506  0A37  00D3               	movwf	valfromGroup@groupID
  8507  0A38                     l7543:
  8508                           
  8509                           ;main.c: 207:     char i = 0;
  8510  0A38  01D4               	clrf	valfromGroup@i
  8511                           
  8512                           ;main.c: 208:     for(i = 0; i < groupSize[groupID]; i++) {
  8513  0A39  01D4               	clrf	valfromGroup@i
  8514  0A3A  2C50               	goto	l7609
  8515  0A3B                     l7545:
  8516                           
  8517                           ;main.c: 211:             groupBuff[i] = State[i];
  8518  0A3B  0854               	movf	valfromGroup@i,w
  8519  0A3C  3E36               	addlw	(low (_State| 0))& (0+255)
  8520  0A3D  0086               	movwf	6
  8521  0A3E  0187               	clrf	7
  8522  0A3F  0801               	movf	1,w
  8523  0A40  00D1               	movwf	??_valfromGroup
  8524  0A41  0854               	movf	valfromGroup@i,w
  8525  0A42  3EA0               	addlw	(low (_groupBuff| (0+256)))& (0+255)
  8526  0A43  0086               	movwf	6
  8527  0A44  3001               	movlw	1	; select bank3/4
  8528  0A45  0087               	movwf	7
  8529  0A46  0851               	movf	??_valfromGroup,w
  8530  0A47  0081               	movwf	1
  8531                           
  8532                           ;main.c: 212:             break;
  8533  0A48  2C4C               	goto	l7607
  8534  0A49                     l7547:
  8535                           
  8536                           ;main.c: 214:             groupBuff[i] = Mask[i];
  8537  0A49  0854               	movf	valfromGroup@i,w
  8538  0A4A  3EA0               	addlw	(low (_Mask| (0+512)))& (0+255)
  8539  0A4B  0086               	movwf	6
  8540  0A4C  3002               	movlw	2	; select bank5/6
  8541  0A4D  0087               	movwf	7
  8542  0A4E  0801               	movf	1,w
  8543  0A4F  00D1               	movwf	??_valfromGroup
  8544  0A50  0854               	movf	valfromGroup@i,w
  8545  0A51  3EA0               	addlw	(low (_groupBuff| (0+256)))& (0+255)
  8546  0A52  0086               	movwf	6
  8547  0A53  3001               	movlw	1	; select bank3/4
  8548  0A54  0087               	movwf	7
  8549  0A55  0851               	movf	??_valfromGroup,w
  8550  0A56  0081               	movwf	1
  8551                           
  8552                           ;main.c: 215:             break;
  8553  0A57  2C4C               	goto	l7607
  8554  0A58                     l7549:
  8555                           
  8556                           ;main.c: 217:             groupBuff[i] = Core[i];
  8557  0A58  0854               	movf	valfromGroup@i,w
  8558  0A59  3EB0               	addlw	(low (_Core| (0+512)))& (0+255)
  8559  0A5A  0086               	movwf	6
  8560  0A5B  3002               	movlw	2	; select bank5/6
  8561  0A5C  0087               	movwf	7
  8562  0A5D  0801               	movf	1,w
  8563  0A5E  00D1               	movwf	??_valfromGroup
  8564  0A5F  0854               	movf	valfromGroup@i,w
  8565  0A60  3EA0               	addlw	(low (_groupBuff| (0+256)))& (0+255)
  8566  0A61  0086               	movwf	6
  8567  0A62  3001               	movlw	1	; select bank3/4
  8568  0A63  0087               	movwf	7
  8569  0A64  0851               	movf	??_valfromGroup,w
  8570  0A65  0081               	movwf	1
  8571                           
  8572                           ;main.c: 218:             break;
  8573  0A66  2C4C               	goto	l7607
  8574  0A67                     l7551:
  8575                           
  8576                           ;main.c: 220:             groupBuff[i] = ShouldFL[i];
  8577  0A67  0854               	movf	valfromGroup@i,w
  8578  0A68  3EB4               	addlw	(low (_ShouldFL| 0))& (0+255)
  8579  0A69  0086               	movwf	6
  8580  0A6A  0187               	clrf	7
  8581  0A6B  0801               	movf	1,w
  8582  0A6C  00D1               	movwf	??_valfromGroup
  8583  0A6D  0854               	movf	valfromGroup@i,w
  8584  0A6E  3EA0               	addlw	(low (_groupBuff| (0+256)))& (0+255)
  8585  0A6F  0086               	movwf	6
  8586  0A70  3001               	movlw	1	; select bank3/4
  8587  0A71  0087               	movwf	7
  8588  0A72  0851               	movf	??_valfromGroup,w
  8589  0A73  0081               	movwf	1
  8590                           
  8591                           ;main.c: 221:             break;
  8592  0A74  2C4C               	goto	l7607
  8593  0A75                     l7553:
  8594                           
  8595                           ;main.c: 223:             groupBuff[i] = ShouldFR[i];
  8596  0A75  0854               	movf	valfromGroup@i,w
  8597  0A76  3E6B               	addlw	(low (_ShouldFR| (0+256)))& (0+255)
  8598  0A77  0086               	movwf	6
  8599  0A78  3001               	movlw	1	; select bank2/3
  8600  0A79  0087               	movwf	7
  8601  0A7A  0801               	movf	1,w
  8602  0A7B  00D1               	movwf	??_valfromGroup
  8603  0A7C  0854               	movf	valfromGroup@i,w
  8604  0A7D  3EA0               	addlw	(low (_groupBuff| (0+256)))& (0+255)
  8605  0A7E  0086               	movwf	6
  8606  0A7F  3001               	movlw	1	; select bank3/4
  8607  0A80  0087               	movwf	7
  8608  0A81  0851               	movf	??_valfromGroup,w
  8609  0A82  0081               	movwf	1
  8610                           
  8611                           ;main.c: 224:             break;
  8612  0A83  2C4C               	goto	l7607
  8613  0A84                     l7555:
  8614                           
  8615                           ;main.c: 226:             groupBuff[i] = ShouldDL[i];
  8616  0A84  0854               	movf	valfromGroup@i,w
  8617  0A85  3E68               	addlw	(low (_ShouldDL| (0+256)))& (0+255)
  8618  0A86  0086               	movwf	6
  8619  0A87  3001               	movlw	1	; select bank2/3
  8620  0A88  0087               	movwf	7
  8621  0A89  0801               	movf	1,w
  8622  0A8A  00D1               	movwf	??_valfromGroup
  8623  0A8B  0854               	movf	valfromGroup@i,w
  8624  0A8C  3EA0               	addlw	(low (_groupBuff| (0+256)))& (0+255)
  8625  0A8D  0086               	movwf	6
  8626  0A8E  3001               	movlw	1	; select bank3/4
  8627  0A8F  0087               	movwf	7
  8628  0A90  0851               	movf	??_valfromGroup,w
  8629  0A91  0081               	movwf	1
  8630                           
  8631                           ;main.c: 227:             break;
  8632  0A92  2C4C               	goto	l7607
  8633  0A93                     l7557:
  8634                           
  8635                           ;main.c: 229:             groupBuff[i] = ShouldDR[i];
  8636  0A93  0854               	movf	valfromGroup@i,w
  8637  0A94  3E65               	addlw	(low (_ShouldDR| (0+256)))& (0+255)
  8638  0A95  0086               	movwf	6
  8639  0A96  3001               	movlw	1	; select bank2/3
  8640  0A97  0087               	movwf	7
  8641  0A98  0801               	movf	1,w
  8642  0A99  00D1               	movwf	??_valfromGroup
  8643  0A9A  0854               	movf	valfromGroup@i,w
  8644  0A9B  3EA0               	addlw	(low (_groupBuff| (0+256)))& (0+255)
  8645  0A9C  0086               	movwf	6
  8646  0A9D  3001               	movlw	1	; select bank3/4
  8647  0A9E  0087               	movwf	7
  8648  0A9F  0851               	movf	??_valfromGroup,w
  8649  0AA0  0081               	movwf	1
  8650                           
  8651                           ;main.c: 230:             break;
  8652  0AA1  2C4C               	goto	l7607
  8653  0AA2                     l7559:
  8654                           
  8655                           ;main.c: 232:             groupBuff[i] = ShouldBL[i];
  8656  0AA2  0854               	movf	valfromGroup@i,w
  8657  0AA3  3E62               	addlw	(low (_ShouldBL| (0+256)))& (0+255)
  8658  0AA4  0086               	movwf	6
  8659  0AA5  3001               	movlw	1	; select bank2/3
  8660  0AA6  0087               	movwf	7
  8661  0AA7  0801               	movf	1,w
  8662  0AA8  00D1               	movwf	??_valfromGroup
  8663  0AA9  0854               	movf	valfromGroup@i,w
  8664  0AAA  3EA0               	addlw	(low (_groupBuff| (0+256)))& (0+255)
  8665  0AAB  0086               	movwf	6
  8666  0AAC  3001               	movlw	1	; select bank3/4
  8667  0AAD  0087               	movwf	7
  8668  0AAE  0851               	movf	??_valfromGroup,w
  8669  0AAF  0081               	movwf	1
  8670                           
  8671                           ;main.c: 233:             break;
  8672  0AB0  2C4C               	goto	l7607
  8673  0AB1                     l7561:
  8674                           
  8675                           ;main.c: 235:             groupBuff[i] = ShouldBR[i];
  8676  0AB1  0854               	movf	valfromGroup@i,w
  8677  0AB2  3E5F               	addlw	(low (_ShouldBR| (0+256)))& (0+255)
  8678  0AB3  0086               	movwf	6
  8679  0AB4  3001               	movlw	1	; select bank2/3
  8680  0AB5  0087               	movwf	7
  8681  0AB6  0801               	movf	1,w
  8682  0AB7  00D1               	movwf	??_valfromGroup
  8683  0AB8  0854               	movf	valfromGroup@i,w
  8684  0AB9  3EA0               	addlw	(low (_groupBuff| (0+256)))& (0+255)
  8685  0ABA  0086               	movwf	6
  8686  0ABB  3001               	movlw	1	; select bank3/4
  8687  0ABC  0087               	movwf	7
  8688  0ABD  0851               	movf	??_valfromGroup,w
  8689  0ABE  0081               	movwf	1
  8690                           
  8691                           ;main.c: 236:             break;
  8692  0ABF  2C4C               	goto	l7607
  8693  0AC0                     l7563:
  8694                           
  8695                           ;main.c: 238:             groupBuff[i] = NeckL[i];
  8696  0AC0  0854               	movf	valfromGroup@i,w
  8697  0AC1  3E5C               	addlw	(low (_NeckL| (0+256)))& (0+255)
  8698  0AC2  0086               	movwf	6
  8699  0AC3  3001               	movlw	1	; select bank2/3
  8700  0AC4  0087               	movwf	7
  8701  0AC5  0801               	movf	1,w
  8702  0AC6  00D1               	movwf	??_valfromGroup
  8703  0AC7  0854               	movf	valfromGroup@i,w
  8704  0AC8  3EA0               	addlw	(low (_groupBuff| (0+256)))& (0+255)
  8705  0AC9  0086               	movwf	6
  8706  0ACA  3001               	movlw	1	; select bank3/4
  8707  0ACB  0087               	movwf	7
  8708  0ACC  0851               	movf	??_valfromGroup,w
  8709  0ACD  0081               	movwf	1
  8710                           
  8711                           ;main.c: 239:             break;
  8712  0ACE  2C4C               	goto	l7607
  8713  0ACF                     l7565:
  8714                           
  8715                           ;main.c: 241:             groupBuff[i] = NeckR[i];
  8716  0ACF  0854               	movf	valfromGroup@i,w
  8717  0AD0  3E59               	addlw	(low (_NeckR| (0+256)))& (0+255)
  8718  0AD1  0086               	movwf	6
  8719  0AD2  3001               	movlw	1	; select bank2/3
  8720  0AD3  0087               	movwf	7
  8721  0AD4  0801               	movf	1,w
  8722  0AD5  00D1               	movwf	??_valfromGroup
  8723  0AD6  0854               	movf	valfromGroup@i,w
  8724  0AD7  3EA0               	addlw	(low (_groupBuff| (0+256)))& (0+255)
  8725  0AD8  0086               	movwf	6
  8726  0AD9  3001               	movlw	1	; select bank3/4
  8727  0ADA  0087               	movwf	7
  8728  0ADB  0851               	movf	??_valfromGroup,w
  8729  0ADC  0081               	movwf	1
  8730                           
  8731                           ;main.c: 242:             break;
  8732  0ADD  2C4C               	goto	l7607
  8733  0ADE                     l7567:
  8734                           
  8735                           ;main.c: 244:             groupBuff[i] = NeckBL[i];
  8736  0ADE  0854               	movf	valfromGroup@i,w
  8737  0ADF  3EC2               	addlw	(low (_NeckBL| (0+256)))& (0+255)
  8738  0AE0  0086               	movwf	6
  8739  0AE1  3001               	movlw	1	; select bank3/4
  8740  0AE2  0087               	movwf	7
  8741  0AE3  0801               	movf	1,w
  8742  0AE4  00D1               	movwf	??_valfromGroup
  8743  0AE5  0854               	movf	valfromGroup@i,w
  8744  0AE6  3EA0               	addlw	(low (_groupBuff| (0+256)))& (0+255)
  8745  0AE7  0086               	movwf	6
  8746  0AE8  3001               	movlw	1	; select bank3/4
  8747  0AE9  0087               	movwf	7
  8748  0AEA  0851               	movf	??_valfromGroup,w
  8749  0AEB  0081               	movwf	1
  8750                           
  8751                           ;main.c: 245:             break;
  8752  0AEC  2C4C               	goto	l7607
  8753  0AED                     l7569:
  8754                           
  8755                           ;main.c: 247:             groupBuff[i] = NeckBR[i];
  8756  0AED  0854               	movf	valfromGroup@i,w
  8757  0AEE  3EB0               	addlw	(low (_NeckBR| 0))& (0+255)
  8758  0AEF  0086               	movwf	6
  8759  0AF0  0187               	clrf	7
  8760  0AF1  0801               	movf	1,w
  8761  0AF2  00D1               	movwf	??_valfromGroup
  8762  0AF3  0854               	movf	valfromGroup@i,w
  8763  0AF4  3EA0               	addlw	(low (_groupBuff| (0+256)))& (0+255)
  8764  0AF5  0086               	movwf	6
  8765  0AF6  3001               	movlw	1	; select bank3/4
  8766  0AF7  0087               	movwf	7
  8767  0AF8  0851               	movf	??_valfromGroup,w
  8768  0AF9  0081               	movwf	1
  8769                           
  8770                           ;main.c: 248:             break;
  8771  0AFA  2C4C               	goto	l7607
  8772  0AFB                     l7571:
  8773                           
  8774                           ;main.c: 250:             groupBuff[i] = AbsUL[i];
  8775  0AFB  0854               	movf	valfromGroup@i,w
  8776  0AFC  3EBE               	addlw	(low (_AbsUL| (0+256)))& (0+255)
  8777  0AFD  0086               	movwf	6
  8778  0AFE  3001               	movlw	1	; select bank3/4
  8779  0AFF  0087               	movwf	7
  8780  0B00  0801               	movf	1,w
  8781  0B01  00D1               	movwf	??_valfromGroup
  8782  0B02  0854               	movf	valfromGroup@i,w
  8783  0B03  3EA0               	addlw	(low (_groupBuff| (0+256)))& (0+255)
  8784  0B04  0086               	movwf	6
  8785  0B05  3001               	movlw	1	; select bank3/4
  8786  0B06  0087               	movwf	7
  8787  0B07  0851               	movf	??_valfromGroup,w
  8788  0B08  0081               	movwf	1
  8789                           
  8790                           ;main.c: 251:             break;
  8791  0B09  2C4C               	goto	l7607
  8792  0B0A                     l7573:
  8793                           
  8794                           ;main.c: 253:             groupBuff[i] = AbsUR[i];
  8795  0B0A  0854               	movf	valfromGroup@i,w
  8796  0B0B  3EBA               	addlw	(low (_AbsUR| (0+256)))& (0+255)
  8797  0B0C  0086               	movwf	6
  8798  0B0D  3001               	movlw	1	; select bank3/4
  8799  0B0E  0087               	movwf	7
  8800  0B0F  0801               	movf	1,w
  8801  0B10  00D1               	movwf	??_valfromGroup
  8802  0B11  0854               	movf	valfromGroup@i,w
  8803  0B12  3EA0               	addlw	(low (_groupBuff| (0+256)))& (0+255)
  8804  0B13  0086               	movwf	6
  8805  0B14  3001               	movlw	1	; select bank3/4
  8806  0B15  0087               	movwf	7
  8807  0B16  0851               	movf	??_valfromGroup,w
  8808  0B17  0081               	movwf	1
  8809                           
  8810                           ;main.c: 254:             break;
  8811  0B18  2C4C               	goto	l7607
  8812  0B19                     l7575:
  8813                           
  8814                           ;main.c: 256:             groupBuff[i] = AbsML[i];
  8815  0B19  0854               	movf	valfromGroup@i,w
  8816  0B1A  3E56               	addlw	(low (_AbsML| (0+256)))& (0+255)
  8817  0B1B  0086               	movwf	6
  8818  0B1C  3001               	movlw	1	; select bank2/3
  8819  0B1D  0087               	movwf	7
  8820  0B1E  0801               	movf	1,w
  8821  0B1F  00D1               	movwf	??_valfromGroup
  8822  0B20  0854               	movf	valfromGroup@i,w
  8823  0B21  3EA0               	addlw	(low (_groupBuff| (0+256)))& (0+255)
  8824  0B22  0086               	movwf	6
  8825  0B23  3001               	movlw	1	; select bank3/4
  8826  0B24  0087               	movwf	7
  8827  0B25  0851               	movf	??_valfromGroup,w
  8828  0B26  0081               	movwf	1
  8829                           
  8830                           ;main.c: 257:             break;
  8831  0B27  2C4C               	goto	l7607
  8832  0B28                     l7577:
  8833                           
  8834                           ;main.c: 259:             groupBuff[i] = AbsMR[i];
  8835  0B28  0854               	movf	valfromGroup@i,w
  8836  0B29  3EDC               	addlw	(low (_AbsMR| (0+256)))& (0+255)
  8837  0B2A  0086               	movwf	6
  8838  0B2B  3001               	movlw	1	; select bank3/4
  8839  0B2C  0087               	movwf	7
  8840  0B2D  0801               	movf	1,w
  8841  0B2E  00D1               	movwf	??_valfromGroup
  8842  0B2F  0854               	movf	valfromGroup@i,w
  8843  0B30  3EA0               	addlw	(low (_groupBuff| (0+256)))& (0+255)
  8844  0B31  0086               	movwf	6
  8845  0B32  3001               	movlw	1	; select bank3/4
  8846  0B33  0087               	movwf	7
  8847  0B34  0851               	movf	??_valfromGroup,w
  8848  0B35  0081               	movwf	1
  8849                           
  8850                           ;main.c: 260:             break;
  8851  0B36  2C4C               	goto	l7607
  8852  0B37                     l7579:
  8853                           
  8854                           ;main.c: 262:             groupBuff[i] = AbsDL[i];
  8855  0B37  0854               	movf	valfromGroup@i,w
  8856  0B38  3ED9               	addlw	(low (_AbsDL| (0+256)))& (0+255)
  8857  0B39  0086               	movwf	6
  8858  0B3A  3001               	movlw	1	; select bank3/4
  8859  0B3B  0087               	movwf	7
  8860  0B3C  0801               	movf	1,w
  8861  0B3D  00D1               	movwf	??_valfromGroup
  8862  0B3E  0854               	movf	valfromGroup@i,w
  8863  0B3F  3EA0               	addlw	(low (_groupBuff| (0+256)))& (0+255)
  8864  0B40  0086               	movwf	6
  8865  0B41  3001               	movlw	1	; select bank3/4
  8866  0B42  0087               	movwf	7
  8867  0B43  0851               	movf	??_valfromGroup,w
  8868  0B44  0081               	movwf	1
  8869                           
  8870                           ;main.c: 263:             break;
  8871  0B45  2C4C               	goto	l7607
  8872  0B46                     l7581:
  8873                           
  8874                           ;main.c: 265:             groupBuff[i] = AbsDR[i];
  8875  0B46  0854               	movf	valfromGroup@i,w
  8876  0B47  3ED6               	addlw	(low (_AbsDR| (0+256)))& (0+255)
  8877  0B48  0086               	movwf	6
  8878  0B49  3001               	movlw	1	; select bank3/4
  8879  0B4A  0087               	movwf	7
  8880  0B4B  0801               	movf	1,w
  8881  0B4C  00D1               	movwf	??_valfromGroup
  8882  0B4D  0854               	movf	valfromGroup@i,w
  8883  0B4E  3EA0               	addlw	(low (_groupBuff| (0+256)))& (0+255)
  8884  0B4F  0086               	movwf	6
  8885  0B50  3001               	movlw	1	; select bank3/4
  8886  0B51  0087               	movwf	7
  8887  0B52  0851               	movf	??_valfromGroup,w
  8888  0B53  0081               	movwf	1
  8889                           
  8890                           ;main.c: 266:             break;
  8891  0B54  2C4C               	goto	l7607
  8892  0B55                     l7583:
  8893                           
  8894                           ;main.c: 268:             groupBuff[i] = BackUL[i];
  8895  0B55  0854               	movf	valfromGroup@i,w
  8896  0B56  3ED3               	addlw	(low (_BackUL| (0+256)))& (0+255)
  8897  0B57  0086               	movwf	6
  8898  0B58  3001               	movlw	1	; select bank3/4
  8899  0B59  0087               	movwf	7
  8900  0B5A  0801               	movf	1,w
  8901  0B5B  00D1               	movwf	??_valfromGroup
  8902  0B5C  0854               	movf	valfromGroup@i,w
  8903  0B5D  3EA0               	addlw	(low (_groupBuff| (0+256)))& (0+255)
  8904  0B5E  0086               	movwf	6
  8905  0B5F  3001               	movlw	1	; select bank3/4
  8906  0B60  0087               	movwf	7
  8907  0B61  0851               	movf	??_valfromGroup,w
  8908  0B62  0081               	movwf	1
  8909                           
  8910                           ;main.c: 269:             break;
  8911  0B63  2C4C               	goto	l7607
  8912  0B64                     l7585:
  8913                           
  8914                           ;main.c: 271:             groupBuff[i] = BackUR[i];
  8915  0B64  0854               	movf	valfromGroup@i,w
  8916  0B65  3ED0               	addlw	(low (_BackUR| (0+256)))& (0+255)
  8917  0B66  0086               	movwf	6
  8918  0B67  3001               	movlw	1	; select bank3/4
  8919  0B68  0087               	movwf	7
  8920  0B69  0801               	movf	1,w
  8921  0B6A  00D1               	movwf	??_valfromGroup
  8922  0B6B  0854               	movf	valfromGroup@i,w
  8923  0B6C  3EA0               	addlw	(low (_groupBuff| (0+256)))& (0+255)
  8924  0B6D  0086               	movwf	6
  8925  0B6E  3001               	movlw	1	; select bank3/4
  8926  0B6F  0087               	movwf	7
  8927  0B70  0851               	movf	??_valfromGroup,w
  8928  0B71  0081               	movwf	1
  8929                           
  8930                           ;main.c: 272:             break;
  8931  0B72  2C4C               	goto	l7607
  8932  0B73                     l7587:
  8933                           
  8934                           ;main.c: 274:             groupBuff[i] = BackUM[i];
  8935  0B73  0854               	movf	valfromGroup@i,w
  8936  0B74  3ECD               	addlw	(low (_BackUM| (0+256)))& (0+255)
  8937  0B75  0086               	movwf	6
  8938  0B76  3001               	movlw	1	; select bank3/4
  8939  0B77  0087               	movwf	7
  8940  0B78  0801               	movf	1,w
  8941  0B79  00D1               	movwf	??_valfromGroup
  8942  0B7A  0854               	movf	valfromGroup@i,w
  8943  0B7B  3EA0               	addlw	(low (_groupBuff| (0+256)))& (0+255)
  8944  0B7C  0086               	movwf	6
  8945  0B7D  3001               	movlw	1	; select bank3/4
  8946  0B7E  0087               	movwf	7
  8947  0B7F  0851               	movf	??_valfromGroup,w
  8948  0B80  0081               	movwf	1
  8949                           
  8950                           ;main.c: 275:             break;
  8951  0B81  2C4C               	goto	l7607
  8952  0B82                     l7589:
  8953                           
  8954                           ;main.c: 277:             groupBuff[i] = BackD[i];
  8955  0B82  0854               	movf	valfromGroup@i,w
  8956  0B83  3ECA               	addlw	(low (_BackD| (0+256)))& (0+255)
  8957  0B84  0086               	movwf	6
  8958  0B85  3001               	movlw	1	; select bank3/4
  8959  0B86  0087               	movwf	7
  8960  0B87  0801               	movf	1,w
  8961  0B88  00D1               	movwf	??_valfromGroup
  8962  0B89  0854               	movf	valfromGroup@i,w
  8963  0B8A  3EA0               	addlw	(low (_groupBuff| (0+256)))& (0+255)
  8964  0B8B  0086               	movwf	6
  8965  0B8C  3001               	movlw	1	; select bank3/4
  8966  0B8D  0087               	movwf	7
  8967  0B8E  0851               	movf	??_valfromGroup,w
  8968  0B8F  0081               	movwf	1
  8969                           
  8970                           ;main.c: 278:             break;
  8971  0B90  2C4C               	goto	l7607
  8972  0B91                     l7591:
  8973                           
  8974                           ;main.c: 280:             groupBuff[i] = LegUL[i];
  8975  0B91  0854               	movf	valfromGroup@i,w
  8976  0B92  3E66               	addlw	(low (_LegUL| (0+512)))& (0+255)
  8977  0B93  0086               	movwf	6
  8978  0B94  3002               	movlw	2	; select bank4/5
  8979  0B95  0087               	movwf	7
  8980  0B96  0801               	movf	1,w
  8981  0B97  00D1               	movwf	??_valfromGroup
  8982  0B98  0854               	movf	valfromGroup@i,w
  8983  0B99  3EA0               	addlw	(low (_groupBuff| (0+256)))& (0+255)
  8984  0B9A  0086               	movwf	6
  8985  0B9B  3001               	movlw	1	; select bank3/4
  8986  0B9C  0087               	movwf	7
  8987  0B9D  0851               	movf	??_valfromGroup,w
  8988  0B9E  0081               	movwf	1
  8989                           
  8990                           ;main.c: 281:             break;
  8991  0B9F  2C4C               	goto	l7607
  8992  0BA0                     l7593:
  8993                           
  8994                           ;main.c: 283:             groupBuff[i] = LegUR[i];
  8995  0BA0  0854               	movf	valfromGroup@i,w
  8996  0BA1  3E60               	addlw	(low (_LegUR| (0+512)))& (0+255)
  8997  0BA2  0086               	movwf	6
  8998  0BA3  3002               	movlw	2	; select bank4/5
  8999  0BA4  0087               	movwf	7
  9000  0BA5  0801               	movf	1,w
  9001  0BA6  00D1               	movwf	??_valfromGroup
  9002  0BA7  0854               	movf	valfromGroup@i,w
  9003  0BA8  3EA0               	addlw	(low (_groupBuff| (0+256)))& (0+255)
  9004  0BA9  0086               	movwf	6
  9005  0BAA  3001               	movlw	1	; select bank3/4
  9006  0BAB  0087               	movwf	7
  9007  0BAC  0851               	movf	??_valfromGroup,w
  9008  0BAD  0081               	movwf	1
  9009                           
  9010                           ;main.c: 284:             break;
  9011  0BAE  2C4C               	goto	l7607
  9012  0BAF                     l7595:
  9013                           
  9014                           ;main.c: 286:             groupBuff[i] = LegDL[i];
  9015  0BAF  0854               	movf	valfromGroup@i,w
  9016  0BB0  3E5A               	addlw	(low (_LegDL| (0+512)))& (0+255)
  9017  0BB1  0086               	movwf	6
  9018  0BB2  3002               	movlw	2	; select bank4/5
  9019  0BB3  0087               	movwf	7
  9020  0BB4  0801               	movf	1,w
  9021  0BB5  00D1               	movwf	??_valfromGroup
  9022  0BB6  0854               	movf	valfromGroup@i,w
  9023  0BB7  3EA0               	addlw	(low (_groupBuff| (0+256)))& (0+255)
  9024  0BB8  0086               	movwf	6
  9025  0BB9  3001               	movlw	1	; select bank3/4
  9026  0BBA  0087               	movwf	7
  9027  0BBB  0851               	movf	??_valfromGroup,w
  9028  0BBC  0081               	movwf	1
  9029                           
  9030                           ;main.c: 287:             break;
  9031  0BBD  2C4C               	goto	l7607
  9032  0BBE                     l7597:
  9033                           
  9034                           ;main.c: 289:             groupBuff[i] = LegDR[i];
  9035  0BBE  0854               	movf	valfromGroup@i,w
  9036  0BBF  3E54               	addlw	(low (_LegDR| (0+512)))& (0+255)
  9037  0BC0  0086               	movwf	6
  9038  0BC1  3002               	movlw	2	; select bank4/5
  9039  0BC2  0087               	movwf	7
  9040  0BC3  0801               	movf	1,w
  9041  0BC4  00D1               	movwf	??_valfromGroup
  9042  0BC5  0854               	movf	valfromGroup@i,w
  9043  0BC6  3EA0               	addlw	(low (_groupBuff| (0+256)))& (0+255)
  9044  0BC7  0086               	movwf	6
  9045  0BC8  3001               	movlw	1	; select bank3/4
  9046  0BC9  0087               	movwf	7
  9047  0BCA  0851               	movf	??_valfromGroup,w
  9048  0BCB  0081               	movwf	1
  9049                           
  9050                           ;main.c: 290:             break;
  9051  0BCC  2C4C               	goto	l7607
  9052  0BCD                     l7599:
  9053                           
  9054                           ;main.c: 292:             groupBuff[i] = ShoeL[i];
  9055  0BCD  0854               	movf	valfromGroup@i,w
  9056  0BCE  3EC3               	addlw	(low (_ShoeL| (0+512)))& (0+255)
  9057  0BCF  0086               	movwf	6
  9058  0BD0  3002               	movlw	2	; select bank5/6
  9059  0BD1  0087               	movwf	7
  9060  0BD2  0801               	movf	1,w
  9061  0BD3  00D1               	movwf	??_valfromGroup
  9062  0BD4  0854               	movf	valfromGroup@i,w
  9063  0BD5  3EA0               	addlw	(low (_groupBuff| (0+256)))& (0+255)
  9064  0BD6  0086               	movwf	6
  9065  0BD7  3001               	movlw	1	; select bank3/4
  9066  0BD8  0087               	movwf	7
  9067  0BD9  0851               	movf	??_valfromGroup,w
  9068  0BDA  0081               	movwf	1
  9069                           
  9070                           ;main.c: 293:             break;
  9071  0BDB  2C4C               	goto	l7607
  9072  0BDC                     l7601:
  9073                           
  9074                           ;main.c: 295:             groupBuff[i] = ShoeR[i];
  9075  0BDC  0854               	movf	valfromGroup@i,w
  9076  0BDD  3EBB               	addlw	(low (_ShoeR| (0+512)))& (0+255)
  9077  0BDE  0086               	movwf	6
  9078  0BDF  3002               	movlw	2	; select bank5/6
  9079  0BE0  0087               	movwf	7
  9080  0BE1  0801               	movf	1,w
  9081  0BE2  00D1               	movwf	??_valfromGroup
  9082  0BE3  0854               	movf	valfromGroup@i,w
  9083  0BE4  3EA0               	addlw	(low (_groupBuff| (0+256)))& (0+255)
  9084  0BE5  0086               	movwf	6
  9085  0BE6  3001               	movlw	1	; select bank3/4
  9086  0BE7  0087               	movwf	7
  9087  0BE8  0851               	movf	??_valfromGroup,w
  9088  0BE9  0081               	movwf	1
  9089                           
  9090                           ;main.c: 296:             break;
  9091  0BEA  2C4C               	goto	l7607
  9092  0BEB                     l7605:
  9093  0BEB  0853               	movf	valfromGroup@groupID,w
  9094  0BEC  00D1               	movwf	??_valfromGroup
  9095  0BED  01D2               	clrf	??_valfromGroup+1
  9096                           
  9097                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9098                           ; Switch size 1, requested type "simple"
  9099                           ; Number of cases is 1, Range of values is 0 to 0
  9100                           ; switch strategies available:
  9101                           ; Name         Instructions Cycles
  9102                           ; simple_byte            4     3 (average)
  9103                           ; direct_byte            8     6 (fixed)
  9104                           ; jumptable            260     6 (fixed)
  9105                           ;	Chosen strategy is simple_byte
  9106  0BEE  0852               	movf	??_valfromGroup+1,w
  9107  0BEF  3A00               	xorlw	0	; case 0
  9108  0BF0  1903               	skipnz
  9109  0BF1  2BF3               	goto	l7947
  9110  0BF2  2C4C               	goto	l7607
  9111  0BF3                     l7947:
  9112                           
  9113                           ; Switch size 1, requested type "simple"
  9114                           ; Number of cases is 29, Range of values is 0 to 28
  9115                           ; switch strategies available:
  9116                           ; Name         Instructions Cycles
  9117                           ; direct_byte           64     6 (fixed)
  9118                           ; simple_byte           88    45 (average)
  9119                           ; jumptable            260     6 (fixed)
  9120                           ;	Chosen strategy is simple_byte
  9121  0BF3  0851               	movf	??_valfromGroup,w
  9122  0BF4  3A00               	xorlw	0	; case 0
  9123  0BF5  1903               	skipnz
  9124  0BF6  2A3B               	goto	l7545
  9125  0BF7  3A01               	xorlw	1	; case 1
  9126  0BF8  1903               	skipnz
  9127  0BF9  2A49               	goto	l7547
  9128  0BFA  3A03               	xorlw	3	; case 2
  9129  0BFB  1903               	skipnz
  9130  0BFC  2A58               	goto	l7549
  9131  0BFD  3A01               	xorlw	1	; case 3
  9132  0BFE  1903               	skipnz
  9133  0BFF  2A67               	goto	l7551
  9134  0C00  3A07               	xorlw	7	; case 4
  9135  0C01  1903               	skipnz
  9136  0C02  2A75               	goto	l7553
  9137  0C03  3A01               	xorlw	1	; case 5
  9138  0C04  1903               	skipnz
  9139  0C05  2A84               	goto	l7555
  9140  0C06  3A03               	xorlw	3	; case 6
  9141  0C07  1903               	skipnz
  9142  0C08  2A93               	goto	l7557
  9143  0C09  3A01               	xorlw	1	; case 7
  9144  0C0A  1903               	skipnz
  9145  0C0B  2AA2               	goto	l7559
  9146  0C0C  3A0F               	xorlw	15	; case 8
  9147  0C0D  1903               	skipnz
  9148  0C0E  2AB1               	goto	l7561
  9149  0C0F  3A01               	xorlw	1	; case 9
  9150  0C10  1903               	skipnz
  9151  0C11  2AC0               	goto	l7563
  9152  0C12  3A03               	xorlw	3	; case 10
  9153  0C13  1903               	skipnz
  9154  0C14  2ACF               	goto	l7565
  9155  0C15  3A01               	xorlw	1	; case 11
  9156  0C16  1903               	skipnz
  9157  0C17  2ADE               	goto	l7567
  9158  0C18  3A07               	xorlw	7	; case 12
  9159  0C19  1903               	skipnz
  9160  0C1A  2AED               	goto	l7569
  9161  0C1B  3A01               	xorlw	1	; case 13
  9162  0C1C  1903               	skipnz
  9163  0C1D  2AFB               	goto	l7571
  9164  0C1E  3A03               	xorlw	3	; case 14
  9165  0C1F  1903               	skipnz
  9166  0C20  2B0A               	goto	l7573
  9167  0C21  3A01               	xorlw	1	; case 15
  9168  0C22  1903               	skipnz
  9169  0C23  2B19               	goto	l7575
  9170  0C24  3A1F               	xorlw	31	; case 16
  9171  0C25  1903               	skipnz
  9172  0C26  2B28               	goto	l7577
  9173  0C27  3A01               	xorlw	1	; case 17
  9174  0C28  1903               	skipnz
  9175  0C29  2B37               	goto	l7579
  9176  0C2A  3A03               	xorlw	3	; case 18
  9177  0C2B  1903               	skipnz
  9178  0C2C  2B46               	goto	l7581
  9179  0C2D  3A01               	xorlw	1	; case 19
  9180  0C2E  1903               	skipnz
  9181  0C2F  2B55               	goto	l7583
  9182  0C30  3A07               	xorlw	7	; case 20
  9183  0C31  1903               	skipnz
  9184  0C32  2B64               	goto	l7585
  9185  0C33  3A01               	xorlw	1	; case 21
  9186  0C34  1903               	skipnz
  9187  0C35  2B73               	goto	l7587
  9188  0C36  3A03               	xorlw	3	; case 22
  9189  0C37  1903               	skipnz
  9190  0C38  2B82               	goto	l7589
  9191  0C39  3A01               	xorlw	1	; case 23
  9192  0C3A  1903               	skipnz
  9193  0C3B  2B91               	goto	l7591
  9194  0C3C  3A0F               	xorlw	15	; case 24
  9195  0C3D  1903               	skipnz
  9196  0C3E  2BA0               	goto	l7593
  9197  0C3F  3A01               	xorlw	1	; case 25
  9198  0C40  1903               	skipnz
  9199  0C41  2BAF               	goto	l7595
  9200  0C42  3A03               	xorlw	3	; case 26
  9201  0C43  1903               	skipnz
  9202  0C44  2BBE               	goto	l7597
  9203  0C45  3A01               	xorlw	1	; case 27
  9204  0C46  1903               	skipnz
  9205  0C47  2BCD               	goto	l7599
  9206  0C48  3A07               	xorlw	7	; case 28
  9207  0C49  1903               	skipnz
  9208  0C4A  2BDC               	goto	l7601
  9209  0C4B  2C4C               	goto	l7607
  9210  0C4C                     l7607:
  9211                           
  9212                           ;main.c: 298:     }
  9213  0C4C  3001               	movlw	1
  9214  0C4D  00D1               	movwf	??_valfromGroup
  9215  0C4E  0851               	movf	??_valfromGroup,w
  9216  0C4F  07D4               	addwf	valfromGroup@i,f
  9217  0C50                     l7609:
  9218  0C50  0853               	movf	valfromGroup@groupID,w
  9219  0C51  3E20               	addlw	(low (_groupSize| (0+768)))& (0+255)
  9220  0C52  0086               	movwf	6
  9221  0C53  3003               	movlw	3	; select bank6/7
  9222  0C54  0087               	movwf	7
  9223  0C55  0801               	movf	1,w
  9224  0C56  0254               	subwf	valfromGroup@i,w
  9225  0C57  1C03               	skipc
  9226  0C58  2C5A               	goto	u6531
  9227  0C59  2C5B               	goto	u6530
  9228  0C5A                     u6531:
  9229  0C5A  2BEB               	goto	l7605
  9230  0C5B                     u6530:
  9231  0C5B                     l870:
  9232  0C5B  0008               	return
  9233  0C5C                     __end_of_valfromGroup:
  9234                           
  9235                           	psect	text11
  9236  0802                     __ptext11:	
  9237 ;; *************** function _mergeBridge2 *****************
  9238 ;; Defined at:
  9239 ;;		line 431 in file "main.c"
  9240 ;; Parameters:    Size  Location     Type
  9241 ;;  cantB           2    4[BANK0 ] short 
  9242 ;;  accum           2    6[BANK0 ] short 
  9243 ;; Auto vars:     Size  Location     Type
  9244 ;;  i               2   12[BANK0 ] short 
  9245 ;; Return value:  Size  Location     Type
  9246 ;;                  1    wreg      unsigned char 
  9247 ;; Registers used:
  9248 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9249 ;; Tracked objects:
  9250 ;;		On entry : 0/0
  9251 ;;		On exit  : 0/0
  9252 ;;		Unchanged: 0/0
  9253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9254 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9255 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9256 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9257 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9258 ;;Total ram usage:       10 bytes
  9259 ;; Hardware stack levels used: 1
  9260 ;; Hardware stack levels required when called: 11
  9261 ;; This function calls:
  9262 ;;		Nothing
  9263 ;; This function is called by:
  9264 ;;		_merger
  9265 ;; This function uses a non-reentrant model
  9266 ;;
  9267                           
  9268                           
  9269                           ;psect for function _mergeBridge2
  9270  0802                     _mergeBridge2:
  9271  0802                     l7663:	
  9272                           ;incstack = 0
  9273                           ; Regs used in _mergeBridge2: [wreg+fsr1l+fsr1h+status,2+status,0]
  9274                           
  9275                           
  9276                           ;main.c: 432:     short i = 0;
  9277  0802  0020               	movlb	0	; select bank0
  9278  0803  01D9               	clrf	mergeBridge2@i
  9279  0804  01DA               	clrf	mergeBridge2@i+1
  9280                           
  9281                           ;main.c: 433:     for(i = 0; i < cantB; i++) {
  9282  0805  01D9               	clrf	mergeBridge2@i
  9283  0806  01DA               	clrf	mergeBridge2@i+1
  9284  0807  282F               	goto	l7669
  9285  0808                     l7665:
  9286                           
  9287                           ;main.c: 434:         dotValue2[i + accum] = 0;
  9288  0808  3046               	movlw	70
  9289  0809  0020               	movlb	0	; select bank0
  9290  080A  00D5               	movwf	??_mergeBridge2
  9291  080B  3027               	movlw	39
  9292  080C  00D6               	movwf	??_mergeBridge2+1
  9293  080D  0859               	movf	mergeBridge2@i,w
  9294  080E  0755               	addwf	??_mergeBridge2,w
  9295  080F  00D7               	movwf	??_mergeBridge2+2
  9296  0810  085A               	movf	mergeBridge2@i+1,w
  9297  0811  3D56               	addwfc	??_mergeBridge2+1,w
  9298  0812  00D8               	movwf	??_mergeBridge2+3
  9299  0813  0853               	movf	mergeBridge2@accum,w
  9300  0814  0757               	addwf	??_mergeBridge2+2,w
  9301  0815  0086               	movwf	6
  9302  0816  0854               	movf	mergeBridge2@accum+1,w
  9303  0817  3D58               	addwfc	??_mergeBridge2+3,w
  9304  0818  0087               	movwf	7
  9305  0819  0181               	clrf	1
  9306                           
  9307                           ;main.c: 435:         dotColor2[i + accum] = 0;
  9308  081A  309C               	movlw	156
  9309  081B  00D5               	movwf	??_mergeBridge2
  9310  081C  3026               	movlw	38
  9311  081D  00D6               	movwf	??_mergeBridge2+1
  9312  081E  0859               	movf	mergeBridge2@i,w
  9313  081F  0755               	addwf	??_mergeBridge2,w
  9314  0820  00D7               	movwf	??_mergeBridge2+2
  9315  0821  085A               	movf	mergeBridge2@i+1,w
  9316  0822  3D56               	addwfc	??_mergeBridge2+1,w
  9317  0823  00D8               	movwf	??_mergeBridge2+3
  9318  0824  0853               	movf	mergeBridge2@accum,w
  9319  0825  0757               	addwf	??_mergeBridge2+2,w
  9320  0826  0086               	movwf	6
  9321  0827  0854               	movf	mergeBridge2@accum+1,w
  9322  0828  3D58               	addwfc	??_mergeBridge2+3,w
  9323  0829  0087               	movwf	7
  9324  082A  0181               	clrf	1
  9325  082B                     l7667:
  9326                           
  9327                           ;main.c: 436:     }
  9328  082B  3001               	movlw	1
  9329  082C  07D9               	addwf	mergeBridge2@i,f
  9330  082D  3000               	movlw	0
  9331  082E  3DDA               	addwfc	mergeBridge2@i+1,f
  9332  082F                     l7669:
  9333  082F  085A               	movf	mergeBridge2@i+1,w
  9334  0830  3A80               	xorlw	128
  9335  0831  00D5               	movwf	??_mergeBridge2
  9336  0832  0852               	movf	mergeBridge2@cantB+1,w
  9337  0833  3A80               	xorlw	128
  9338  0834  0255               	subwf	??_mergeBridge2,w
  9339  0835  1D03               	skipz
  9340  0836  2839               	goto	u6575
  9341  0837  0851               	movf	mergeBridge2@cantB,w
  9342  0838  0259               	subwf	mergeBridge2@i,w
  9343  0839                     u6575:
  9344  0839  1C03               	skipc
  9345  083A  283C               	goto	u6571
  9346  083B  283D               	goto	u6570
  9347  083C                     u6571:
  9348  083C  2808               	goto	l7665
  9349  083D                     u6570:
  9350  083D                     l7671:
  9351                           
  9352                           ;main.c: 437:     accum += cantB;
  9353  083D  0020               	movlb	0	; select bank0
  9354  083E  0851               	movf	mergeBridge2@cantB,w
  9355  083F  07D3               	addwf	mergeBridge2@accum,f
  9356  0840  0852               	movf	mergeBridge2@cantB+1,w
  9357  0841  3DD4               	addwfc	mergeBridge2@accum+1,f
  9358                           
  9359                           ;main.c: 438:     return accum;
  9360  0842  0853               	movf	mergeBridge2@accum,w
  9361  0843                     l931:
  9362  0843  0008               	return
  9363  0844                     __end_of_mergeBridge2:
  9364                           
  9365                           	psect	text12
  9366  272D                     __ptext12:	
  9367 ;; *************** function _mergeBridge1 *****************
  9368 ;; Defined at:
  9369 ;;		line 421 in file "main.c"
  9370 ;; Parameters:    Size  Location     Type
  9371 ;;  cantB           2    4[BANK0 ] short 
  9372 ;;  accum           2    6[BANK0 ] short 
  9373 ;; Auto vars:     Size  Location     Type
  9374 ;;  i               2   12[BANK0 ] short 
  9375 ;; Return value:  Size  Location     Type
  9376 ;;                  1    wreg      unsigned char 
  9377 ;; Registers used:
  9378 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9379 ;; Tracked objects:
  9380 ;;		On entry : 0/0
  9381 ;;		On exit  : 0/0
  9382 ;;		Unchanged: 0/0
  9383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9384 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9385 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9386 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9387 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9388 ;;Total ram usage:       10 bytes
  9389 ;; Hardware stack levels used: 1
  9390 ;; Hardware stack levels required when called: 11
  9391 ;; This function calls:
  9392 ;;		Nothing
  9393 ;; This function is called by:
  9394 ;;		_merger
  9395 ;; This function uses a non-reentrant model
  9396 ;;
  9397                           
  9398                           
  9399                           ;psect for function _mergeBridge1
  9400  272D                     _mergeBridge1:
  9401  272D                     l7651:	
  9402                           ;incstack = 0
  9403                           ; Regs used in _mergeBridge1: [wreg+fsr1l+fsr1h+status,2+status,0]
  9404                           
  9405                           
  9406                           ;main.c: 422:     short i = 0;
  9407  272D  0020               	movlb	0	; select bank0
  9408  272E  01D9               	clrf	mergeBridge1@i
  9409  272F  01DA               	clrf	mergeBridge1@i+1
  9410                           
  9411                           ;main.c: 423:     for(i = 0; i < cantB; i++) {
  9412  2730  01D9               	clrf	mergeBridge1@i
  9413  2731  01DA               	clrf	mergeBridge1@i+1
  9414  2732  2F5A               	goto	l7657
  9415  2733                     l7653:
  9416                           
  9417                           ;main.c: 424:         dotValue1[i + accum] = 0;
  9418  2733  309B               	movlw	155
  9419  2734  0020               	movlb	0	; select bank0
  9420  2735  00D5               	movwf	??_mergeBridge1
  9421  2736  3027               	movlw	39
  9422  2737  00D6               	movwf	??_mergeBridge1+1
  9423  2738  0859               	movf	mergeBridge1@i,w
  9424  2739  0755               	addwf	??_mergeBridge1,w
  9425  273A  00D7               	movwf	??_mergeBridge1+2
  9426  273B  085A               	movf	mergeBridge1@i+1,w
  9427  273C  3D56               	addwfc	??_mergeBridge1+1,w
  9428  273D  00D8               	movwf	??_mergeBridge1+3
  9429  273E  0853               	movf	mergeBridge1@accum,w
  9430  273F  0757               	addwf	??_mergeBridge1+2,w
  9431  2740  0086               	movwf	6
  9432  2741  0854               	movf	mergeBridge1@accum+1,w
  9433  2742  3D58               	addwfc	??_mergeBridge1+3,w
  9434  2743  0087               	movwf	7
  9435  2744  0181               	clrf	1
  9436                           
  9437                           ;main.c: 425:         dotColor1[i + accum] = 0;
  9438  2745  30F1               	movlw	241
  9439  2746  00D5               	movwf	??_mergeBridge1
  9440  2747  3026               	movlw	38
  9441  2748  00D6               	movwf	??_mergeBridge1+1
  9442  2749  0859               	movf	mergeBridge1@i,w
  9443  274A  0755               	addwf	??_mergeBridge1,w
  9444  274B  00D7               	movwf	??_mergeBridge1+2
  9445  274C  085A               	movf	mergeBridge1@i+1,w
  9446  274D  3D56               	addwfc	??_mergeBridge1+1,w
  9447  274E  00D8               	movwf	??_mergeBridge1+3
  9448  274F  0853               	movf	mergeBridge1@accum,w
  9449  2750  0757               	addwf	??_mergeBridge1+2,w
  9450  2751  0086               	movwf	6
  9451  2752  0854               	movf	mergeBridge1@accum+1,w
  9452  2753  3D58               	addwfc	??_mergeBridge1+3,w
  9453  2754  0087               	movwf	7
  9454  2755  0181               	clrf	1
  9455  2756                     l7655:
  9456                           
  9457                           ;main.c: 426:     }
  9458  2756  3001               	movlw	1
  9459  2757  07D9               	addwf	mergeBridge1@i,f
  9460  2758  3000               	movlw	0
  9461  2759  3DDA               	addwfc	mergeBridge1@i+1,f
  9462  275A                     l7657:
  9463  275A  085A               	movf	mergeBridge1@i+1,w
  9464  275B  3A80               	xorlw	128
  9465  275C  00D5               	movwf	??_mergeBridge1
  9466  275D  0852               	movf	mergeBridge1@cantB+1,w
  9467  275E  3A80               	xorlw	128
  9468  275F  0255               	subwf	??_mergeBridge1,w
  9469  2760  1D03               	skipz
  9470  2761  2F64               	goto	u6565
  9471  2762  0851               	movf	mergeBridge1@cantB,w
  9472  2763  0259               	subwf	mergeBridge1@i,w
  9473  2764                     u6565:
  9474  2764  1C03               	skipc
  9475  2765  2F67               	goto	u6561
  9476  2766  2F68               	goto	u6560
  9477  2767                     u6561:
  9478  2767  2F33               	goto	l7653
  9479  2768                     u6560:
  9480  2768                     l7659:
  9481                           
  9482                           ;main.c: 427:     accum += cantB;
  9483  2768  0020               	movlb	0	; select bank0
  9484  2769  0851               	movf	mergeBridge1@cantB,w
  9485  276A  07D3               	addwf	mergeBridge1@accum,f
  9486  276B  0852               	movf	mergeBridge1@cantB+1,w
  9487  276C  3DD4               	addwfc	mergeBridge1@accum+1,f
  9488                           
  9489                           ;main.c: 428:     return accum;
  9490  276D  0853               	movf	mergeBridge1@accum,w
  9491  276E                     l925:
  9492  276E  0008               	return
  9493  276F                     __end_of_mergeBridge1:
  9494                           
  9495                           	psect	text13
  9496  1D10                     __ptext13:	
  9497 ;; *************** function _refriShoulder *****************
  9498 ;; Defined at:
  9499 ;;		line 804 in file "main.c"
  9500 ;; Parameters:    Size  Location     Type
  9501 ;;		None
  9502 ;; Auto vars:     Size  Location     Type
  9503 ;;		None
  9504 ;; Return value:  Size  Location     Type
  9505 ;;                  1    wreg      void 
  9506 ;; Registers used:
  9507 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9508 ;; Tracked objects:
  9509 ;;		On entry : 0/0
  9510 ;;		On exit  : 0/0
  9511 ;;		Unchanged: 0/0
  9512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9515 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9516 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9517 ;;Total ram usage:        1 bytes
  9518 ;; Hardware stack levels used: 1
  9519 ;; Hardware stack levels required when called: 15
  9520 ;; This function calls:
  9521 ;;		_rstRefri
  9522 ;;		_sendOrderX
  9523 ;; This function is called by:
  9524 ;;		_secuences
  9525 ;; This function uses a non-reentrant model
  9526 ;;
  9527                           
  9528                           
  9529                           ;psect for function _refriShoulder
  9530  1D10                     _refriShoulder:
  9531  1D10                     l6187:	
  9532                           ;incstack = 0
  9533 ;; hardware stack exceeded
  9534                           ; Regs used in _refriShoulder: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9535                           
  9536                           
  9537                           ;main.c: 805:     if(runRefri && contRefri < 1000) {
  9538  1D10  0021               	movlb	1	; select bank1
  9539  1D11  085A               	movf	_runRefri^(0+128),w
  9540  1D12  1903               	btfsc	3,2
  9541  1D13  2D15               	goto	u4301
  9542  1D14  2D16               	goto	u4300
  9543  1D15                     u4301:
  9544  1D15  2D7E               	goto	l1104
  9545  1D16                     u4300:
  9546  1D16                     l6189:
  9547  1D16  3003               	movlw	3
  9548  1D17  0020               	movlb	0	; select bank0
  9549  1D18  0227               	subwf	_contRefri+1,w
  9550  1D19  30E8               	movlw	232
  9551  1D1A  1903               	skipnz
  9552  1D1B  0226               	subwf	_contRefri,w
  9553  1D1C  1803               	skipnc
  9554  1D1D  2D1F               	goto	u4311
  9555  1D1E  2D20               	goto	u4310
  9556  1D1F                     u4311:
  9557  1D1F  2D7E               	goto	l1104
  9558  1D20                     u4310:
  9559  1D20                     l6191:
  9560                           
  9561                           ;main.c: 806:         if(contRefri < 64) {
  9562  1D20  3000               	movlw	0
  9563  1D21  0227               	subwf	_contRefri+1,w
  9564  1D22  3040               	movlw	64
  9565  1D23  1903               	skipnz
  9566  1D24  0226               	subwf	_contRefri,w
  9567  1D25  1803               	skipnc
  9568  1D26  2D28               	goto	u4321
  9569  1D27  2D29               	goto	u4320
  9570  1D28                     u4321:
  9571  1D28  2D3C               	goto	l6201
  9572  1D29                     u4320:
  9573  1D29                     l6193:
  9574                           
  9575                           ;main.c: 807:             indexRefri++;
  9576  1D29  3001               	movlw	1
  9577  1D2A  00E0               	movwf	??_refriShoulder
  9578  1D2B  0860               	movf	??_refriShoulder,w
  9579  1D2C  0021               	movlb	1	; select bank1
  9580  1D2D  07D9               	addwf	_indexRefri^(0+128),f
  9581  1D2E                     l6195:
  9582                           
  9583                           ;main.c: 808:             if(indexRefri >= 4) {
  9584  1D2E  3004               	movlw	4
  9585  1D2F  0259               	subwf	_indexRefri^(0+128),w
  9586  1D30  1C03               	skipc
  9587  1D31  2D33               	goto	u4331
  9588  1D32  2D34               	goto	u4330
  9589  1D33                     u4331:
  9590  1D33  2D76               	goto	l6225
  9591  1D34                     u4330:
  9592  1D34                     l6197:
  9593                           
  9594                           ;main.c: 809:                 intensityRefri += 1;
  9595  1D34  3001               	movlw	1
  9596  1D35  0020               	movlb	0	; select bank0
  9597  1D36  00E0               	movwf	??_refriShoulder
  9598  1D37  0860               	movf	??_refriShoulder,w
  9599  1D38  07BB               	addwf	_intensityRefri,f
  9600  1D39                     l6199:
  9601                           
  9602                           ;main.c: 810:                 indexRefri = 0;
  9603  1D39  0021               	movlb	1	; select bank1
  9604  1D3A  01D9               	clrf	_indexRefri^(0+128)
  9605  1D3B  2D76               	goto	l6225
  9606  1D3C                     l6201:
  9607  1D3C  3000               	movlw	0
  9608  1D3D  0227               	subwf	_contRefri+1,w
  9609  1D3E  3058               	movlw	88
  9610  1D3F  1903               	skipnz
  9611  1D40  0226               	subwf	_contRefri,w
  9612  1D41  1803               	skipnc
  9613  1D42  2D44               	goto	u4341
  9614  1D43  2D45               	goto	u4340
  9615  1D44                     u4341:
  9616  1D44  2D4A               	goto	l6205
  9617  1D45                     u4340:
  9618  1D45                     l6203:
  9619                           
  9620                           ;main.c: 813:             intensityRefri += 1;
  9621  1D45  3001               	movlw	1
  9622  1D46  00E0               	movwf	??_refriShoulder
  9623  1D47  0860               	movf	??_refriShoulder,w
  9624  1D48  07BB               	addwf	_intensityRefri,f
  9625                           
  9626                           ;main.c: 814:         }else if(contRefri < 112) {
  9627  1D49  2D76               	goto	l6225
  9628  1D4A                     l6205:
  9629  1D4A  3000               	movlw	0
  9630  1D4B  0227               	subwf	_contRefri+1,w
  9631  1D4C  3070               	movlw	112
  9632  1D4D  1903               	skipnz
  9633  1D4E  0226               	subwf	_contRefri,w
  9634  1D4F  1803               	skipnc
  9635  1D50  2D52               	goto	u4351
  9636  1D51  2D53               	goto	u4350
  9637  1D52                     u4351:
  9638  1D52  2D56               	goto	l6209
  9639  1D53                     u4350:
  9640  1D53                     l6207:
  9641                           
  9642                           ;main.c: 815:             intensityRefri -= 1;
  9643  1D53  3001               	movlw	1
  9644  1D54  02BB               	subwf	_intensityRefri,f
  9645                           
  9646                           ;main.c: 816:         }else if(contRefri < 712) {
  9647  1D55  2D76               	goto	l6225
  9648  1D56                     l6209:
  9649  1D56  3002               	movlw	2
  9650  1D57  0227               	subwf	_contRefri+1,w
  9651  1D58  30C8               	movlw	200
  9652  1D59  1903               	skipnz
  9653  1D5A  0226               	subwf	_contRefri,w
  9654  1D5B  1803               	skipnc
  9655  1D5C  2D5E               	goto	u4361
  9656  1D5D  2D5F               	goto	u4360
  9657  1D5E                     u4361:
  9658  1D5E  2D60               	goto	l6213
  9659  1D5F                     u4360:
  9660  1D5F  2D76               	goto	l6225
  9661  1D60                     l6213:
  9662  1D60  083B               	movf	_intensityRefri,w
  9663  1D61  1903               	btfsc	3,2
  9664  1D62  2D64               	goto	u4371
  9665  1D63  2D65               	goto	u4370
  9666  1D64                     u4371:
  9667  1D64  2D6F               	goto	l6221
  9668  1D65                     u4370:
  9669  1D65                     l6215:
  9670  1D65  3002               	movlw	2
  9671  1D66  0227               	subwf	_contRefri+1,w
  9672  1D67  30D8               	movlw	216
  9673  1D68  1903               	skipnz
  9674  1D69  0226               	subwf	_contRefri,w
  9675  1D6A  1803               	skipnc
  9676  1D6B  2D6D               	goto	u4381
  9677  1D6C  2D6E               	goto	u4380
  9678  1D6D                     u4381:
  9679  1D6D  2D6F               	goto	l6221
  9680  1D6E                     u4380:
  9681  1D6E  2D53               	goto	l6207
  9682  1D6F                     l6221:
  9683                           
  9684                           ;main.c: 823:             rstRefri(0);
  9685  1D6F  3000               	movlw	0
  9686  1D70  31A3  2337  319D   	fcall	_rstRefri
  9687  1D73                     l6223:
  9688                           
  9689                           ;main.c: 824:             refriShoulderDone = 1;
  9690  1D73  0021               	movlb	1	; select bank1
  9691  1D74  01D8               	clrf	_refriShoulderDone^(0+128)
  9692  1D75  0AD8               	incf	_refriShoulderDone^(0+128),f
  9693  1D76                     l6225:
  9694                           
  9695                           ;main.c: 826:         sendOrderX();
  9696  1D76  31A0  20E0  319D   	fcall	_sendOrderX
  9697  1D79                     l6227:
  9698                           
  9699                           ;main.c: 827:         contRefri++;
  9700  1D79  3001               	movlw	1
  9701  1D7A  0020               	movlb	0	; select bank0
  9702  1D7B  07A6               	addwf	_contRefri,f
  9703  1D7C  3000               	movlw	0
  9704  1D7D  3DA7               	addwfc	_contRefri+1,f
  9705  1D7E                     l1104:
  9706  1D7E  0008               	return
  9707  1D7F                     __end_of_refriShoulder:
  9708                           
  9709                           	psect	text14
  9710  2337                     __ptext14:	
  9711 ;; *************** function _rstRefri *****************
  9712 ;; Defined at:
  9713 ;;		line 796 in file "main.c"
  9714 ;; Parameters:    Size  Location     Type
  9715 ;;  start           1    wreg     unsigned char 
  9716 ;; Auto vars:     Size  Location     Type
  9717 ;;  start           1   18[BANK0 ] unsigned char 
  9718 ;; Return value:  Size  Location     Type
  9719 ;;                  1    wreg      void 
  9720 ;; Registers used:
  9721 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9722 ;; Tracked objects:
  9723 ;;		On entry : 0/0
  9724 ;;		On exit  : 0/0
  9725 ;;		Unchanged: 0/0
  9726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9728 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9729 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9730 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9731 ;;Total ram usage:        2 bytes
  9732 ;; Hardware stack levels used: 1
  9733 ;; Hardware stack levels required when called: 14
  9734 ;; This function calls:
  9735 ;;		_refriShoulderTool
  9736 ;; This function is called by:
  9737 ;;		_refriShoulder
  9738 ;; This function uses a non-reentrant model
  9739 ;;
  9740                           
  9741                           
  9742                           ;psect for function _rstRefri
  9743  2337                     _rstRefri:
  9744                           
  9745                           ;incstack = 0
  9746 ;; hardware stack exceeded
  9747                           ; Regs used in _rstRefri: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9748                           ;rstRefri@start stored from wreg
  9749  2337  0020               	movlb	0	; select bank0
  9750  2338  00DF               	movwf	rstRefri@start
  9751  2339                     l5781:
  9752                           
  9753                           ;main.c: 797:     intensityRefri = 0;
  9754  2339  01BB               	clrf	_intensityRefri
  9755                           
  9756                           ;main.c: 798:     indexRefri = 0;
  9757  233A  0021               	movlb	1	; select bank1
  9758  233B  01D9               	clrf	_indexRefri^(0+128)
  9759                           
  9760                           ;main.c: 799:     contRefri = 0;
  9761  233C  0020               	movlb	0	; select bank0
  9762  233D  01A6               	clrf	_contRefri
  9763  233E  01A7               	clrf	_contRefri+1
  9764  233F                     l5783:
  9765                           
  9766                           ;main.c: 800:     refriShoulderTool(start);
  9767  233F  085F               	movf	rstRefri@start,w
  9768  2340  319B  2319  31A3   	fcall	_refriShoulderTool
  9769  2343                     l5785:
  9770                           
  9771                           ;main.c: 801:     runRefri = start;
  9772  2343  0020               	movlb	0	; select bank0
  9773  2344  085F               	movf	rstRefri@start,w
  9774  2345  00DE               	movwf	??_rstRefri
  9775  2346  085E               	movf	??_rstRefri,w
  9776  2347  0021               	movlb	1	; select bank1
  9777  2348  00DA               	movwf	_runRefri^(0+128)
  9778  2349                     l1088:
  9779  2349  0008               	return
  9780  234A                     __end_of_rstRefri:
  9781                           
  9782                           	psect	text15
  9783  1B19                     __ptext15:	
  9784 ;; *************** function _refriShoulderTool *****************
  9785 ;; Defined at:
  9786 ;;		line 784 in file "main.c"
  9787 ;; Parameters:    Size  Location     Type
  9788 ;;  on              1    wreg     unsigned char 
  9789 ;; Auto vars:     Size  Location     Type
  9790 ;;  on              1   15[BANK0 ] unsigned char 
  9791 ;;  col             1   16[BANK0 ] unsigned char 
  9792 ;; Return value:  Size  Location     Type
  9793 ;;                  1    wreg      void 
  9794 ;; Registers used:
  9795 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9796 ;; Tracked objects:
  9797 ;;		On entry : 0/0
  9798 ;;		On exit  : 0/0
  9799 ;;		Unchanged: 0/0
  9800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9802 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9803 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9804 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9805 ;;Total ram usage:        4 bytes
  9806 ;; Hardware stack levels used: 1
  9807 ;; Hardware stack levels required when called: 13
  9808 ;; This function calls:
  9809 ;;		_applyColor
  9810 ;; This function is called by:
  9811 ;;		_rstRefri
  9812 ;; This function uses a non-reentrant model
  9813 ;;
  9814                           
  9815                           
  9816                           ;psect for function _refriShoulderTool
  9817  1B19                     _refriShoulderTool:
  9818                           
  9819                           ;incstack = 0
  9820 ;; hardware stack exceeded
  9821                           ; Regs used in _refriShoulderTool: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9822                           ;refriShoulderTool@on stored from wreg
  9823  1B19  0020               	movlb	0	; select bank0
  9824  1B1A  00DC               	movwf	refriShoulderTool@on
  9825  1B1B                     l5431:
  9826                           
  9827                           ;main.c: 785:     char col = 0;
  9828  1B1B  01DD               	clrf	refriShoulderTool@col
  9829  1B1C                     l5433:
  9830                           
  9831                           ;main.c: 786:     if(on)
  9832  1B1C  085C               	movf	refriShoulderTool@on,w
  9833  1B1D  1903               	btfsc	3,2
  9834  1B1E  2B20               	goto	u3571
  9835  1B1F  2B21               	goto	u3570
  9836  1B20                     u3571:
  9837  1B20  2B25               	goto	l5437
  9838  1B21                     u3570:
  9839  1B21                     l5435:
  9840                           
  9841                           ;main.c: 787:         col = 22;
  9842  1B21  3016               	movlw	22
  9843  1B22  00DA               	movwf	??_refriShoulderTool
  9844  1B23  085A               	movf	??_refriShoulderTool,w
  9845  1B24  00DD               	movwf	refriShoulderTool@col
  9846  1B25                     l5437:
  9847                           
  9848                           ;main.c: 788:     applyColor(7, col, 255);
  9849  1B25  085D               	movf	refriShoulderTool@col,w
  9850  1B26  00DA               	movwf	??_refriShoulderTool
  9851  1B27  085A               	movf	??_refriShoulderTool,w
  9852  1B28  00D6               	movwf	applyColor@color
  9853  1B29  30FF               	movlw	255
  9854  1B2A  00DB               	movwf	??_refriShoulderTool+1
  9855  1B2B  085B               	movf	??_refriShoulderTool+1,w
  9856  1B2C  00D7               	movwf	applyColor@intensity
  9857  1B2D  3007               	movlw	7
  9858  1B2E  31A3  235E  319B   	fcall	_applyColor
  9859  1B31                     l5439:
  9860                           
  9861                           ;main.c: 789:     applyColor(8, col, 255);
  9862  1B31  0020               	movlb	0	; select bank0
  9863  1B32  085D               	movf	refriShoulderTool@col,w
  9864  1B33  00DA               	movwf	??_refriShoulderTool
  9865  1B34  085A               	movf	??_refriShoulderTool,w
  9866  1B35  00D6               	movwf	applyColor@color
  9867  1B36  30FF               	movlw	255
  9868  1B37  00DB               	movwf	??_refriShoulderTool+1
  9869  1B38  085B               	movf	??_refriShoulderTool+1,w
  9870  1B39  00D7               	movwf	applyColor@intensity
  9871  1B3A  3008               	movlw	8
  9872  1B3B  31A3  235E  319B   	fcall	_applyColor
  9873  1B3E                     l5441:
  9874                           
  9875                           ;main.c: 790:     applyColor(5, col, 255);
  9876  1B3E  0020               	movlb	0	; select bank0
  9877  1B3F  085D               	movf	refriShoulderTool@col,w
  9878  1B40  00DA               	movwf	??_refriShoulderTool
  9879  1B41  085A               	movf	??_refriShoulderTool,w
  9880  1B42  00D6               	movwf	applyColor@color
  9881  1B43  30FF               	movlw	255
  9882  1B44  00DB               	movwf	??_refriShoulderTool+1
  9883  1B45  085B               	movf	??_refriShoulderTool+1,w
  9884  1B46  00D7               	movwf	applyColor@intensity
  9885  1B47  3005               	movlw	5
  9886  1B48  31A3  235E  319B   	fcall	_applyColor
  9887  1B4B                     l5443:
  9888                           
  9889                           ;main.c: 791:     applyColor(6, col, 255);
  9890  1B4B  0020               	movlb	0	; select bank0
  9891  1B4C  085D               	movf	refriShoulderTool@col,w
  9892  1B4D  00DA               	movwf	??_refriShoulderTool
  9893  1B4E  085A               	movf	??_refriShoulderTool,w
  9894  1B4F  00D6               	movwf	applyColor@color
  9895  1B50  30FF               	movlw	255
  9896  1B51  00DB               	movwf	??_refriShoulderTool+1
  9897  1B52  085B               	movf	??_refriShoulderTool+1,w
  9898  1B53  00D7               	movwf	applyColor@intensity
  9899  1B54  3006               	movlw	6
  9900  1B55  31A3  235E  319B   	fcall	_applyColor
  9901  1B58                     l5445:
  9902                           
  9903                           ;main.c: 792:     applyColor(3, col, 255);
  9904  1B58  0020               	movlb	0	; select bank0
  9905  1B59  085D               	movf	refriShoulderTool@col,w
  9906  1B5A  00DA               	movwf	??_refriShoulderTool
  9907  1B5B  085A               	movf	??_refriShoulderTool,w
  9908  1B5C  00D6               	movwf	applyColor@color
  9909  1B5D  30FF               	movlw	255
  9910  1B5E  00DB               	movwf	??_refriShoulderTool+1
  9911  1B5F  085B               	movf	??_refriShoulderTool+1,w
  9912  1B60  00D7               	movwf	applyColor@intensity
  9913  1B61  3003               	movlw	3
  9914  1B62  31A3  235E  319B   	fcall	_applyColor
  9915  1B65                     l5447:
  9916                           
  9917                           ;main.c: 793:     applyColor(4, col, 255);
  9918  1B65  0020               	movlb	0	; select bank0
  9919  1B66  085D               	movf	refriShoulderTool@col,w
  9920  1B67  00DA               	movwf	??_refriShoulderTool
  9921  1B68  085A               	movf	??_refriShoulderTool,w
  9922  1B69  00D6               	movwf	applyColor@color
  9923  1B6A  30FF               	movlw	255
  9924  1B6B  00DB               	movwf	??_refriShoulderTool+1
  9925  1B6C  085B               	movf	??_refriShoulderTool+1,w
  9926  1B6D  00D7               	movwf	applyColor@intensity
  9927  1B6E  3004               	movlw	4
  9928  1B6F  31A3  235E  319B   	fcall	_applyColor
  9929  1B72                     l1085:
  9930  1B72  0008               	return
  9931  1B73                     __end_of_refriShoulderTool:
  9932                           
  9933                           	psect	text16
  9934  04D4                     __ptext16:	
  9935 ;; *************** function _musik *****************
  9936 ;; Defined at:
  9937 ;;		line 1022 in file "main.c"
  9938 ;; Parameters:    Size  Location     Type
  9939 ;;		None
  9940 ;; Auto vars:     Size  Location     Type
  9941 ;;		None
  9942 ;; Return value:  Size  Location     Type
  9943 ;;                  1    wreg      void 
  9944 ;; Registers used:
  9945 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9946 ;; Tracked objects:
  9947 ;;		On entry : 0/0
  9948 ;;		On exit  : 0/0
  9949 ;;		Unchanged: 0/0
  9950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9953 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9954 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9955 ;;Total ram usage:        1 bytes
  9956 ;; Hardware stack levels used: 1
  9957 ;; Hardware stack levels required when called: 13
  9958 ;; This function calls:
  9959 ;;		_putch
  9960 ;;		_rstMusik
  9961 ;;		_sendOrderX
  9962 ;;		_val2group
  9963 ;; This function is called by:
  9964 ;;		_secuences
  9965 ;; This function uses a non-reentrant model
  9966 ;;
  9967                           
  9968                           
  9969                           ;psect for function _musik
  9970  04D4                     _musik:
  9971  04D4                     l6395:	
  9972                           ;incstack = 0
  9973                           ; Regs used in _musik: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9974                           
  9975                           
  9976                           ;main.c: 1023:     if(musikRun && ritmCont < 1100) {
  9977  04D4  0020               	movlb	0	; select bank0
  9978  04D5  083A               	movf	_musikRun,w
  9979  04D6  1903               	btfsc	3,2
  9980  04D7  2CD9               	goto	u4721
  9981  04D8  2CDA               	goto	u4720
  9982  04D9                     u4721:
  9983  04D9  2F8C               	goto	l1247
  9984  04DA                     u4720:
  9985  04DA                     l6397:
  9986  04DA  3004               	movlw	4
  9987  04DB  0021               	movlb	1	; select bank1
  9988  04DC  0238               	subwf	(_ritmCont+1)^(0+128),w
  9989  04DD  304C               	movlw	76
  9990  04DE  1903               	skipnz
  9991  04DF  0237               	subwf	_ritmCont^(0+128),w
  9992  04E0  1803               	skipnc
  9993  04E1  2CE3               	goto	u4731
  9994  04E2  2CE4               	goto	u4730
  9995  04E3                     u4731:
  9996  04E3  2F8C               	goto	l1247
  9997  04E4                     u4730:
  9998  04E4                     l6399:
  9999                           
 10000                           ;main.c: 1024:         if(ritmCont < 1 && lightsOn) {
 10001  04E4  0837               	movf	_ritmCont^(0+128),w
 10002  04E5  0438               	iorwf	(_ritmCont+1)^(0+128),w
 10003  04E6  1D03               	btfss	3,2
 10004  04E7  2CE9               	goto	u4741
 10005  04E8  2CEA               	goto	u4740
 10006  04E9                     u4741:
 10007  04E9  2D00               	goto	l6407
 10008  04EA                     u4740:
 10009  04EA                     l6401:
 10010  04EA  0020               	movlb	0	; select bank0
 10011  04EB  0844               	movf	_lightsOn,w
 10012  04EC  1903               	btfsc	3,2
 10013  04ED  2CEF               	goto	u4751
 10014  04EE  2CF0               	goto	u4750
 10015  04EF                     u4751:
 10016  04EF  2D00               	goto	l6407
 10017  04F0                     u4750:
 10018  04F0                     l6403:
 10019                           
 10020                           ;main.c: 1025:             valTempo = 255;
 10021  04F0  30FF               	movlw	255
 10022  04F1  00A4               	movwf	_valTempo
 10023  04F2  3000               	movlw	0
 10024  04F3  00A5               	movwf	_valTempo+1
 10025                           
 10026                           ;main.c: 1026:             valBip1 = 255;
 10027  04F4  30FF               	movlw	255
 10028  04F5  00A2               	movwf	_valBip1
 10029  04F6  3000               	movlw	0
 10030  04F7  00A3               	movwf	_valBip1+1
 10031                           
 10032                           ;main.c: 1027:             valBip2 = 255;
 10033  04F8  30FF               	movlw	255
 10034  04F9  00A0               	movwf	_valBip2
 10035  04FA  3000               	movlw	0
 10036  04FB  00A1               	movwf	_valBip2+1
 10037  04FC                     l6405:
 10038                           
 10039                           ;main.c: 1028:             putch('e');
 10040  04FC  3065               	movlw	101
 10041  04FD  31A0  20EE  3184   	fcall	_putch
 10042  0500                     l6407:
 10043                           
 10044                           ;main.c: 1030:         stepsNote++;
 10045  0500  3001               	movlw	1
 10046  0501  0020               	movlb	0	; select bank0
 10047  0502  00D6               	movwf	??_musik
 10048  0503  0856               	movf	??_musik,w
 10049  0504  07B9               	addwf	_stepsNote,f
 10050  0505                     l6409:
 10051                           
 10052                           ;main.c: 1031:         if(noteNum < 72) {
 10053  0505  0837               	movf	_noteNum,w
 10054  0506  3A80               	xorlw	128
 10055  0507  3E38               	addlw	-200
 10056  0508  1803               	skipnc
 10057  0509  2D0B               	goto	u4761
 10058  050A  2D0C               	goto	u4760
 10059  050B                     u4761:
 10060  050B  2E85               	goto	l6531
 10061  050C                     u4760:
 10062  050C                     l6411:
 10063                           
 10064                           ;main.c: 1032:             if(noteOnTempo < 2) {
 10065  050C  3002               	movlw	2
 10066  050D  0238               	subwf	_noteOnTempo,w
 10067  050E  1803               	skipnc
 10068  050F  2D11               	goto	u4771
 10069  0510  2D12               	goto	u4770
 10070  0511                     u4771:
 10071  0511  2D1D               	goto	l6419
 10072  0512                     u4770:
 10073  0512                     l6413:
 10074                           
 10075                           ;main.c: 1033:                 valTempo -= 13;
 10076  0512  30F3               	movlw	243
 10077  0513  07A4               	addwf	_valTempo,f
 10078  0514  30FF               	movlw	255
 10079  0515  3DA5               	addwfc	_valTempo+1,f
 10080  0516                     l6415:
 10081                           
 10082                           ;main.c: 1034:                 if(valTempo < 0)
 10083  0516  1FA5               	btfss	_valTempo+1,7
 10084  0517  2D19               	goto	u4781
 10085  0518  2D1A               	goto	u4780
 10086  0519                     u4781:
 10087  0519  2D52               	goto	l6431
 10088  051A                     u4780:
 10089  051A                     l6417:
 10090                           
 10091                           ;main.c: 1035:                     valTempo = 0;
 10092  051A  01A4               	clrf	_valTempo
 10093  051B  01A5               	clrf	_valTempo+1
 10094  051C  2D52               	goto	l6431
 10095  051D                     l6419:
 10096  051D  3003               	movlw	3
 10097  051E  0238               	subwf	_noteOnTempo,w
 10098  051F  1803               	skipnc
 10099  0520  2D22               	goto	u4791
 10100  0521  2D23               	goto	u4790
 10101  0522                     u4791:
 10102  0522  2D40               	goto	l6427
 10103  0523                     u4790:
 10104  0523                     l6421:
 10105                           
 10106                           ;main.c: 1037:                 if(stepsNote > 4) {
 10107  0523  3005               	movlw	5
 10108  0524  0239               	subwf	_stepsNote,w
 10109  0525  1C03               	skipc
 10110  0526  2D28               	goto	u4801
 10111  0527  2D29               	goto	u4800
 10112  0528                     u4801:
 10113  0528  2D52               	goto	l6431
 10114  0529                     u4800:
 10115  0529                     l6423:
 10116                           
 10117                           ;main.c: 1038:                     valTempo += 13;
 10118  0529  300D               	movlw	13
 10119  052A  07A4               	addwf	_valTempo,f
 10120  052B  3000               	movlw	0
 10121  052C  3DA5               	addwfc	_valTempo+1,f
 10122                           
 10123                           ;main.c: 1039:                     if(valTempo > 255)
 10124  052D  0825               	movf	_valTempo+1,w
 10125  052E  3A80               	xorlw	128
 10126  052F  00D6               	movwf	??_musik
 10127  0530  3081               	movlw	129
 10128  0531  0256               	subwf	??_musik,w
 10129  0532  1D03               	skipz
 10130  0533  2D36               	goto	u4815
 10131  0534  3000               	movlw	0
 10132  0535  0224               	subwf	_valTempo,w
 10133  0536                     u4815:
 10134  0536  1C03               	skipc
 10135  0537  2D39               	goto	u4811
 10136  0538  2D3A               	goto	u4810
 10137  0539                     u4811:
 10138  0539  2D52               	goto	l6431
 10139  053A                     u4810:
 10140  053A                     l6425:
 10141                           
 10142                           ;main.c: 1040:                         valTempo = 255;
 10143  053A  30FF               	movlw	255
 10144  053B  0020               	movlb	0	; select bank0
 10145  053C  00A4               	movwf	_valTempo
 10146  053D  3000               	movlw	0
 10147  053E  00A5               	movwf	_valTempo+1
 10148  053F  2D52               	goto	l6431
 10149  0540                     l6427:
 10150                           
 10151                           ;main.c: 1043:                 valTempo += 13;
 10152  0540  300D               	movlw	13
 10153  0541  07A4               	addwf	_valTempo,f
 10154  0542  3000               	movlw	0
 10155  0543  3DA5               	addwfc	_valTempo+1,f
 10156                           
 10157                           ;main.c: 1044:                 if(valTempo > 255)
 10158  0544  0825               	movf	_valTempo+1,w
 10159  0545  3A80               	xorlw	128
 10160  0546  00D6               	movwf	??_musik
 10161  0547  3081               	movlw	129
 10162  0548  0256               	subwf	??_musik,w
 10163  0549  1D03               	skipz
 10164  054A  2D4D               	goto	u4825
 10165  054B  3000               	movlw	0
 10166  054C  0224               	subwf	_valTempo,w
 10167  054D                     u4825:
 10168  054D  1C03               	skipc
 10169  054E  2D50               	goto	u4821
 10170  054F  2D51               	goto	u4820
 10171  0550                     u4821:
 10172  0550  2D52               	goto	l6431
 10173  0551                     u4820:
 10174  0551  2D3A               	goto	l6425
 10175  0552                     l6431:
 10176                           
 10177                           ;main.c: 1047:             if(noteNum == 5 || noteNum == 53) {
 10178  0552  3005               	movlw	5
 10179  0553  0020               	movlb	0	; select bank0
 10180  0554  0637               	xorwf	_noteNum,w
 10181  0555  1903               	btfsc	3,2
 10182  0556  2D58               	goto	u4831
 10183  0557  2D59               	goto	u4830
 10184  0558                     u4831:
 10185  0558  2D5F               	goto	l6435
 10186  0559                     u4830:
 10187  0559                     l6433:
 10188  0559  3035               	movlw	53
 10189  055A  0637               	xorwf	_noteNum,w
 10190  055B  1D03               	btfss	3,2
 10191  055C  2D5E               	goto	u4841
 10192  055D  2D5F               	goto	u4840
 10193  055E                     u4841:
 10194  055E  2D71               	goto	l6441
 10195  055F                     u4840:
 10196  055F                     l6435:
 10197                           
 10198                           ;main.c: 1048:                 valBip1 -= 20;
 10199  055F  30EC               	movlw	236
 10200  0560  07A2               	addwf	_valBip1,f
 10201  0561  30FF               	movlw	255
 10202  0562  3DA3               	addwfc	_valBip1+1,f
 10203                           
 10204                           ;main.c: 1049:                 valBip2 -= 20;
 10205  0563  30EC               	movlw	236
 10206  0564  07A0               	addwf	_valBip2,f
 10207  0565  30FF               	movlw	255
 10208  0566  3DA1               	addwfc	_valBip2+1,f
 10209  0567                     l6437:
 10210                           
 10211                           ;main.c: 1050:                 if(valBip1 < 0) {
 10212  0567  1FA3               	btfss	_valBip1+1,7
 10213  0568  2D6A               	goto	u4851
 10214  0569  2D6B               	goto	u4850
 10215  056A                     u4851:
 10216  056A  2EBE               	goto	l6539
 10217  056B                     u4850:
 10218  056B                     l6439:
 10219                           
 10220                           ;main.c: 1051:                     valBip1 = 0;
 10221  056B  01A2               	clrf	_valBip1
 10222  056C  01A3               	clrf	_valBip1+1
 10223                           
 10224                           ;main.c: 1052:                     valBip2 = 0;
 10225  056D  01A0               	clrf	_valBip2
 10226  056E  01A1               	clrf	_valBip2+1
 10227  056F  2EBE               	goto	l6539
 10228  0570                     l1206:	
 10229                           ;main.c: 1053:                 }
 10230                           
 10231                           
 10232                           ;main.c: 1054:             }else if(noteNum == 8 || noteNum == 56) {
 10233  0570  2EBE               	goto	l6539
 10234  0571                     l6441:
 10235  0571  3008               	movlw	8
 10236  0572  0637               	xorwf	_noteNum,w
 10237  0573  1903               	btfsc	3,2
 10238  0574  2D76               	goto	u4861
 10239  0575  2D77               	goto	u4860
 10240  0576                     u4861:
 10241  0576  2D7D               	goto	l6445
 10242  0577                     u4860:
 10243  0577                     l6443:
 10244  0577  3038               	movlw	56
 10245  0578  0637               	xorwf	_noteNum,w
 10246  0579  1D03               	btfss	3,2
 10247  057A  2D7C               	goto	u4871
 10248  057B  2D7D               	goto	u4870
 10249  057C                     u4871:
 10250  057C  2DAB               	goto	l6461
 10251  057D                     u4870:
 10252  057D                     l6445:
 10253                           
 10254                           ;main.c: 1055:                 if(stepsNote < 1) {
 10255  057D  0839               	movf	_stepsNote,w
 10256  057E  1D03               	btfss	3,2
 10257  057F  2D81               	goto	u4881
 10258  0580  2D82               	goto	u4880
 10259  0581                     u4881:
 10260  0581  2D85               	goto	l6449
 10261  0582                     u4880:
 10262  0582                     l6447:
 10263                           
 10264                           ;main.c: 1056:                     valBip1 = 0;
 10265  0582  01A2               	clrf	_valBip1
 10266  0583  01A3               	clrf	_valBip1+1
 10267                           
 10268                           ;main.c: 1057:                 }else if(stepsNote < 7) {
 10269  0584  2EBE               	goto	l6539
 10270  0585                     l6449:
 10271  0585  3007               	movlw	7
 10272  0586  0239               	subwf	_stepsNote,w
 10273  0587  1803               	skipnc
 10274  0588  2D8A               	goto	u4891
 10275  0589  2D8B               	goto	u4890
 10276  058A                     u4891:
 10277  058A  2DA2               	goto	l6455
 10278  058B                     u4890:
 10279  058B                     l6451:
 10280                           
 10281                           ;main.c: 1058:                     valBip1 += 43;
 10282  058B  302B               	movlw	43
 10283  058C  07A2               	addwf	_valBip1,f
 10284  058D  3000               	movlw	0
 10285  058E  3DA3               	addwfc	_valBip1+1,f
 10286                           
 10287                           ;main.c: 1059:                     if(valBip1 > 255)
 10288  058F  0823               	movf	_valBip1+1,w
 10289  0590  3A80               	xorlw	128
 10290  0591  00D6               	movwf	??_musik
 10291  0592  3081               	movlw	129
 10292  0593  0256               	subwf	??_musik,w
 10293  0594  1D03               	skipz
 10294  0595  2D98               	goto	u4905
 10295  0596  3000               	movlw	0
 10296  0597  0222               	subwf	_valBip1,w
 10297  0598                     u4905:
 10298  0598  1C03               	skipc
 10299  0599  2D9B               	goto	u4901
 10300  059A  2D9C               	goto	u4900
 10301  059B                     u4901:
 10302  059B  2D70               	goto	l1206
 10303  059C                     u4900:
 10304  059C                     l6453:
 10305                           
 10306                           ;main.c: 1060:                         valBip1 = 255;
 10307  059C  30FF               	movlw	255
 10308  059D  0020               	movlb	0	; select bank0
 10309  059E  00A2               	movwf	_valBip1
 10310  059F  3000               	movlw	0
 10311  05A0  00A3               	movwf	_valBip1+1
 10312  05A1  2EBE               	goto	l6539
 10313  05A2                     l6455:
 10314                           
 10315                           ;main.c: 1062:                     valBip1 -= 43;
 10316  05A2  30D5               	movlw	213
 10317  05A3  07A2               	addwf	_valBip1,f
 10318  05A4  30FF               	movlw	255
 10319  05A5  3DA3               	addwfc	_valBip1+1,f
 10320  05A6                     l6457:
 10321                           
 10322                           ;main.c: 1063:                     if(valBip1 < 0)
 10323  05A6  1FA3               	btfss	_valBip1+1,7
 10324  05A7  2DA9               	goto	u4911
 10325  05A8  2DAA               	goto	u4910
 10326  05A9                     u4911:
 10327  05A9  2D70               	goto	l1206
 10328  05AA                     u4910:
 10329  05AA  2D82               	goto	l6447
 10330  05AB                     l6461:
 10331  05AB  300B               	movlw	11
 10332  05AC  0637               	xorwf	_noteNum,w
 10333  05AD  1903               	btfsc	3,2
 10334  05AE  2DB0               	goto	u4921
 10335  05AF  2DB1               	goto	u4920
 10336  05B0                     u4921:
 10337  05B0  2DC3               	goto	l6469
 10338  05B1                     u4920:
 10339  05B1                     l6463:
 10340  05B1  300E               	movlw	14
 10341  05B2  0637               	xorwf	_noteNum,w
 10342  05B3  1903               	btfsc	3,2
 10343  05B4  2DB6               	goto	u4931
 10344  05B5  2DB7               	goto	u4930
 10345  05B6                     u4931:
 10346  05B6  2DC3               	goto	l6469
 10347  05B7                     u4930:
 10348  05B7                     l6465:
 10349  05B7  303B               	movlw	59
 10350  05B8  0637               	xorwf	_noteNum,w
 10351  05B9  1903               	btfsc	3,2
 10352  05BA  2DBC               	goto	u4941
 10353  05BB  2DBD               	goto	u4940
 10354  05BC                     u4941:
 10355  05BC  2DC3               	goto	l6469
 10356  05BD                     u4940:
 10357  05BD                     l6467:
 10358  05BD  303E               	movlw	62
 10359  05BE  0637               	xorwf	_noteNum,w
 10360  05BF  1D03               	btfss	3,2
 10361  05C0  2DC2               	goto	u4951
 10362  05C1  2DC3               	goto	u4950
 10363  05C2                     u4951:
 10364  05C2  2DF0               	goto	l6487
 10365  05C3                     u4950:
 10366  05C3                     l6469:
 10367                           
 10368                           ;main.c: 1067:                     noteNum == 59 || noteNum == 62){;main.c: 1068:       
      +                                    if(stepsNote < 5) {
 10369  05C3  3005               	movlw	5
 10370  05C4  0239               	subwf	_stepsNote,w
 10371  05C5  1803               	skipnc
 10372  05C6  2DC8               	goto	u4961
 10373  05C7  2DC9               	goto	u4960
 10374  05C8                     u4961:
 10375  05C8  2EBE               	goto	l6539
 10376  05C9                     u4960:
 10377  05C9                     l6471:
 10378                           
 10379                           ;main.c: 1069:                     if(stepsNote < 1) {
 10380  05C9  0839               	movf	_stepsNote,w
 10381  05CA  1D03               	btfss	3,2
 10382  05CB  2DCD               	goto	u4971
 10383  05CC  2DCE               	goto	u4970
 10384  05CD                     u4971:
 10385  05CD  2DCF               	goto	l6475
 10386  05CE                     u4970:
 10387  05CE  2D82               	goto	l6447
 10388  05CF                     l6475:
 10389  05CF  3003               	movlw	3
 10390  05D0  0239               	subwf	_stepsNote,w
 10391  05D1  1803               	skipnc
 10392  05D2  2DD4               	goto	u4981
 10393  05D3  2DD5               	goto	u4980
 10394  05D4                     u4981:
 10395  05D4  2DE7               	goto	l6481
 10396  05D5                     u4980:
 10397  05D5                     l6477:
 10398                           
 10399                           ;main.c: 1072:                         valBip1 += 128;
 10400  05D5  3080               	movlw	128
 10401  05D6  07A2               	addwf	_valBip1,f
 10402  05D7  3000               	movlw	0
 10403  05D8  3DA3               	addwfc	_valBip1+1,f
 10404                           
 10405                           ;main.c: 1073:                         if(valBip1 > 255)
 10406  05D9  0823               	movf	_valBip1+1,w
 10407  05DA  3A80               	xorlw	128
 10408  05DB  00D6               	movwf	??_musik
 10409  05DC  3081               	movlw	129
 10410  05DD  0256               	subwf	??_musik,w
 10411  05DE  1D03               	skipz
 10412  05DF  2DE2               	goto	u4995
 10413  05E0  3000               	movlw	0
 10414  05E1  0222               	subwf	_valBip1,w
 10415  05E2                     u4995:
 10416  05E2  1C03               	skipc
 10417  05E3  2DE5               	goto	u4991
 10418  05E4  2DE6               	goto	u4990
 10419  05E5                     u4991:
 10420  05E5  2D70               	goto	l1206
 10421  05E6                     u4990:
 10422  05E6  2D9C               	goto	l6453
 10423  05E7                     l6481:
 10424                           
 10425                           ;main.c: 1076:                         valBip1 -= 128;
 10426  05E7  3080               	movlw	128
 10427  05E8  07A2               	addwf	_valBip1,f
 10428  05E9  30FF               	movlw	255
 10429  05EA  3DA3               	addwfc	_valBip1+1,f
 10430  05EB                     l6483:
 10431                           
 10432                           ;main.c: 1077:                         if(valBip1 < 0)
 10433  05EB  1FA3               	btfss	_valBip1+1,7
 10434  05EC  2DEE               	goto	u5001
 10435  05ED  2DEF               	goto	u5000
 10436  05EE                     u5001:
 10437  05EE  2D70               	goto	l1206
 10438  05EF                     u5000:
 10439  05EF  2D82               	goto	l6447
 10440  05F0                     l6487:
 10441  05F0  301C               	movlw	28
 10442  05F1  0637               	xorwf	_noteNum,w
 10443  05F2  1D03               	btfss	3,2
 10444  05F3  2DF5               	goto	u5011
 10445  05F4  2DF6               	goto	u5010
 10446  05F5                     u5011:
 10447  05F5  2E15               	goto	l6493
 10448  05F6                     u5010:
 10449  05F6                     l6489:
 10450                           
 10451                           ;main.c: 1082:                 valBip1 += 20;
 10452  05F6  3014               	movlw	20
 10453  05F7  07A2               	addwf	_valBip1,f
 10454  05F8  3000               	movlw	0
 10455  05F9  3DA3               	addwfc	_valBip1+1,f
 10456                           
 10457                           ;main.c: 1083:                 valBip2 += 20;
 10458  05FA  3014               	movlw	20
 10459  05FB  07A0               	addwf	_valBip2,f
 10460  05FC  3000               	movlw	0
 10461  05FD  3DA1               	addwfc	_valBip2+1,f
 10462                           
 10463                           ;main.c: 1084:                 if(valBip1 > 255) {
 10464  05FE  0823               	movf	_valBip1+1,w
 10465  05FF  3A80               	xorlw	128
 10466  0600  00D6               	movwf	??_musik
 10467  0601  3081               	movlw	129
 10468  0602  0256               	subwf	??_musik,w
 10469  0603  1D03               	skipz
 10470  0604  2E07               	goto	u5025
 10471  0605  3000               	movlw	0
 10472  0606  0222               	subwf	_valBip1,w
 10473  0607                     u5025:
 10474  0607  1C03               	skipc
 10475  0608  2E0A               	goto	u5021
 10476  0609  2E0B               	goto	u5020
 10477  060A                     u5021:
 10478  060A  2EBE               	goto	l6539
 10479  060B                     u5020:
 10480  060B                     l6491:
 10481                           
 10482                           ;main.c: 1085:                     valBip1 = 255;
 10483  060B  30FF               	movlw	255
 10484  060C  0020               	movlb	0	; select bank0
 10485  060D  00A2               	movwf	_valBip1
 10486  060E  3000               	movlw	0
 10487  060F  00A3               	movwf	_valBip1+1
 10488                           
 10489                           ;main.c: 1086:                     valBip2 = 255;
 10490  0610  30FF               	movlw	255
 10491  0611  00A0               	movwf	_valBip2
 10492  0612  3000               	movlw	0
 10493  0613  00A1               	movwf	_valBip2+1
 10494  0614  2EBE               	goto	l6539
 10495  0615                     l6493:
 10496  0615  3010               	movlw	16
 10497  0616  0637               	xorwf	_noteNum,w
 10498  0617  1903               	btfsc	3,2
 10499  0618  2E1A               	goto	u5031
 10500  0619  2E1B               	goto	u5030
 10501  061A                     u5031:
 10502  061A  2E51               	goto	l6513
 10503  061B                     u5030:
 10504  061B                     l6495:
 10505  061B  3011               	movlw	17
 10506  061C  0637               	xorwf	_noteNum,w
 10507  061D  1903               	btfsc	3,2
 10508  061E  2E20               	goto	u5041
 10509  061F  2E21               	goto	u5040
 10510  0620                     u5041:
 10511  0620  2E51               	goto	l6513
 10512  0621                     u5040:
 10513  0621                     l6497:
 10514  0621  3013               	movlw	19
 10515  0622  0637               	xorwf	_noteNum,w
 10516  0623  1903               	btfsc	3,2
 10517  0624  2E26               	goto	u5051
 10518  0625  2E27               	goto	u5050
 10519  0626                     u5051:
 10520  0626  2E51               	goto	l6513
 10521  0627                     u5050:
 10522  0627                     l6499:
 10523  0627  3014               	movlw	20
 10524  0628  0637               	xorwf	_noteNum,w
 10525  0629  1903               	btfsc	3,2
 10526  062A  2E2C               	goto	u5061
 10527  062B  2E2D               	goto	u5060
 10528  062C                     u5061:
 10529  062C  2E51               	goto	l6513
 10530  062D                     u5060:
 10531  062D                     l6501:
 10532  062D  3016               	movlw	22
 10533  062E  0637               	xorwf	_noteNum,w
 10534  062F  1903               	btfsc	3,2
 10535  0630  2E32               	goto	u5071
 10536  0631  2E33               	goto	u5070
 10537  0632                     u5071:
 10538  0632  2E51               	goto	l6513
 10539  0633                     u5070:
 10540  0633                     l6503:
 10541  0633  3040               	movlw	64
 10542  0634  0637               	xorwf	_noteNum,w
 10543  0635  1903               	btfsc	3,2
 10544  0636  2E38               	goto	u5081
 10545  0637  2E39               	goto	u5080
 10546  0638                     u5081:
 10547  0638  2E51               	goto	l6513
 10548  0639                     u5080:
 10549  0639                     l6505:
 10550  0639  3041               	movlw	65
 10551  063A  0637               	xorwf	_noteNum,w
 10552  063B  1903               	btfsc	3,2
 10553  063C  2E3E               	goto	u5091
 10554  063D  2E3F               	goto	u5090
 10555  063E                     u5091:
 10556  063E  2E51               	goto	l6513
 10557  063F                     u5090:
 10558  063F                     l6507:
 10559  063F  3043               	movlw	67
 10560  0640  0637               	xorwf	_noteNum,w
 10561  0641  1903               	btfsc	3,2
 10562  0642  2E44               	goto	u5101
 10563  0643  2E45               	goto	u5100
 10564  0644                     u5101:
 10565  0644  2E51               	goto	l6513
 10566  0645                     u5100:
 10567  0645                     l6509:
 10568  0645  3044               	movlw	68
 10569  0646  0637               	xorwf	_noteNum,w
 10570  0647  1903               	btfsc	3,2
 10571  0648  2E4A               	goto	u5111
 10572  0649  2E4B               	goto	u5110
 10573  064A                     u5111:
 10574  064A  2E51               	goto	l6513
 10575  064B                     u5110:
 10576  064B                     l6511:
 10577  064B  3046               	movlw	70
 10578  064C  0637               	xorwf	_noteNum,w
 10579  064D  1D03               	btfss	3,2
 10580  064E  2E50               	goto	u5121
 10581  064F  2E51               	goto	u5120
 10582  0650                     u5121:
 10583  0650  2D70               	goto	l1206
 10584  0651                     u5120:
 10585  0651                     l6513:
 10586                           
 10587                           ;main.c: 1091:                     noteNum == 70) {;main.c: 1092:                 if(ste
      +                          psNote < 5) {
 10588  0651  3005               	movlw	5
 10589  0652  0239               	subwf	_stepsNote,w
 10590  0653  1803               	skipnc
 10591  0654  2E56               	goto	u5131
 10592  0655  2E57               	goto	u5130
 10593  0656                     u5131:
 10594  0656  2EBE               	goto	l6539
 10595  0657                     u5130:
 10596  0657                     l6515:
 10597                           
 10598                           ;main.c: 1093:                     if(stepsNote < 1) {
 10599  0657  0839               	movf	_stepsNote,w
 10600  0658  1D03               	btfss	3,2
 10601  0659  2E5B               	goto	u5141
 10602  065A  2E5C               	goto	u5140
 10603  065B                     u5141:
 10604  065B  2E5F               	goto	l6519
 10605  065C                     u5140:
 10606  065C                     l6517:
 10607                           
 10608                           ;main.c: 1094:                         valBip2 = 0;
 10609  065C  01A0               	clrf	_valBip2
 10610  065D  01A1               	clrf	_valBip2+1
 10611                           
 10612                           ;main.c: 1095:                     }else if(stepsNote < 3) {
 10613  065E  2EBE               	goto	l6539
 10614  065F                     l6519:
 10615  065F  3003               	movlw	3
 10616  0660  0239               	subwf	_stepsNote,w
 10617  0661  1803               	skipnc
 10618  0662  2E64               	goto	u5151
 10619  0663  2E65               	goto	u5150
 10620  0664                     u5151:
 10621  0664  2E7C               	goto	l6525
 10622  0665                     u5150:
 10623  0665                     l6521:
 10624                           
 10625                           ;main.c: 1096:                         valBip2 += 128;
 10626  0665  3080               	movlw	128
 10627  0666  07A0               	addwf	_valBip2,f
 10628  0667  3000               	movlw	0
 10629  0668  3DA1               	addwfc	_valBip2+1,f
 10630                           
 10631                           ;main.c: 1097:                         if(valBip2 > 255)
 10632  0669  0821               	movf	_valBip2+1,w
 10633  066A  3A80               	xorlw	128
 10634  066B  00D6               	movwf	??_musik
 10635  066C  3081               	movlw	129
 10636  066D  0256               	subwf	??_musik,w
 10637  066E  1D03               	skipz
 10638  066F  2E72               	goto	u5165
 10639  0670  3000               	movlw	0
 10640  0671  0220               	subwf	_valBip2,w
 10641  0672                     u5165:
 10642  0672  1C03               	skipc
 10643  0673  2E75               	goto	u5161
 10644  0674  2E76               	goto	u5160
 10645  0675                     u5161:
 10646  0675  2D70               	goto	l1206
 10647  0676                     u5160:
 10648  0676                     l6523:
 10649                           
 10650                           ;main.c: 1098:                             valBip2 = 255;
 10651  0676  30FF               	movlw	255
 10652  0677  0020               	movlb	0	; select bank0
 10653  0678  00A0               	movwf	_valBip2
 10654  0679  3000               	movlw	0
 10655  067A  00A1               	movwf	_valBip2+1
 10656  067B  2EBE               	goto	l6539
 10657  067C                     l6525:
 10658                           
 10659                           ;main.c: 1100:                         valBip2 -= 128;
 10660  067C  3080               	movlw	128
 10661  067D  07A0               	addwf	_valBip2,f
 10662  067E  30FF               	movlw	255
 10663  067F  3DA1               	addwfc	_valBip2+1,f
 10664  0680                     l6527:
 10665                           
 10666                           ;main.c: 1101:                         if(valBip2 < 0)
 10667  0680  1FA1               	btfss	_valBip2+1,7
 10668  0681  2E83               	goto	u5171
 10669  0682  2E84               	goto	u5170
 10670  0683                     u5171:
 10671  0683  2D70               	goto	l1206
 10672  0684                     u5170:
 10673  0684  2E5C               	goto	l6517
 10674  0685                     l6531:
 10675                           
 10676                           ;main.c: 1107:             valBip1 += 20;
 10677  0685  3014               	movlw	20
 10678  0686  07A2               	addwf	_valBip1,f
 10679  0687  3000               	movlw	0
 10680  0688  3DA3               	addwfc	_valBip1+1,f
 10681                           
 10682                           ;main.c: 1108:             valBip2 += 20;
 10683  0689  3014               	movlw	20
 10684  068A  07A0               	addwf	_valBip2,f
 10685  068B  3000               	movlw	0
 10686  068C  3DA1               	addwfc	_valBip2+1,f
 10687                           
 10688                           ;main.c: 1109:             valTempo += 13;
 10689  068D  300D               	movlw	13
 10690  068E  07A4               	addwf	_valTempo,f
 10691  068F  3000               	movlw	0
 10692  0690  3DA5               	addwfc	_valTempo+1,f
 10693                           
 10694                           ;main.c: 1110:             if(valTempo > 255)
 10695  0691  0825               	movf	_valTempo+1,w
 10696  0692  3A80               	xorlw	128
 10697  0693  00D6               	movwf	??_musik
 10698  0694  3081               	movlw	129
 10699  0695  0256               	subwf	??_musik,w
 10700  0696  1D03               	skipz
 10701  0697  2E9A               	goto	u5185
 10702  0698  3000               	movlw	0
 10703  0699  0224               	subwf	_valTempo,w
 10704  069A                     u5185:
 10705  069A  1C03               	skipc
 10706  069B  2E9D               	goto	u5181
 10707  069C  2E9E               	goto	u5180
 10708  069D                     u5181:
 10709  069D  2EA3               	goto	l1243
 10710  069E                     u5180:
 10711  069E                     l6533:
 10712                           
 10713                           ;main.c: 1111:                 valTempo = 255;
 10714  069E  30FF               	movlw	255
 10715  069F  0020               	movlb	0	; select bank0
 10716  06A0  00A4               	movwf	_valTempo
 10717  06A1  3000               	movlw	0
 10718  06A2  00A5               	movwf	_valTempo+1
 10719  06A3                     l1243:
 10720                           
 10721                           ;main.c: 1112:             if(valBip1 > 255) {
 10722  06A3  0020               	movlb	0	; select bank0
 10723  06A4  0823               	movf	_valBip1+1,w
 10724  06A5  3A80               	xorlw	128
 10725  06A6  00D6               	movwf	??_musik
 10726  06A7  3081               	movlw	129
 10727  06A8  0256               	subwf	??_musik,w
 10728  06A9  1D03               	skipz
 10729  06AA  2EAD               	goto	u5195
 10730  06AB  3000               	movlw	0
 10731  06AC  0222               	subwf	_valBip1,w
 10732  06AD                     u5195:
 10733  06AD  1C03               	skipc
 10734  06AE  2EB0               	goto	u5191
 10735  06AF  2EB1               	goto	u5190
 10736  06B0                     u5191:
 10737  06B0  2EBE               	goto	l6539
 10738  06B1                     u5190:
 10739  06B1                     l6535:
 10740                           
 10741                           ;main.c: 1113:                 valBip1 = 255;
 10742  06B1  30FF               	movlw	255
 10743  06B2  0020               	movlb	0	; select bank0
 10744  06B3  00A2               	movwf	_valBip1
 10745  06B4  3000               	movlw	0
 10746  06B5  00A3               	movwf	_valBip1+1
 10747                           
 10748                           ;main.c: 1114:                 valBip2 = 255;
 10749  06B6  30FF               	movlw	255
 10750  06B7  00A0               	movwf	_valBip2
 10751  06B8  3000               	movlw	0
 10752  06B9  00A1               	movwf	_valBip2+1
 10753  06BA                     l6537:
 10754                           
 10755                           ;main.c: 1115:                 rstMusik(0);
 10756  06BA  3000               	movlw	0
 10757  06BB  31A2  22DB  3184   	fcall	_rstMusik
 10758  06BE                     l6539:
 10759                           
 10760                           ;main.c: 1118:         if(musikRun && stepsNote == 13) {
 10761  06BE  0020               	movlb	0	; select bank0
 10762  06BF  083A               	movf	_musikRun,w
 10763  06C0  1903               	btfsc	3,2
 10764  06C1  2EC3               	goto	u5201
 10765  06C2  2EC4               	goto	u5200
 10766  06C3                     u5201:
 10767  06C3  2EDA               	goto	l6553
 10768  06C4                     u5200:
 10769  06C4                     l6541:
 10770  06C4  300D               	movlw	13
 10771  06C5  0639               	xorwf	_stepsNote,w
 10772  06C6  1D03               	btfss	3,2
 10773  06C7  2EC9               	goto	u5211
 10774  06C8  2ECA               	goto	u5210
 10775  06C9                     u5211:
 10776  06C9  2EDA               	goto	l6553
 10777  06CA                     u5210:
 10778  06CA                     l6543:
 10779                           
 10780                           ;main.c: 1119:             stepsNote = 0;
 10781  06CA  01B9               	clrf	_stepsNote
 10782  06CB                     l6545:
 10783                           
 10784                           ;main.c: 1120:             noteNum++;
 10785  06CB  3001               	movlw	1
 10786  06CC  00D6               	movwf	??_musik
 10787  06CD  0856               	movf	??_musik,w
 10788  06CE  07B7               	addwf	_noteNum,f
 10789  06CF                     l6547:
 10790                           
 10791                           ;main.c: 1121:             noteOnTempo++;
 10792  06CF  3001               	movlw	1
 10793  06D0  00D6               	movwf	??_musik
 10794  06D1  0856               	movf	??_musik,w
 10795  06D2  07B8               	addwf	_noteOnTempo,f
 10796  06D3                     l6549:
 10797                           
 10798                           ;main.c: 1122:             if(noteOnTempo > 3)
 10799  06D3  3004               	movlw	4
 10800  06D4  0238               	subwf	_noteOnTempo,w
 10801  06D5  1C03               	skipc
 10802  06D6  2ED8               	goto	u5221
 10803  06D7  2ED9               	goto	u5220
 10804  06D8                     u5221:
 10805  06D8  2EDA               	goto	l6553
 10806  06D9                     u5220:
 10807  06D9                     l6551:
 10808                           
 10809                           ;main.c: 1123:                 noteOnTempo = 0;
 10810  06D9  01B8               	clrf	_noteOnTempo
 10811  06DA                     l6553:
 10812                           
 10813                           ;main.c: 1125:         val2group(19, (unsigned char)valTempo);
 10814  06DA  0824               	movf	_valTempo,w
 10815  06DB  00D6               	movwf	??_musik
 10816  06DC  0856               	movf	??_musik,w
 10817  06DD  00D1               	movwf	val2group@val
 10818  06DE  3013               	movlw	19
 10819  06DF  3196  2662  3184   	fcall	_val2group
 10820  06E2                     l6555:
 10821                           
 10822                           ;main.c: 1126:         val2group(20, (unsigned char)valTempo);
 10823  06E2  0020               	movlb	0	; select bank0
 10824  06E3  0824               	movf	_valTempo,w
 10825  06E4  00D6               	movwf	??_musik
 10826  06E5  0856               	movf	??_musik,w
 10827  06E6  00D1               	movwf	val2group@val
 10828  06E7  3014               	movlw	20
 10829  06E8  3196  2662  3184   	fcall	_val2group
 10830  06EB                     l6557:
 10831                           
 10832                           ;main.c: 1127:         val2group(21, (unsigned char)valTempo);
 10833  06EB  0020               	movlb	0	; select bank0
 10834  06EC  0824               	movf	_valTempo,w
 10835  06ED  00D6               	movwf	??_musik
 10836  06EE  0856               	movf	??_musik,w
 10837  06EF  00D1               	movwf	val2group@val
 10838  06F0  3015               	movlw	21
 10839  06F1  3196  2662  3184   	fcall	_val2group
 10840  06F4                     l6559:
 10841                           
 10842                           ;main.c: 1128:         val2group(22, (unsigned char)valTempo);
 10843  06F4  0020               	movlb	0	; select bank0
 10844  06F5  0824               	movf	_valTempo,w
 10845  06F6  00D6               	movwf	??_musik
 10846  06F7  0856               	movf	??_musik,w
 10847  06F8  00D1               	movwf	val2group@val
 10848  06F9  3016               	movlw	22
 10849  06FA  3196  2662  3184   	fcall	_val2group
 10850  06FD                     l6561:
 10851                           
 10852                           ;main.c: 1129:         val2group(11, (unsigned char)valTempo);
 10853  06FD  0020               	movlb	0	; select bank0
 10854  06FE  0824               	movf	_valTempo,w
 10855  06FF  00D6               	movwf	??_musik
 10856  0700  0856               	movf	??_musik,w
 10857  0701  00D1               	movwf	val2group@val
 10858  0702  300B               	movlw	11
 10859  0703  3196  2662  3184   	fcall	_val2group
 10860  0706                     l6563:
 10861                           
 10862                           ;main.c: 1130:         val2group(12, (unsigned char)valTempo);
 10863  0706  0020               	movlb	0	; select bank0
 10864  0707  0824               	movf	_valTempo,w
 10865  0708  00D6               	movwf	??_musik
 10866  0709  0856               	movf	??_musik,w
 10867  070A  00D1               	movwf	val2group@val
 10868  070B  300C               	movlw	12
 10869  070C  3196  2662  3184   	fcall	_val2group
 10870  070F                     l6565:
 10871                           
 10872                           ;main.c: 1131:         val2group(9, (unsigned char)valTempo);
 10873  070F  0020               	movlb	0	; select bank0
 10874  0710  0824               	movf	_valTempo,w
 10875  0711  00D6               	movwf	??_musik
 10876  0712  0856               	movf	??_musik,w
 10877  0713  00D1               	movwf	val2group@val
 10878  0714  3009               	movlw	9
 10879  0715  3196  2662  3184   	fcall	_val2group
 10880  0718                     l6567:
 10881                           
 10882                           ;main.c: 1132:         val2group(10, (unsigned char)valTempo);
 10883  0718  0020               	movlb	0	; select bank0
 10884  0719  0824               	movf	_valTempo,w
 10885  071A  00D6               	movwf	??_musik
 10886  071B  0856               	movf	??_musik,w
 10887  071C  00D1               	movwf	val2group@val
 10888  071D  300A               	movlw	10
 10889  071E  3196  2662  3184   	fcall	_val2group
 10890  0721                     l6569:
 10891                           
 10892                           ;main.c: 1133:         val2group(7, (unsigned char)valTempo);
 10893  0721  0020               	movlb	0	; select bank0
 10894  0722  0824               	movf	_valTempo,w
 10895  0723  00D6               	movwf	??_musik
 10896  0724  0856               	movf	??_musik,w
 10897  0725  00D1               	movwf	val2group@val
 10898  0726  3007               	movlw	7
 10899  0727  3196  2662  3184   	fcall	_val2group
 10900  072A                     l6571:
 10901                           
 10902                           ;main.c: 1134:         val2group(8, (unsigned char)valTempo);
 10903  072A  0020               	movlb	0	; select bank0
 10904  072B  0824               	movf	_valTempo,w
 10905  072C  00D6               	movwf	??_musik
 10906  072D  0856               	movf	??_musik,w
 10907  072E  00D1               	movwf	val2group@val
 10908  072F  3008               	movlw	8
 10909  0730  3196  2662  3184   	fcall	_val2group
 10910  0733                     l6573:
 10911                           
 10912                           ;main.c: 1135:         val2group(2, (unsigned char)valBip2);
 10913  0733  0020               	movlb	0	; select bank0
 10914  0734  0820               	movf	_valBip2,w
 10915  0735  00D6               	movwf	??_musik
 10916  0736  0856               	movf	??_musik,w
 10917  0737  00D1               	movwf	val2group@val
 10918  0738  3002               	movlw	2
 10919  0739  3196  2662  3184   	fcall	_val2group
 10920  073C                     l6575:
 10921                           
 10922                           ;main.c: 1136:         val2group(3, (unsigned char)valBip2);
 10923  073C  0020               	movlb	0	; select bank0
 10924  073D  0820               	movf	_valBip2,w
 10925  073E  00D6               	movwf	??_musik
 10926  073F  0856               	movf	??_musik,w
 10927  0740  00D1               	movwf	val2group@val
 10928  0741  3003               	movlw	3
 10929  0742  3196  2662  3184   	fcall	_val2group
 10930  0745                     l6577:
 10931                           
 10932                           ;main.c: 1137:         val2group(4, (unsigned char)valBip2);
 10933  0745  0020               	movlb	0	; select bank0
 10934  0746  0820               	movf	_valBip2,w
 10935  0747  00D6               	movwf	??_musik
 10936  0748  0856               	movf	??_musik,w
 10937  0749  00D1               	movwf	val2group@val
 10938  074A  3004               	movlw	4
 10939  074B  3196  2662  3184   	fcall	_val2group
 10940  074E                     l6579:
 10941                           
 10942                           ;main.c: 1138:         val2group(13, (unsigned char)valBip1);
 10943  074E  0020               	movlb	0	; select bank0
 10944  074F  0822               	movf	_valBip1,w
 10945  0750  00D6               	movwf	??_musik
 10946  0751  0856               	movf	??_musik,w
 10947  0752  00D1               	movwf	val2group@val
 10948  0753  300D               	movlw	13
 10949  0754  3196  2662  3184   	fcall	_val2group
 10950  0757                     l6581:
 10951                           
 10952                           ;main.c: 1139:         val2group(14, (unsigned char)valBip1);
 10953  0757  0020               	movlb	0	; select bank0
 10954  0758  0822               	movf	_valBip1,w
 10955  0759  00D6               	movwf	??_musik
 10956  075A  0856               	movf	??_musik,w
 10957  075B  00D1               	movwf	val2group@val
 10958  075C  300E               	movlw	14
 10959  075D  3196  2662  3184   	fcall	_val2group
 10960  0760                     l6583:
 10961                           
 10962                           ;main.c: 1140:         val2group(15, (unsigned char)valBip1);
 10963  0760  0020               	movlb	0	; select bank0
 10964  0761  0822               	movf	_valBip1,w
 10965  0762  00D6               	movwf	??_musik
 10966  0763  0856               	movf	??_musik,w
 10967  0764  00D1               	movwf	val2group@val
 10968  0765  300F               	movlw	15
 10969  0766  3196  2662  3184   	fcall	_val2group
 10970  0769                     l6585:
 10971                           
 10972                           ;main.c: 1141:         val2group(16, (unsigned char)valBip1);
 10973  0769  0020               	movlb	0	; select bank0
 10974  076A  0822               	movf	_valBip1,w
 10975  076B  00D6               	movwf	??_musik
 10976  076C  0856               	movf	??_musik,w
 10977  076D  00D1               	movwf	val2group@val
 10978  076E  3010               	movlw	16
 10979  076F  3196  2662  3184   	fcall	_val2group
 10980  0772                     l6587:
 10981                           
 10982                           ;main.c: 1142:         val2group(17, (unsigned char)valBip1);
 10983  0772  0020               	movlb	0	; select bank0
 10984  0773  0822               	movf	_valBip1,w
 10985  0774  00D6               	movwf	??_musik
 10986  0775  0856               	movf	??_musik,w
 10987  0776  00D1               	movwf	val2group@val
 10988  0777  3011               	movlw	17
 10989  0778  3196  2662  3184   	fcall	_val2group
 10990  077B                     l6589:
 10991                           
 10992                           ;main.c: 1143:         val2group(18, (unsigned char)valBip1);
 10993  077B  0020               	movlb	0	; select bank0
 10994  077C  0822               	movf	_valBip1,w
 10995  077D  00D6               	movwf	??_musik
 10996  077E  0856               	movf	??_musik,w
 10997  077F  00D1               	movwf	val2group@val
 10998  0780  3012               	movlw	18
 10999  0781  3196  2662  3184   	fcall	_val2group
 11000  0784                     l6591:
 11001                           
 11002                           ;main.c: 1144:         sendOrderX();
 11003  0784  31A0  20E0  3184   	fcall	_sendOrderX
 11004  0787                     l6593:
 11005                           
 11006                           ;main.c: 1145:         ritmCont++;
 11007  0787  3001               	movlw	1
 11008  0788  0021               	movlb	1	; select bank1
 11009  0789  07B7               	addwf	_ritmCont^(0+128),f
 11010  078A  3000               	movlw	0
 11011  078B  3DB8               	addwfc	(_ritmCont+1)^(0+128),f
 11012  078C                     l1247:
 11013  078C  0008               	return
 11014  078D                     __end_of_musik:
 11015                           
 11016                           	psect	text17
 11017  1ABF                     __ptext17:	
 11018 ;; *************** function _maskOn *****************
 11019 ;; Defined at:
 11020 ;;		line 837 in file "main.c"
 11021 ;; Parameters:    Size  Location     Type
 11022 ;;		None
 11023 ;; Auto vars:     Size  Location     Type
 11024 ;;		None
 11025 ;; Return value:  Size  Location     Type
 11026 ;;                  1    wreg      void 
 11027 ;; Registers used:
 11028 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11029 ;; Tracked objects:
 11030 ;;		On entry : 0/0
 11031 ;;		On exit  : 0/0
 11032 ;;		Unchanged: 0/0
 11033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11036 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11037 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11038 ;;Total ram usage:        4 bytes
 11039 ;; Hardware stack levels used: 1
 11040 ;; Hardware stack levels required when called: 12
 11041 ;; This function calls:
 11042 ;;		_rstMaskOn
 11043 ;;		_sendOrderX
 11044 ;;		_val2group
 11045 ;; This function is called by:
 11046 ;;		_secuences
 11047 ;; This function uses a non-reentrant model
 11048 ;;
 11049                           
 11050                           
 11051                           ;psect for function _maskOn
 11052  1ABF                     _maskOn:
 11053  1ABF                     l6229:	
 11054                           ;incstack = 0
 11055                           ; Regs used in _maskOn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11056                           
 11057                           
 11058                           ;main.c: 838:     if(runMaskOn && contTimMaskOn < 60) {
 11059  1ABF  0021               	movlb	1	; select bank1
 11060  1AC0  085F               	movf	_runMaskOn^(0+128),w
 11061  1AC1  1903               	btfsc	3,2
 11062  1AC2  2AC4               	goto	u4391
 11063  1AC3  2AC5               	goto	u4390
 11064  1AC4                     u4391:
 11065  1AC4  2B18               	goto	l1113
 11066  1AC5                     u4390:
 11067  1AC5                     l6231:
 11068  1AC5  3000               	movlw	0
 11069  1AC6  0242               	subwf	(_contTimMaskOn+1)^(0+128),w
 11070  1AC7  303C               	movlw	60
 11071  1AC8  1903               	skipnz
 11072  1AC9  0241               	subwf	_contTimMaskOn^(0+128),w
 11073  1ACA  1803               	skipnc
 11074  1ACB  2ACD               	goto	u4401
 11075  1ACC  2ACE               	goto	u4400
 11076  1ACD                     u4401:
 11077  1ACD  2B18               	goto	l1113
 11078  1ACE                     u4400:
 11079  1ACE                     l6233:
 11080                           
 11081                           ;main.c: 839:         contTimMaskOn++;
 11082  1ACE  3001               	movlw	1
 11083  1ACF  07C1               	addwf	_contTimMaskOn^(0+128),f
 11084  1AD0  3000               	movlw	0
 11085  1AD1  3DC2               	addwfc	(_contTimMaskOn+1)^(0+128),f
 11086  1AD2                     l6235:
 11087                           
 11088                           ;main.c: 840:         if(contTimMaskOn == (short)4*(indexMaskOn + 1)) {
 11089  1AD2  0844               	movf	(_indexMaskOn+1)^(0+128),w
 11090  1AD3  0020               	movlb	0	; select bank0
 11091  1AD4  00D7               	movwf	??_maskOn+1
 11092  1AD5  0021               	movlb	1	; select bank1
 11093  1AD6  0843               	movf	_indexMaskOn^(0+128),w
 11094  1AD7  0020               	movlb	0	; select bank0
 11095  1AD8  00D6               	movwf	??_maskOn
 11096  1AD9  35D6               	lslf	??_maskOn,f
 11097  1ADA  0DD7               	rlf	??_maskOn+1,f
 11098  1ADB  35D6               	lslf	??_maskOn,f
 11099  1ADC  0DD7               	rlf	??_maskOn+1,f
 11100  1ADD  0856               	movf	??_maskOn,w
 11101  1ADE  3E04               	addlw	4
 11102  1ADF  00D8               	movwf	??_maskOn+2
 11103  1AE0  3000               	movlw	0
 11104  1AE1  3D57               	addwfc	??_maskOn+1,w
 11105  1AE2  00D9               	movwf	??_maskOn+3
 11106  1AE3  0021               	movlb	1	; select bank1
 11107  1AE4  0842               	movf	(_contTimMaskOn+1)^(0+128),w
 11108  1AE5  0020               	movlb	0	; select bank0
 11109  1AE6  0659               	xorwf	??_maskOn+3,w
 11110  1AE7  1D03               	skipz
 11111  1AE8  2AED               	goto	u4415
 11112  1AE9  0021               	movlb	1	; select bank1
 11113  1AEA  0841               	movf	_contTimMaskOn^(0+128),w
 11114  1AEB  0020               	movlb	0	; select bank0
 11115  1AEC  0658               	xorwf	??_maskOn+2,w
 11116  1AED                     u4415:
 11117  1AED  1D03               	skipz
 11118  1AEE  2AF0               	goto	u4411
 11119  1AEF  2AF1               	goto	u4410
 11120  1AF0                     u4411:
 11121  1AF0  2B18               	goto	l1113
 11122  1AF1                     u4410:
 11123  1AF1                     l6237:
 11124                           
 11125                           ;main.c: 841:             val2group(1, seqMaskOn[indexMaskOn]);
 11126  1AF1  0021               	movlb	1	; select bank1
 11127  1AF2  0843               	movf	_indexMaskOn^(0+128),w
 11128  1AF3  3E55               	addlw	(low (_seqMaskOn| (0+768)))& (0+255)
 11129  1AF4  0086               	movwf	6
 11130  1AF5  3003               	movlw	3	; select bank6/7
 11131  1AF6  0087               	movwf	7
 11132  1AF7  0801               	movf	1,w
 11133  1AF8  0020               	movlb	0	; select bank0
 11134  1AF9  00D6               	movwf	??_maskOn
 11135  1AFA  0856               	movf	??_maskOn,w
 11136  1AFB  00D1               	movwf	val2group@val
 11137  1AFC  3001               	movlw	1
 11138  1AFD  3196  2662  319A   	fcall	_val2group
 11139  1B00                     l6239:
 11140                           
 11141                           ;main.c: 842:             indexMaskOn++;
 11142  1B00  3001               	movlw	1
 11143  1B01  0021               	movlb	1	; select bank1
 11144  1B02  07C3               	addwf	_indexMaskOn^(0+128),f
 11145  1B03  3000               	movlw	0
 11146  1B04  3DC4               	addwfc	(_indexMaskOn+1)^(0+128),f
 11147  1B05                     l6241:
 11148                           
 11149                           ;main.c: 843:             sendOrderX();
 11150  1B05  31A0  20E0  319A   	fcall	_sendOrderX
 11151  1B08                     l6243:
 11152                           
 11153                           ;main.c: 844:             if(indexMaskOn >= 10) {
 11154  1B08  3000               	movlw	0
 11155  1B09  0021               	movlb	1	; select bank1
 11156  1B0A  0244               	subwf	(_indexMaskOn+1)^(0+128),w
 11157  1B0B  300A               	movlw	10
 11158  1B0C  1903               	skipnz
 11159  1B0D  0243               	subwf	_indexMaskOn^(0+128),w
 11160  1B0E  1C03               	skipc
 11161  1B0F  2B11               	goto	u4421
 11162  1B10  2B12               	goto	u4420
 11163  1B11                     u4421:
 11164  1B11  2B18               	goto	l1113
 11165  1B12                     u4420:
 11166  1B12                     l6245:
 11167                           
 11168                           ;main.c: 845:                 maskIsOn = 1;
 11169  1B12  01E0               	clrf	_maskIsOn^(0+128)
 11170  1B13  0AE0               	incf	_maskIsOn^(0+128),f
 11171  1B14                     l6247:
 11172                           
 11173                           ;main.c: 846:                 rstMaskOn(0);
 11174  1B14  3000               	movlw	0
 11175  1B15  31A2  2243  319A   	fcall	_rstMaskOn
 11176  1B18                     l1113:
 11177  1B18  0008               	return
 11178  1B19                     __end_of_maskOn:
 11179                           
 11180                           	psect	text18
 11181  0844                     __ptext18:	
 11182 ;; *************** function _maskOff *****************
 11183 ;; Defined at:
 11184 ;;		line 859 in file "main.c"
 11185 ;; Parameters:    Size  Location     Type
 11186 ;;		None
 11187 ;; Auto vars:     Size  Location     Type
 11188 ;;  i               1   13[BANK0 ] unsigned char 
 11189 ;;  i               1   12[BANK0 ] unsigned char 
 11190 ;;  i               1   14[BANK0 ] unsigned char 
 11191 ;; Return value:  Size  Location     Type
 11192 ;;                  1    wreg      void 
 11193 ;; Registers used:
 11194 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11195 ;; Tracked objects:
 11196 ;;		On entry : 0/0
 11197 ;;		On exit  : 0/0
 11198 ;;		Unchanged: 0/0
 11199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11201 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11202 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11203 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11204 ;;Total ram usage:        6 bytes
 11205 ;; Hardware stack levels used: 1
 11206 ;; Hardware stack levels required when called: 12
 11207 ;; This function calls:
 11208 ;;		___bmul
 11209 ;;		_rstMaskOff
 11210 ;;		_sendOrderX
 11211 ;;		_val2group
 11212 ;; This function is called by:
 11213 ;;		_secuences
 11214 ;; This function uses a non-reentrant model
 11215 ;;
 11216                           
 11217                           
 11218                           ;psect for function _maskOff
 11219  0844                     _maskOff:
 11220  0844                     l6249:	
 11221                           ;incstack = 0
 11222                           ; Regs used in _maskOff: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11223                           
 11224                           
 11225                           ;main.c: 860:     if(runMaskOff && contTimMaskOff < 150) {
 11226  0844  0020               	movlb	0	; select bank0
 11227  0845  0842               	movf	_runMaskOff,w
 11228  0846  1903               	btfsc	3,2
 11229  0847  2849               	goto	u4431
 11230  0848  284A               	goto	u4430
 11231  0849                     u4431:
 11232  0849  2A35               	goto	l1147
 11233  084A                     u4430:
 11234  084A                     l6251:
 11235  084A  3000               	movlw	0
 11236  084B  0021               	movlb	1	; select bank1
 11237  084C  0240               	subwf	(_contTimMaskOff+1)^(0+128),w
 11238  084D  3096               	movlw	150
 11239  084E  1903               	skipnz
 11240  084F  023F               	subwf	_contTimMaskOff^(0+128),w
 11241  0850  1803               	skipnc
 11242  0851  2853               	goto	u4441
 11243  0852  2854               	goto	u4440
 11244  0853                     u4441:
 11245  0853  2A35               	goto	l1147
 11246  0854                     u4440:
 11247  0854                     l6253:
 11248                           
 11249                           ;main.c: 861:         if(contTimMaskOff < 1) {
 11250  0854  083F               	movf	_contTimMaskOff^(0+128),w
 11251  0855  0440               	iorwf	(_contTimMaskOff+1)^(0+128),w
 11252  0856  1D03               	btfss	3,2
 11253  0857  2859               	goto	u4451
 11254  0858  285A               	goto	u4450
 11255  0859                     u4451:
 11256  0859  2870               	goto	l6267
 11257  085A                     u4450:
 11258  085A                     l6255:
 11259                           
 11260                           ;main.c: 862:             char i = 0;
 11261  085A  0020               	movlb	0	; select bank0
 11262  085B  01D9               	clrf	maskOff@i
 11263                           
 11264                           ;main.c: 863:             for(i = 0; i < 12; i++)
 11265  085C  01D9               	clrf	maskOff@i
 11266  085D                     l6261:
 11267                           
 11268                           ;main.c: 864:                 MaskSeq[i] = 255;
 11269  085D  3559               	lslf	maskOff@i,w
 11270  085E  3E20               	addlw	(low (_MaskSeq| (0+256)))& (0+255)
 11271  085F  0086               	movwf	6
 11272  0860  3001               	movlw	1	; select bank2/3
 11273  0861  0087               	movwf	7
 11274  0862  30FF               	movlw	255
 11275  0863  3FC0               	movwi [0]fsr1
 11276  0864  3000               	movlw	0
 11277  0865  3FC1               	movwi [1]fsr1
 11278  0866                     l6263:
 11279  0866  3001               	movlw	1
 11280  0867  00D6               	movwf	??_maskOff
 11281  0868  0856               	movf	??_maskOff,w
 11282  0869  07D9               	addwf	maskOff@i,f
 11283  086A                     l6265:
 11284  086A  300C               	movlw	12
 11285  086B  0259               	subwf	maskOff@i,w
 11286  086C  1C03               	skipc
 11287  086D  286F               	goto	u4461
 11288  086E  2870               	goto	u4460
 11289  086F                     u4461:
 11290  086F  285D               	goto	l6261
 11291  0870                     u4460:
 11292  0870                     l6267:
 11293                           
 11294                           ;main.c: 866:         subContMaskOff++;
 11295  0870  3001               	movlw	1
 11296  0871  0020               	movlb	0	; select bank0
 11297  0872  00D6               	movwf	??_maskOff
 11298  0873  0856               	movf	??_maskOff,w
 11299  0874  07C0               	addwf	_subContMaskOff,f
 11300  0875                     l6269:
 11301                           
 11302                           ;main.c: 867:         if(indexMaskOff < 12) {
 11303  0875  300C               	movlw	12
 11304  0876  0241               	subwf	_indexMaskOff,w
 11305  0877  1803               	skipnc
 11306  0878  287A               	goto	u4471
 11307  0879  287B               	goto	u4470
 11308  087A                     u4471:
 11309  087A  2951               	goto	l6311
 11310  087B                     u4470:
 11311  087B                     l6271:
 11312                           
 11313                           ;main.c: 868:             MaskSeq[indexMaskOff] -= 13;
 11314  087B  3541               	lslf	_indexMaskOff,w
 11315  087C  3E20               	addlw	(low (_MaskSeq| (0+256)))& (0+255)
 11316  087D  0086               	movwf	6
 11317  087E  3001               	movlw	1	; select bank2/3
 11318  087F  0087               	movwf	7
 11319  0880  30F3               	movlw	243
 11320  0881  0781               	addwf	1,f
 11321  0882  3141               	addfsr 1,1
 11322  0883  30FF               	movlw	255
 11323  0884  3D81               	addwfc	1,f
 11324  0885  317F               	addfsr 1,-1
 11325  0886                     l6273:
 11326                           
 11327                           ;main.c: 869:             if(indexMaskOff > 0)
 11328  0886  0841               	movf	_indexMaskOff,w
 11329  0887  1903               	btfsc	3,2
 11330  0888  288A               	goto	u4481
 11331  0889  288B               	goto	u4480
 11332  088A                     u4481:
 11333  088A  2896               	goto	l6277
 11334  088B                     u4480:
 11335  088B                     l6275:
 11336                           
 11337                           ;main.c: 870:                 MaskSeq[indexMaskOff - 1] -= 13;
 11338  088B  3541               	lslf	_indexMaskOff,w
 11339  088C  3E1E               	addlw	(low ((_MaskSeq| (0+256)+254)))& (0+255)
 11340  088D  0086               	movwf	6
 11341  088E  3001               	movlw	1	; select bank2/3
 11342  088F  0087               	movwf	7
 11343  0890  30F3               	movlw	243
 11344  0891  0781               	addwf	1,f
 11345  0892  3141               	addfsr 1,1
 11346  0893  30FF               	movlw	255
 11347  0894  3D81               	addwfc	1,f
 11348  0895  317F               	addfsr 1,-1
 11349  0896                     l6277:
 11350                           
 11351                           ;main.c: 871:             if(indexMaskOff > 1)
 11352  0896  3002               	movlw	2
 11353  0897  0241               	subwf	_indexMaskOff,w
 11354  0898  1C03               	skipc
 11355  0899  289B               	goto	u4491
 11356  089A  289C               	goto	u4490
 11357  089B                     u4491:
 11358  089B  28A7               	goto	l6281
 11359  089C                     u4490:
 11360  089C                     l6279:
 11361                           
 11362                           ;main.c: 872:                 MaskSeq[indexMaskOff - 2] -= 13;
 11363  089C  3541               	lslf	_indexMaskOff,w
 11364  089D  3E1C               	addlw	(low ((_MaskSeq| (0+256)+252)))& (0+255)
 11365  089E  0086               	movwf	6
 11366  089F  3001               	movlw	1	; select bank2/3
 11367  08A0  0087               	movwf	7
 11368  08A1  30F3               	movlw	243
 11369  08A2  0781               	addwf	1,f
 11370  08A3  3141               	addfsr 1,1
 11371  08A4  30FF               	movlw	255
 11372  08A5  3D81               	addwfc	1,f
 11373  08A6  317F               	addfsr 1,-1
 11374  08A7                     l6281:
 11375                           
 11376                           ;main.c: 873:             if(indexMaskOff > 2) {
 11377  08A7  3003               	movlw	3
 11378  08A8  0241               	subwf	_indexMaskOff,w
 11379  08A9  1C03               	skipc
 11380  08AA  28AC               	goto	u4501
 11381  08AB  28AD               	goto	u4500
 11382  08AC                     u4501:
 11383  08AC  28CA               	goto	l6287
 11384  08AD                     u4500:
 11385  08AD                     l6283:
 11386                           
 11387                           ;main.c: 874:                 MaskSeq[indexMaskOff - 3] -= 13;
 11388  08AD  3541               	lslf	_indexMaskOff,w
 11389  08AE  3E1A               	addlw	(low ((_MaskSeq| (0+256)+250)))& (0+255)
 11390  08AF  0086               	movwf	6
 11391  08B0  3001               	movlw	1	; select bank2/3
 11392  08B1  0087               	movwf	7
 11393  08B2  30F3               	movlw	243
 11394  08B3  0781               	addwf	1,f
 11395  08B4  3141               	addfsr 1,1
 11396  08B5  30FF               	movlw	255
 11397  08B6  3D81               	addwfc	1,f
 11398  08B7  317F               	addfsr 1,-1
 11399                           
 11400                           ;main.c: 875:                 if(MaskSeq[indexMaskOff - 3] < 0)
 11401  08B8  3541               	lslf	_indexMaskOff,w
 11402  08B9  3E1A               	addlw	(low ((_MaskSeq| (0+256)+250)))& (0+255)
 11403  08BA  0086               	movwf	6
 11404  08BB  3001               	movlw	1	; select bank2/3
 11405  08BC  0087               	movwf	7
 11406  08BD  3141               	addfsr 1,1
 11407  08BE  1F81               	btfss	1,7
 11408  08BF  28C1               	goto	u4511
 11409  08C0  28C2               	goto	u4510
 11410  08C1                     u4511:
 11411  08C1  28CA               	goto	l6287
 11412  08C2                     u4510:
 11413  08C2                     l6285:
 11414                           
 11415                           ;main.c: 876:                     MaskSeq[indexMaskOff - 3] = 0;
 11416  08C2  3541               	lslf	_indexMaskOff,w
 11417  08C3  3E1A               	addlw	(low ((_MaskSeq| (0+256)+250)))& (0+255)
 11418  08C4  0086               	movwf	6
 11419  08C5  3001               	movlw	1	; select bank2/3
 11420  08C6  0087               	movwf	7
 11421  08C7  3000               	movlw	0
 11422  08C8  3FC0               	movwi [0]fsr1
 11423  08C9  3FC1               	movwi [1]fsr1
 11424  08CA                     l6287:
 11425                           
 11426                           ;main.c: 878:             if(indexMaskOff > 3) {
 11427  08CA  3004               	movlw	4
 11428  08CB  0241               	subwf	_indexMaskOff,w
 11429  08CC  1C03               	skipc
 11430  08CD  28CF               	goto	u4521
 11431  08CE  28D0               	goto	u4520
 11432  08CF                     u4521:
 11433  08CF  28EF               	goto	l6293
 11434  08D0                     u4520:
 11435  08D0                     l6289:
 11436                           
 11437                           ;main.c: 879:                 if(MaskSeq[indexMaskOff - 4] > 0)
 11438  08D0  3541               	lslf	_indexMaskOff,w
 11439  08D1  3E18               	addlw	(low ((_MaskSeq| (0+256)+248)))& (0+255)
 11440  08D2  0086               	movwf	6
 11441  08D3  3001               	movlw	1	; select bank2/3
 11442  08D4  0087               	movwf	7
 11443  08D5  3F40               	moviw [0]fsr1
 11444  08D6  00D6               	movwf	??_maskOff
 11445  08D7  3F41               	moviw [1]fsr1
 11446  08D8  00D7               	movwf	??_maskOff+1
 11447  08D9  0857               	movf	??_maskOff+1,w
 11448  08DA  3A80               	xorlw	128
 11449  08DB  00D8               	movwf	??_maskOff+2
 11450  08DC  3080               	movlw	128
 11451  08DD  0258               	subwf	??_maskOff+2,w
 11452  08DE  1D03               	skipz
 11453  08DF  28E2               	goto	u4535
 11454  08E0  3001               	movlw	1
 11455  08E1  0256               	subwf	??_maskOff,w
 11456  08E2                     u4535:
 11457  08E2  1C03               	skipc
 11458  08E3  28E5               	goto	u4531
 11459  08E4  28E6               	goto	u4530
 11460  08E5                     u4531:
 11461  08E5  28EF               	goto	l6293
 11462  08E6                     u4530:
 11463  08E6                     l6291:
 11464                           
 11465                           ;main.c: 880:                     MaskSeq[indexMaskOff - 4] = 0;
 11466  08E6  0020               	movlb	0	; select bank0
 11467  08E7  3541               	lslf	_indexMaskOff,w
 11468  08E8  3E18               	addlw	(low ((_MaskSeq| (0+256)+248)))& (0+255)
 11469  08E9  0086               	movwf	6
 11470  08EA  3001               	movlw	1	; select bank2/3
 11471  08EB  0087               	movwf	7
 11472  08EC  3000               	movlw	0
 11473  08ED  3FC0               	movwi [0]fsr1
 11474  08EE  3FC1               	movwi [1]fsr1
 11475  08EF                     l6293:
 11476                           
 11477                           ;main.c: 882:             if(indexMaskOff > 4)
 11478  08EF  3005               	movlw	5
 11479  08F0  0020               	movlb	0	; select bank0
 11480  08F1  0241               	subwf	_indexMaskOff,w
 11481  08F2  1C03               	skipc
 11482  08F3  28F5               	goto	u4541
 11483  08F4  28F6               	goto	u4540
 11484  08F5                     u4541:
 11485  08F5  2900               	goto	l6297
 11486  08F6                     u4540:
 11487  08F6                     l6295:
 11488                           
 11489                           ;main.c: 883:                 MaskSeq[indexMaskOff - 5] += 13;
 11490  08F6  3541               	lslf	_indexMaskOff,w
 11491  08F7  3E16               	addlw	(low ((_MaskSeq| (0+256)+246)))& (0+255)
 11492  08F8  0086               	movwf	6
 11493  08F9  3001               	movlw	1	; select bank2/3
 11494  08FA  0087               	movwf	7
 11495  08FB  300D               	movlw	13
 11496  08FC  0781               	addwf	1,f
 11497  08FD  3141               	addfsr 1,1
 11498  08FE  1803               	skipnc
 11499  08FF  0A81               	incf	1,f
 11500  0900                     l6297:
 11501                           
 11502                           ;main.c: 884:             if(indexMaskOff > 5)
 11503  0900  3006               	movlw	6
 11504  0901  0241               	subwf	_indexMaskOff,w
 11505  0902  1C03               	skipc
 11506  0903  2905               	goto	u4551
 11507  0904  2906               	goto	u4550
 11508  0905                     u4551:
 11509  0905  2910               	goto	l6301
 11510  0906                     u4550:
 11511  0906                     l6299:
 11512                           
 11513                           ;main.c: 885:                 MaskSeq[indexMaskOff - 6] += 13;
 11514  0906  3541               	lslf	_indexMaskOff,w
 11515  0907  3E14               	addlw	(low ((_MaskSeq| (0+256)+244)))& (0+255)
 11516  0908  0086               	movwf	6
 11517  0909  3001               	movlw	1	; select bank2/3
 11518  090A  0087               	movwf	7
 11519  090B  300D               	movlw	13
 11520  090C  0781               	addwf	1,f
 11521  090D  3141               	addfsr 1,1
 11522  090E  1803               	skipnc
 11523  090F  0A81               	incf	1,f
 11524  0910                     l6301:
 11525                           
 11526                           ;main.c: 886:             if(indexMaskOff > 6)
 11527  0910  3007               	movlw	7
 11528  0911  0241               	subwf	_indexMaskOff,w
 11529  0912  1C03               	skipc
 11530  0913  2915               	goto	u4561
 11531  0914  2916               	goto	u4560
 11532  0915                     u4561:
 11533  0915  2920               	goto	l6305
 11534  0916                     u4560:
 11535  0916                     l6303:
 11536                           
 11537                           ;main.c: 887:                 MaskSeq[indexMaskOff - 7] += 13;
 11538  0916  3541               	lslf	_indexMaskOff,w
 11539  0917  3E12               	addlw	(low ((_MaskSeq| (0+256)+242)))& (0+255)
 11540  0918  0086               	movwf	6
 11541  0919  3001               	movlw	1	; select bank2/3
 11542  091A  0087               	movwf	7
 11543  091B  300D               	movlw	13
 11544  091C  0781               	addwf	1,f
 11545  091D  3141               	addfsr 1,1
 11546  091E  1803               	skipnc
 11547  091F  0A81               	incf	1,f
 11548  0920                     l6305:
 11549                           
 11550                           ;main.c: 888:             if(indexMaskOff > 7) {
 11551  0920  3008               	movlw	8
 11552  0921  0241               	subwf	_indexMaskOff,w
 11553  0922  1C03               	skipc
 11554  0923  2925               	goto	u4571
 11555  0924  2926               	goto	u4570
 11556  0925                     u4571:
 11557  0925  29F7               	goto	l6347
 11558  0926                     u4570:
 11559  0926                     l6307:
 11560                           
 11561                           ;main.c: 889:                 MaskSeq[indexMaskOff - 8] += 13;
 11562  0926  3541               	lslf	_indexMaskOff,w
 11563  0927  3E10               	addlw	(low ((_MaskSeq| (0+256)+240)))& (0+255)
 11564  0928  0086               	movwf	6
 11565  0929  3001               	movlw	1	; select bank2/3
 11566  092A  0087               	movwf	7
 11567  092B  300D               	movlw	13
 11568  092C  0781               	addwf	1,f
 11569  092D  3141               	addfsr 1,1
 11570  092E  1803               	skipnc
 11571  092F  0A81               	incf	1,f
 11572                           
 11573                           ;main.c: 890:                 if(MaskSeq[indexMaskOff - 8] > 255)
 11574  0930  3541               	lslf	_indexMaskOff,w
 11575  0931  3E10               	addlw	(low ((_MaskSeq| (0+256)+240)))& (0+255)
 11576  0932  0086               	movwf	6
 11577  0933  3001               	movlw	1	; select bank2/3
 11578  0934  0087               	movwf	7
 11579  0935  3F40               	moviw [0]fsr1
 11580  0936  00D6               	movwf	??_maskOff
 11581  0937  3F41               	moviw [1]fsr1
 11582  0938  00D7               	movwf	??_maskOff+1
 11583  0939  0857               	movf	??_maskOff+1,w
 11584  093A  3A80               	xorlw	128
 11585  093B  00D8               	movwf	??_maskOff+2
 11586  093C  3081               	movlw	129
 11587  093D  0258               	subwf	??_maskOff+2,w
 11588  093E  1D03               	skipz
 11589  093F  2942               	goto	u4585
 11590  0940  3000               	movlw	0
 11591  0941  0256               	subwf	??_maskOff,w
 11592  0942                     u4585:
 11593  0942  1C03               	skipc
 11594  0943  2945               	goto	u4581
 11595  0944  2946               	goto	u4580
 11596  0945                     u4581:
 11597  0945  29F7               	goto	l6347
 11598  0946                     u4580:
 11599  0946                     l6309:
 11600                           
 11601                           ;main.c: 891:                     MaskSeq[indexMaskOff - 8] = 255;
 11602  0946  0020               	movlb	0	; select bank0
 11603  0947  3541               	lslf	_indexMaskOff,w
 11604  0948  3E10               	addlw	(low ((_MaskSeq| (0+256)+240)))& (0+255)
 11605  0949  0086               	movwf	6
 11606  094A  3001               	movlw	1	; select bank2/3
 11607  094B  0087               	movwf	7
 11608  094C  30FF               	movlw	255
 11609  094D  3FC0               	movwi [0]fsr1
 11610  094E  3000               	movlw	0
 11611  094F  3FC1               	movwi [1]fsr1
 11612  0950  29F7               	goto	l6347
 11613  0951                     l6311:
 11614                           
 11615                           ;main.c: 894:             if(indexMaskOff < 16)
 11616  0951  3010               	movlw	16
 11617  0952  0241               	subwf	_indexMaskOff,w
 11618  0953  1803               	skipnc
 11619  0954  2956               	goto	u4591
 11620  0955  2957               	goto	u4590
 11621  0956                     u4591:
 11622  0956  2969               	goto	l6315
 11623  0957                     u4590:
 11624  0957                     l6313:
 11625                           
 11626                           ;main.c: 895:                 MaskSeq[15 - indexMaskOff] -= 13;
 11627  0957  30FE               	movlw	254
 11628  0958  00D6               	movwf	??_maskOff
 11629  0959  0856               	movf	??_maskOff,w
 11630  095A  00D1               	movwf	___bmul@multiplicand
 11631  095B  0841               	movf	_indexMaskOff,w
 11632  095C  31A3  23C7  3188   	fcall	___bmul
 11633  095F  3E3E               	addlw	(low ((_MaskSeq| (0+256)+30)))& (0+255)
 11634  0960  0086               	movwf	6
 11635  0961  3001               	movlw	1	; select bank2/3
 11636  0962  0087               	movwf	7
 11637  0963  30F3               	movlw	243
 11638  0964  0781               	addwf	1,f
 11639  0965  3141               	addfsr 1,1
 11640  0966  30FF               	movlw	255
 11641  0967  3D81               	addwfc	1,f
 11642  0968  317F               	addfsr 1,-1
 11643  0969                     l6315:
 11644                           
 11645                           ;main.c: 896:             if(indexMaskOff < 17)
 11646  0969  3011               	movlw	17
 11647  096A  0020               	movlb	0	; select bank0
 11648  096B  0241               	subwf	_indexMaskOff,w
 11649  096C  1803               	skipnc
 11650  096D  296F               	goto	u4601
 11651  096E  2970               	goto	u4600
 11652  096F                     u4601:
 11653  096F  2982               	goto	l6319
 11654  0970                     u4600:
 11655  0970                     l6317:
 11656                           
 11657                           ;main.c: 897:                 MaskSeq[16 - indexMaskOff] -= 13;
 11658  0970  30FE               	movlw	254
 11659  0971  00D6               	movwf	??_maskOff
 11660  0972  0856               	movf	??_maskOff,w
 11661  0973  00D1               	movwf	___bmul@multiplicand
 11662  0974  0841               	movf	_indexMaskOff,w
 11663  0975  31A3  23C7  3188   	fcall	___bmul
 11664  0978  3E40               	addlw	(low ((_MaskSeq| (0+256)+32)))& (0+255)
 11665  0979  0086               	movwf	6
 11666  097A  3001               	movlw	1	; select bank2/3
 11667  097B  0087               	movwf	7
 11668  097C  30F3               	movlw	243
 11669  097D  0781               	addwf	1,f
 11670  097E  3141               	addfsr 1,1
 11671  097F  30FF               	movlw	255
 11672  0980  3D81               	addwfc	1,f
 11673  0981  317F               	addfsr 1,-1
 11674  0982                     l6319:
 11675                           
 11676                           ;main.c: 898:             if(indexMaskOff < 18)
 11677  0982  3012               	movlw	18
 11678  0983  0020               	movlb	0	; select bank0
 11679  0984  0241               	subwf	_indexMaskOff,w
 11680  0985  1803               	skipnc
 11681  0986  2988               	goto	u4611
 11682  0987  2989               	goto	u4610
 11683  0988                     u4611:
 11684  0988  299B               	goto	l6323
 11685  0989                     u4610:
 11686  0989                     l6321:
 11687                           
 11688                           ;main.c: 899:                 MaskSeq[17 - indexMaskOff] -= 13;
 11689  0989  30FE               	movlw	254
 11690  098A  00D6               	movwf	??_maskOff
 11691  098B  0856               	movf	??_maskOff,w
 11692  098C  00D1               	movwf	___bmul@multiplicand
 11693  098D  0841               	movf	_indexMaskOff,w
 11694  098E  31A3  23C7  3188   	fcall	___bmul
 11695  0991  3E42               	addlw	(low ((_MaskSeq| (0+256)+34)))& (0+255)
 11696  0992  0086               	movwf	6
 11697  0993  3001               	movlw	1	; select bank2/3
 11698  0994  0087               	movwf	7
 11699  0995  30F3               	movlw	243
 11700  0996  0781               	addwf	1,f
 11701  0997  3141               	addfsr 1,1
 11702  0998  30FF               	movlw	255
 11703  0999  3D81               	addwfc	1,f
 11704  099A  317F               	addfsr 1,-1
 11705  099B                     l6323:
 11706                           
 11707                           ;main.c: 900:             if(indexMaskOff < 19) {
 11708  099B  3013               	movlw	19
 11709  099C  0020               	movlb	0	; select bank0
 11710  099D  0241               	subwf	_indexMaskOff,w
 11711  099E  1803               	skipnc
 11712  099F  29A1               	goto	u4621
 11713  09A0  29A2               	goto	u4620
 11714  09A1                     u4621:
 11715  09A1  29D7               	goto	l6329
 11716  09A2                     u4620:
 11717  09A2                     l6325:
 11718                           
 11719                           ;main.c: 901:                 MaskSeq[18 - indexMaskOff] -= 13;
 11720  09A2  30FE               	movlw	254
 11721  09A3  00D6               	movwf	??_maskOff
 11722  09A4  0856               	movf	??_maskOff,w
 11723  09A5  00D1               	movwf	___bmul@multiplicand
 11724  09A6  0841               	movf	_indexMaskOff,w
 11725  09A7  31A3  23C7  3188   	fcall	___bmul
 11726  09AA  3E44               	addlw	(low ((_MaskSeq| (0+256)+36)))& (0+255)
 11727  09AB  0086               	movwf	6
 11728  09AC  3001               	movlw	1	; select bank2/3
 11729  09AD  0087               	movwf	7
 11730  09AE  30F3               	movlw	243
 11731  09AF  0781               	addwf	1,f
 11732  09B0  3141               	addfsr 1,1
 11733  09B1  30FF               	movlw	255
 11734  09B2  3D81               	addwfc	1,f
 11735  09B3  317F               	addfsr 1,-1
 11736                           
 11737                           ;main.c: 902:                 if(MaskSeq[18 - indexMaskOff] < 0)
 11738  09B4  30FE               	movlw	254
 11739  09B5  0020               	movlb	0	; select bank0
 11740  09B6  00D6               	movwf	??_maskOff
 11741  09B7  0856               	movf	??_maskOff,w
 11742  09B8  00D1               	movwf	___bmul@multiplicand
 11743  09B9  0841               	movf	_indexMaskOff,w
 11744  09BA  31A3  23C7  3188   	fcall	___bmul
 11745  09BD  3E44               	addlw	(low ((_MaskSeq| (0+256)+36)))& (0+255)
 11746  09BE  0086               	movwf	6
 11747  09BF  3001               	movlw	1	; select bank2/3
 11748  09C0  0087               	movwf	7
 11749  09C1  3141               	addfsr 1,1
 11750  09C2  1F81               	btfss	1,7
 11751  09C3  29C5               	goto	u4631
 11752  09C4  29C6               	goto	u4630
 11753  09C5                     u4631:
 11754  09C5  29F7               	goto	l6347
 11755  09C6                     u4630:
 11756  09C6                     l6327:
 11757                           
 11758                           ;main.c: 903:                     MaskSeq[18 - indexMaskOff] = 0;
 11759  09C6  30FE               	movlw	254
 11760  09C7  0020               	movlb	0	; select bank0
 11761  09C8  00D6               	movwf	??_maskOff
 11762  09C9  0856               	movf	??_maskOff,w
 11763  09CA  00D1               	movwf	___bmul@multiplicand
 11764  09CB  0841               	movf	_indexMaskOff,w
 11765  09CC  31A3  23C7  3188   	fcall	___bmul
 11766  09CF  3E44               	addlw	(low ((_MaskSeq| (0+256)+36)))& (0+255)
 11767  09D0  0086               	movwf	6
 11768  09D1  3001               	movlw	1	; select bank2/3
 11769  09D2  0087               	movwf	7
 11770  09D3  3000               	movlw	0
 11771  09D4  3FC0               	movwi [0]fsr1
 11772  09D5  3FC1               	movwi [1]fsr1
 11773  09D6  29F7               	goto	l6347
 11774  09D7                     l6329:
 11775                           
 11776                           ;main.c: 905:                 char i = 0;
 11777  09D7  01DA               	clrf	maskOff@i_1379
 11778                           
 11779                           ;main.c: 906:                 for(i = 0; i < 8; i++)
 11780  09D8  01DA               	clrf	maskOff@i_1379
 11781  09D9                     l6335:
 11782                           
 11783                           ;main.c: 907:                     MaskSeq[i] = 0;
 11784  09D9  355A               	lslf	maskOff@i_1379,w
 11785  09DA  3E20               	addlw	(low (_MaskSeq| (0+256)))& (0+255)
 11786  09DB  0086               	movwf	6
 11787  09DC  3001               	movlw	1	; select bank2/3
 11788  09DD  0087               	movwf	7
 11789  09DE  3000               	movlw	0
 11790  09DF  3FC0               	movwi [0]fsr1
 11791  09E0  3FC1               	movwi [1]fsr1
 11792  09E1                     l6337:
 11793  09E1  3001               	movlw	1
 11794  09E2  00D6               	movwf	??_maskOff
 11795  09E3  0856               	movf	??_maskOff,w
 11796  09E4  07DA               	addwf	maskOff@i_1379,f
 11797  09E5                     l6339:
 11798  09E5  3008               	movlw	8
 11799  09E6  025A               	subwf	maskOff@i_1379,w
 11800  09E7  1C03               	skipc
 11801  09E8  29EA               	goto	u4641
 11802  09E9  29EB               	goto	u4640
 11803  09EA                     u4641:
 11804  09EA  29D9               	goto	l6335
 11805  09EB                     u4640:
 11806  09EB                     l6341:
 11807                           
 11808                           ;main.c: 908:                 maskIsOn = 0;
 11809  09EB  0021               	movlb	1	; select bank1
 11810  09EC  01E0               	clrf	_maskIsOn^(0+128)
 11811  09ED                     l6343:
 11812                           
 11813                           ;main.c: 909:                 rstMaskOff(0);
 11814  09ED  3000               	movlw	0
 11815  09EE  31A2  220D  3188   	fcall	_rstMaskOff
 11816  09F1                     l6345:
 11817                           
 11818                           ;main.c: 910:                 val2group(1, 0);
 11819  09F1  0020               	movlb	0	; select bank0
 11820  09F2  01D1               	clrf	val2group@val
 11821  09F3  3001               	movlw	1
 11822  09F4  3196  2662  3188   	fcall	_val2group
 11823  09F7                     l6347:
 11824                           
 11825                           ;main.c: 913:         if(subContMaskOff == 5) {
 11826  09F7  3005               	movlw	5
 11827  09F8  0020               	movlb	0	; select bank0
 11828  09F9  0640               	xorwf	_subContMaskOff,w
 11829  09FA  1D03               	btfss	3,2
 11830  09FB  29FD               	goto	u4651
 11831  09FC  29FE               	goto	u4650
 11832  09FD                     u4651:
 11833  09FD  2A03               	goto	l6353
 11834  09FE                     u4650:
 11835  09FE                     l6349:
 11836                           
 11837                           ;main.c: 914:             subContMaskOff = 0;
 11838  09FE  01C0               	clrf	_subContMaskOff
 11839  09FF                     l6351:
 11840                           
 11841                           ;main.c: 915:             indexMaskOff++;
 11842  09FF  3001               	movlw	1
 11843  0A00  00D6               	movwf	??_maskOff
 11844  0A01  0856               	movf	??_maskOff,w
 11845  0A02  07C1               	addwf	_indexMaskOff,f
 11846  0A03                     l6353:
 11847  0A03                     l6355:
 11848                           
 11849                           ;main.c: 918:         for(i = 0; i < 8; i++) {
 11850  0A03  01DB               	clrf	maskOff@i_1381
 11851  0A04                     l6361:
 11852                           
 11853                           ;main.c: 919:             Mask[i] = MaskSeq[i];
 11854  0A04  355B               	lslf	maskOff@i_1381,w
 11855  0A05  3E20               	addlw	(low (_MaskSeq| (0+256)))& (0+255)
 11856  0A06  0086               	movwf	6
 11857  0A07  3001               	movlw	1	; select bank2/3
 11858  0A08  0087               	movwf	7
 11859  0A09  0801               	movf	1,w
 11860  0A0A  00D6               	movwf	??_maskOff
 11861  0A0B  085B               	movf	maskOff@i_1381,w
 11862  0A0C  3EA0               	addlw	(low (_Mask| (0+512)))& (0+255)
 11863  0A0D  0086               	movwf	6
 11864  0A0E  3002               	movlw	2	; select bank5/6
 11865  0A0F  0087               	movwf	7
 11866  0A10  0856               	movf	??_maskOff,w
 11867  0A11  0081               	movwf	1
 11868                           
 11869                           ;main.c: 920:             Mask[15-i] = MaskSeq[i];
 11870  0A12  355B               	lslf	maskOff@i_1381,w
 11871  0A13  3E20               	addlw	(low (_MaskSeq| (0+256)))& (0+255)
 11872  0A14  0086               	movwf	6
 11873  0A15  3001               	movlw	1	; select bank2/3
 11874  0A16  0087               	movwf	7
 11875  0A17  0801               	movf	1,w
 11876  0A18  00D6               	movwf	??_maskOff
 11877  0A19  30AF               	movlw	(low ((_Mask| (0+512)+15)))& (0+255)
 11878  0A1A  00D7               	movwf	??_maskOff+1
 11879  0A1B  085B               	movf	maskOff@i_1381,w
 11880  0A1C  02D7               	subwf	??_maskOff+1,f
 11881  0A1D  0857               	movf	??_maskOff+1,w
 11882  0A1E  0086               	movwf	6
 11883  0A1F  3002               	movlw	2	; select bank4/5
 11884  0A20  0087               	movwf	7
 11885  0A21  0856               	movf	??_maskOff,w
 11886  0A22  0081               	movwf	1
 11887  0A23                     l6363:
 11888                           
 11889                           ;main.c: 921:         }
 11890  0A23  3001               	movlw	1
 11891  0A24  00D6               	movwf	??_maskOff
 11892  0A25  0856               	movf	??_maskOff,w
 11893  0A26  07DB               	addwf	maskOff@i_1381,f
 11894  0A27                     l6365:
 11895  0A27  3008               	movlw	8
 11896  0A28  025B               	subwf	maskOff@i_1381,w
 11897  0A29  1C03               	skipc
 11898  0A2A  2A2C               	goto	u4661
 11899  0A2B  2A2D               	goto	u4660
 11900  0A2C                     u4661:
 11901  0A2C  2A04               	goto	l6361
 11902  0A2D                     u4660:
 11903  0A2D                     l6367:
 11904                           
 11905                           ;main.c: 922:         sendOrderX();
 11906  0A2D  31A0  20E0  3188   	fcall	_sendOrderX
 11907  0A30                     l6369:
 11908                           
 11909                           ;main.c: 923:         contTimMaskOff++;
 11910  0A30  3001               	movlw	1
 11911  0A31  0021               	movlb	1	; select bank1
 11912  0A32  07BF               	addwf	_contTimMaskOff^(0+128),f
 11913  0A33  3000               	movlw	0
 11914  0A34  3DC0               	addwfc	(_contTimMaskOff+1)^(0+128),f
 11915  0A35                     l1147:
 11916  0A35  0008               	return
 11917  0A36                     __end_of_maskOff:
 11918                           
 11919                           	psect	text19
 11920  23C7                     __ptext19:	
 11921 ;; *************** function ___bmul *****************
 11922 ;; Defined at:
 11923 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul8.c"
 11924 ;; Parameters:    Size  Location     Type
 11925 ;;  multiplier      1    wreg     unsigned char 
 11926 ;;  multiplicand    1    4[BANK0 ] unsigned char 
 11927 ;; Auto vars:     Size  Location     Type
 11928 ;;  multiplier      1    7[BANK0 ] unsigned char 
 11929 ;;  product         1    6[BANK0 ] unsigned char 
 11930 ;; Return value:  Size  Location     Type
 11931 ;;                  1    wreg      unsigned char 
 11932 ;; Registers used:
 11933 ;;		wreg, status,2, status,0
 11934 ;; Tracked objects:
 11935 ;;		On entry : 0/0
 11936 ;;		On exit  : 0/0
 11937 ;;		Unchanged: 0/0
 11938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11939 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11940 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11941 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11942 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11943 ;;Total ram usage:        4 bytes
 11944 ;; Hardware stack levels used: 1
 11945 ;; Hardware stack levels required when called: 11
 11946 ;; This function calls:
 11947 ;;		Nothing
 11948 ;; This function is called by:
 11949 ;;		_maskOff
 11950 ;;		_maskOffOld
 11951 ;; This function uses a non-reentrant model
 11952 ;;
 11953                           
 11954                           
 11955                           ;psect for function ___bmul
 11956  23C7                     ___bmul:
 11957                           
 11958                           ;incstack = 0
 11959                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 11960                           ;___bmul@multiplier stored from wreg
 11961  23C7  0020               	movlb	0	; select bank0
 11962  23C8  00D4               	movwf	___bmul@multiplier
 11963  23C9                     l5863:
 11964  23C9  01D3               	clrf	___bmul@product
 11965  23CA                     l5865:
 11966  23CA  1C54               	btfss	___bmul@multiplier,0
 11967  23CB  2BCD               	goto	u3981
 11968  23CC  2BCE               	goto	u3980
 11969  23CD                     u3981:
 11970  23CD  2BD2               	goto	l5869
 11971  23CE                     u3980:
 11972  23CE                     l5867:
 11973  23CE  0851               	movf	___bmul@multiplicand,w
 11974  23CF  00D2               	movwf	??___bmul
 11975  23D0  0852               	movf	??___bmul,w
 11976  23D1  07D3               	addwf	___bmul@product,f
 11977  23D2                     l5869:
 11978  23D2  1003               	clrc
 11979  23D3  0DD1               	rlf	___bmul@multiplicand,f
 11980  23D4                     l5871:
 11981  23D4  1003               	clrc
 11982  23D5  0CD4               	rrf	___bmul@multiplier,f
 11983  23D6  0854               	movf	___bmul@multiplier,w
 11984  23D7  1D03               	btfss	3,2
 11985  23D8  2BDA               	goto	u3991
 11986  23D9  2BDB               	goto	u3990
 11987  23DA                     u3991:
 11988  23DA  2BCA               	goto	l5865
 11989  23DB                     u3990:
 11990  23DB                     l5873:
 11991  23DB  0853               	movf	___bmul@product,w
 11992  23DC                     l1675:
 11993  23DC  0008               	return
 11994  23DD                     __end_of___bmul:
 11995                           
 11996                           	psect	text20
 11997  1A68                     __ptext20:	
 11998 ;; *************** function _dragonCrash *****************
 11999 ;; Defined at:
 12000 ;;		line 756 in file "main.c"
 12001 ;; Parameters:    Size  Location     Type
 12002 ;;		None
 12003 ;; Auto vars:     Size  Location     Type
 12004 ;;		None
 12005 ;; Return value:  Size  Location     Type
 12006 ;;                  1    wreg      void 
 12007 ;; Registers used:
 12008 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12009 ;; Tracked objects:
 12010 ;;		On entry : 0/0
 12011 ;;		On exit  : 0/0
 12012 ;;		Unchanged: 0/0
 12013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12016 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12017 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12018 ;;Total ram usage:        1 bytes
 12019 ;; Hardware stack levels used: 1
 12020 ;; Hardware stack levels required when called: 15
 12021 ;; This function calls:
 12022 ;;		_crashOff3
 12023 ;;		_crashOn2
 12024 ;;		_dragonCrashTool
 12025 ;;		_rstDragon
 12026 ;;		_sendOrderX
 12027 ;; This function is called by:
 12028 ;;		_secuences
 12029 ;; This function uses a non-reentrant model
 12030 ;;
 12031                           
 12032                           
 12033                           ;psect for function _dragonCrash
 12034  1A68                     _dragonCrash:
 12035  1A68                     l6151:	
 12036                           ;incstack = 0
 12037 ;; hardware stack exceeded
 12038                           ; Regs used in _dragonCrash: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12039                           
 12040                           
 12041                           ;main.c: 757:     if(runCrash && contCrash < 1500) {
 12042  1A68  0021               	movlb	1	; select bank1
 12043  1A69  085D               	movf	_runCrash^(0+128),w
 12044  1A6A  1903               	btfsc	3,2
 12045  1A6B  2A6D               	goto	u4241
 12046  1A6C  2A6E               	goto	u4240
 12047  1A6D                     u4241:
 12048  1A6D  2ABE               	goto	l1081
 12049  1A6E                     u4240:
 12050  1A6E                     l6153:
 12051  1A6E  3005               	movlw	5
 12052  1A6F  023C               	subwf	(_contCrash+1)^(0+128),w
 12053  1A70  30DC               	movlw	220
 12054  1A71  1903               	skipnz
 12055  1A72  023B               	subwf	_contCrash^(0+128),w
 12056  1A73  1803               	skipnc
 12057  1A74  2A76               	goto	u4251
 12058  1A75  2A77               	goto	u4250
 12059  1A76                     u4251:
 12060  1A76  2ABE               	goto	l1081
 12061  1A77                     u4250:
 12062  1A77                     l6155:
 12063                           
 12064                           ;main.c: 758:         subContCrash++;
 12065  1A77  3001               	movlw	1
 12066  1A78  0020               	movlb	0	; select bank0
 12067  1A79  00DF               	movwf	??_dragonCrash
 12068  1A7A  085F               	movf	??_dragonCrash,w
 12069  1A7B  07BC               	addwf	_subContCrash,f
 12070  1A7C                     l6157:
 12071                           
 12072                           ;main.c: 759:         if(indexCrash < 15) {
 12073  1A7C  300F               	movlw	15
 12074  1A7D  023D               	subwf	_indexCrash,w
 12075  1A7E  1803               	skipnc
 12076  1A7F  2A81               	goto	u4261
 12077  1A80  2A82               	goto	u4260
 12078  1A81                     u4261:
 12079  1A81  2A86               	goto	l6161
 12080  1A82                     u4260:
 12081  1A82                     l6159:
 12082                           
 12083                           ;main.c: 761:             crashOn2();
 12084  1A82  31A4  24C2  319A   	fcall	_crashOn2
 12085                           
 12086                           ;main.c: 762:         }else if(indexCrash < 18){
 12087  1A85  2AA3               	goto	l6173
 12088  1A86                     l6161:
 12089  1A86  3012               	movlw	18
 12090  1A87  023D               	subwf	_indexCrash,w
 12091  1A88  1803               	skipnc
 12092  1A89  2A8B               	goto	u4271
 12093  1A8A  2A8C               	goto	u4270
 12094  1A8B                     u4271:
 12095  1A8B  2A92               	goto	l6165
 12096  1A8C                     u4270:
 12097  1A8C                     l6163:
 12098                           
 12099                           ;main.c: 764:             intensityCrash2 = 255;
 12100  1A8C  30FF               	movlw	255
 12101  1A8D  0021               	movlb	1	; select bank1
 12102  1A8E  00B9               	movwf	_intensityCrash2^(0+128)
 12103  1A8F  3000               	movlw	0
 12104  1A90  00BA               	movwf	(_intensityCrash2^(0+128)+1)
 12105                           
 12106                           ;main.c: 765:         }else if(indexCrash < 33){
 12107  1A91  2AA3               	goto	l6173
 12108  1A92                     l6165:
 12109  1A92  3021               	movlw	33
 12110  1A93  023D               	subwf	_indexCrash,w
 12111  1A94  1803               	skipnc
 12112  1A95  2A97               	goto	u4281
 12113  1A96  2A98               	goto	u4280
 12114  1A97                     u4281:
 12115  1A97  2A9C               	goto	l6169
 12116  1A98                     u4280:
 12117  1A98                     l6167:
 12118                           
 12119                           ;main.c: 768:             crashOff3();
 12120  1A98  31A5  2547  319A   	fcall	_crashOff3
 12121                           
 12122                           ;main.c: 769:         }else {
 12123  1A9B  2AA3               	goto	l6173
 12124  1A9C                     l6169:
 12125                           
 12126                           ;main.c: 770:             rstDragon(0);
 12127  1A9C  3000               	movlw	0
 12128  1A9D  31A5  25A2  319A   	fcall	_rstDragon
 12129  1AA0                     l6171:
 12130                           
 12131                           ;main.c: 771:             dragonCrashDone = 1;
 12132  1AA0  0021               	movlb	1	; select bank1
 12133  1AA1  01DB               	clrf	_dragonCrashDone^(0+128)
 12134  1AA2  0ADB               	incf	_dragonCrashDone^(0+128),f
 12135  1AA3                     l6173:
 12136                           
 12137                           ;main.c: 773:         if(subContCrash >= 32) {
 12138  1AA3  3020               	movlw	32
 12139  1AA4  0020               	movlb	0	; select bank0
 12140  1AA5  023C               	subwf	_subContCrash,w
 12141  1AA6  1C03               	skipc
 12142  1AA7  2AA9               	goto	u4291
 12143  1AA8  2AAA               	goto	u4290
 12144  1AA9                     u4291:
 12145  1AA9  2AB3               	goto	l6181
 12146  1AAA                     u4290:
 12147  1AAA                     l6175:
 12148                           
 12149                           ;main.c: 774:             indexCrash++;
 12150  1AAA  3001               	movlw	1
 12151  1AAB  00DF               	movwf	??_dragonCrash
 12152  1AAC  085F               	movf	??_dragonCrash,w
 12153  1AAD  07BD               	addwf	_indexCrash,f
 12154  1AAE                     l6177:
 12155                           
 12156                           ;main.c: 775:             intensityCrash = 255;
 12157  1AAE  30FF               	movlw	255
 12158  1AAF  00A8               	movwf	_intensityCrash
 12159  1AB0  3000               	movlw	0
 12160  1AB1  00A9               	movwf	_intensityCrash+1
 12161  1AB2                     l6179:
 12162                           
 12163                           ;main.c: 776:             subContCrash = 0;
 12164  1AB2  01BC               	clrf	_subContCrash
 12165  1AB3                     l6181:
 12166                           
 12167                           ;main.c: 778:         dragonCrashTool();
 12168  1AB3  3190  2084  319A   	fcall	_dragonCrashTool
 12169  1AB6                     l6183:
 12170                           
 12171                           ;main.c: 779:         sendOrderX();
 12172  1AB6  31A0  20E0  319A   	fcall	_sendOrderX
 12173  1AB9                     l6185:
 12174                           
 12175                           ;main.c: 780:         contCrash++;
 12176  1AB9  3001               	movlw	1
 12177  1ABA  0021               	movlb	1	; select bank1
 12178  1ABB  07BB               	addwf	_contCrash^(0+128),f
 12179  1ABC  3000               	movlw	0
 12180  1ABD  3DBC               	addwfc	(_contCrash+1)^(0+128),f
 12181  1ABE                     l1081:
 12182  1ABE  0008               	return
 12183  1ABF                     __end_of_dragonCrash:
 12184                           
 12185                           	psect	text21
 12186  24C2                     __ptext21:	
 12187 ;; *************** function _crashOn2 *****************
 12188 ;; Defined at:
 12189 ;;		line 693 in file "main.c"
 12190 ;; Parameters:    Size  Location     Type
 12191 ;;		None
 12192 ;; Auto vars:     Size  Location     Type
 12193 ;;		None
 12194 ;; Return value:  Size  Location     Type
 12195 ;;                  1    wreg      void 
 12196 ;; Registers used:
 12197 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12198 ;; Tracked objects:
 12199 ;;		On entry : 0/0
 12200 ;;		On exit  : 0/0
 12201 ;;		Unchanged: 0/0
 12202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12205 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12206 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12207 ;;Total ram usage:        1 bytes
 12208 ;; Hardware stack levels used: 1
 12209 ;; Hardware stack levels required when called: 11
 12210 ;; This function calls:
 12211 ;;		Nothing
 12212 ;; This function is called by:
 12213 ;;		_dragonCrash
 12214 ;; This function uses a non-reentrant model
 12215 ;;
 12216                           
 12217                           
 12218                           ;psect for function _crashOn2
 12219  24C2                     _crashOn2:
 12220  24C2                     l5755:	
 12221                           ;incstack = 0
 12222                           ; Regs used in _crashOn2: [wreg+fsr1l+fsr1h+status,2+status,0]
 12223                           
 12224                           
 12225                           ;main.c: 694:     dragonArray[indexCrash] = 20;
 12226  24C2  3014               	movlw	20
 12227  24C3  0020               	movlb	0	; select bank0
 12228  24C4  00D1               	movwf	??_crashOn2
 12229  24C5  083D               	movf	_indexCrash,w
 12230  24C6  3E47               	addlw	(low (_dragonArray| (0+256)))& (0+255)
 12231  24C7  0086               	movwf	6
 12232  24C8  3001               	movlw	1	; select bank2/3
 12233  24C9  0087               	movwf	7
 12234  24CA  0851               	movf	??_crashOn2,w
 12235  24CB  0081               	movwf	1
 12236  24CC                     l5757:
 12237                           
 12238                           ;main.c: 695:     intensityCrash -= deltaCrash;
 12239  24CC  30F0               	movlw	240
 12240  24CD  07A8               	addwf	_intensityCrash,f
 12241  24CE  30FF               	movlw	255
 12242  24CF  3DA9               	addwfc	_intensityCrash+1,f
 12243  24D0                     l5759:
 12244                           
 12245                           ;main.c: 696:     if(intensityCrash < 0)
 12246  24D0  1FA9               	btfss	_intensityCrash+1,7
 12247  24D1  2CD3               	goto	u3871
 12248  24D2  2CD4               	goto	u3870
 12249  24D3                     u3871:
 12250  24D3  2CD6               	goto	l5763
 12251  24D4                     u3870:
 12252  24D4                     l5761:
 12253                           
 12254                           ;main.c: 697:         intensityCrash = 0;
 12255  24D4  01A8               	clrf	_intensityCrash
 12256  24D5  01A9               	clrf	_intensityCrash+1
 12257  24D6                     l5763:
 12258                           
 12259                           ;main.c: 702:     intensityArray[indexCrash] = intensityCrash;
 12260  24D6  0828               	movf	_intensityCrash,w
 12261  24D7  00D1               	movwf	??_crashOn2
 12262  24D8  083D               	movf	_indexCrash,w
 12263  24D9  3E38               	addlw	(low (_intensityArray| (0+256)))& (0+255)
 12264  24DA  0086               	movwf	6
 12265  24DB  3001               	movlw	1	; select bank2/3
 12266  24DC  0087               	movwf	7
 12267  24DD  0851               	movf	??_crashOn2,w
 12268  24DE  0081               	movwf	1
 12269  24DF                     l1052:
 12270  24DF  0008               	return
 12271  24E0                     __end_of_crashOn2:
 12272                           
 12273                           	psect	text22
 12274  2547                     __ptext22:	
 12275 ;; *************** function _crashOff3 *****************
 12276 ;; Defined at:
 12277 ;;		line 713 in file "main.c"
 12278 ;; Parameters:    Size  Location     Type
 12279 ;;		None
 12280 ;; Auto vars:     Size  Location     Type
 12281 ;;  ix              1    5[BANK0 ] unsigned char 
 12282 ;; Return value:  Size  Location     Type
 12283 ;;                  1    wreg      void 
 12284 ;; Registers used:
 12285 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12286 ;; Tracked objects:
 12287 ;;		On entry : 0/0
 12288 ;;		On exit  : 0/0
 12289 ;;		Unchanged: 0/0
 12290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12292 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12293 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12294 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12295 ;;Total ram usage:        2 bytes
 12296 ;; Hardware stack levels used: 1
 12297 ;; Hardware stack levels required when called: 11
 12298 ;; This function calls:
 12299 ;;		Nothing
 12300 ;; This function is called by:
 12301 ;;		_dragonCrash
 12302 ;; This function uses a non-reentrant model
 12303 ;;
 12304                           
 12305                           
 12306                           ;psect for function _crashOff3
 12307  2547                     _crashOff3:
 12308  2547                     l5765:	
 12309                           ;incstack = 0
 12310                           ; Regs used in _crashOff3: [wreg+fsr1l+fsr1h+status,2+status,0]
 12311                           
 12312                           
 12313                           ;main.c: 714:     intensityCrash2 -= 1;
 12314  2547  30FF               	movlw	255
 12315  2548  0021               	movlb	1	; select bank1
 12316  2549  07B9               	addwf	_intensityCrash2^(0+128),f
 12317  254A  30FF               	movlw	255
 12318  254B  3DBA               	addwfc	(_intensityCrash2+1)^(0+128),f
 12319  254C                     l5767:
 12320                           
 12321                           ;main.c: 715:     if(intensityCrash2 < 0)
 12322  254C  1FBA               	btfss	(_intensityCrash2+1)^(0+128),7
 12323  254D  2D4F               	goto	u3881
 12324  254E  2D50               	goto	u3880
 12325  254F                     u3881:
 12326  254F  2D52               	goto	l1059
 12327  2550                     u3880:
 12328  2550                     l5769:
 12329                           
 12330                           ;main.c: 716:         intensityCrash2 = 0;
 12331  2550  01B9               	clrf	_intensityCrash2^(0+128)
 12332  2551  01BA               	clrf	(_intensityCrash2+1)^(0+128)
 12333  2552                     l1059:
 12334                           
 12335                           ;main.c: 717:     char ix = 0;
 12336  2552  0020               	movlb	0	; select bank0
 12337  2553  01D2               	clrf	crashOff3@ix
 12338                           
 12339                           ;main.c: 718:     for(ix = 0; ix < 15; ix++) {
 12340  2554  01D2               	clrf	crashOff3@ix
 12341  2555                     l5775:
 12342                           
 12343                           ;main.c: 719:         dragonArray[ix] = 21;
 12344  2555  3015               	movlw	21
 12345  2556  00D1               	movwf	??_crashOff3
 12346  2557  0852               	movf	crashOff3@ix,w
 12347  2558  3E47               	addlw	(low (_dragonArray| (0+256)))& (0+255)
 12348  2559  0086               	movwf	6
 12349  255A  3001               	movlw	1	; select bank2/3
 12350  255B  0087               	movwf	7
 12351  255C  0851               	movf	??_crashOff3,w
 12352  255D  0081               	movwf	1
 12353                           
 12354                           ;main.c: 720:         intensityArray[ix] = intensityCrash2;
 12355  255E  0021               	movlb	1	; select bank1
 12356  255F  0839               	movf	_intensityCrash2^(0+128),w
 12357  2560  0020               	movlb	0	; select bank0
 12358  2561  00D1               	movwf	??_crashOff3
 12359  2562  0852               	movf	crashOff3@ix,w
 12360  2563  3E38               	addlw	(low (_intensityArray| (0+256)))& (0+255)
 12361  2564  0086               	movwf	6
 12362  2565  3001               	movlw	1	; select bank2/3
 12363  2566  0087               	movwf	7
 12364  2567  0851               	movf	??_crashOff3,w
 12365  2568  0081               	movwf	1
 12366  2569                     l5777:
 12367                           
 12368                           ;main.c: 721:     }
 12369  2569  3001               	movlw	1
 12370  256A  00D1               	movwf	??_crashOff3
 12371  256B  0851               	movf	??_crashOff3,w
 12372  256C  07D2               	addwf	crashOff3@ix,f
 12373  256D                     l5779:
 12374  256D  300F               	movlw	15
 12375  256E  0252               	subwf	crashOff3@ix,w
 12376  256F  1C03               	skipc
 12377  2570  2D72               	goto	u3891
 12378  2571  2D73               	goto	u3890
 12379  2572                     u3891:
 12380  2572  2D55               	goto	l5775
 12381  2573                     u3890:
 12382  2573                     l1062:
 12383  2573  0008               	return
 12384  2574                     __end_of_crashOff3:
 12385                           
 12386                           	psect	text23
 12387  13A0                     __ptext23:	
 12388 ;; *************** function _despShadow *****************
 12389 ;; Defined at:
 12390 ;;		line 585 in file "main.c"
 12391 ;; Parameters:    Size  Location     Type
 12392 ;;		None
 12393 ;; Auto vars:     Size  Location     Type
 12394 ;;  i               1   16[BANK0 ] unsigned char 
 12395 ;;  i               1   15[BANK0 ] unsigned char 
 12396 ;; Return value:  Size  Location     Type
 12397 ;;                  1    wreg      void 
 12398 ;; Registers used:
 12399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12400 ;; Tracked objects:
 12401 ;;		On entry : 0/0
 12402 ;;		On exit  : 0/0
 12403 ;;		Unchanged: 0/0
 12404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12406 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12407 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12408 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12409 ;;Total ram usage:        5 bytes
 12410 ;; Hardware stack levels used: 1
 12411 ;; Hardware stack levels required when called: 13
 12412 ;; This function calls:
 12413 ;;		_rstShadow
 12414 ;;		_sendOrderX
 12415 ;;		_translateShadows
 12416 ;; This function is called by:
 12417 ;;		_secuences
 12418 ;; This function uses a non-reentrant model
 12419 ;;
 12420                           
 12421                           
 12422                           ;psect for function _despShadow
 12423  13A0                     _despShadow:
 12424  13A0                     l6073:	
 12425                           ;incstack = 0
 12426                           ; Regs used in _despShadow: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12427                           
 12428                           
 12429                           ;main.c: 586:     if(runShadow && contTimShadow < 650) {
 12430  13A0  0020               	movlb	0	; select bank0
 12431  13A1  083F               	movf	_runShadow,w
 12432  13A2  1903               	btfsc	3,2
 12433  13A3  2BA5               	goto	u4061
 12434  13A4  2BA6               	goto	u4060
 12435  13A5                     u4061:
 12436  13A5  2CC4               	goto	l1025
 12437  13A6                     u4060:
 12438  13A6                     l6075:
 12439  13A6  3002               	movlw	2
 12440  13A7  0021               	movlb	1	; select bank1
 12441  13A8  023E               	subwf	(_contTimShadow+1)^(0+128),w
 12442  13A9  308A               	movlw	138
 12443  13AA  1903               	skipnz
 12444  13AB  023D               	subwf	_contTimShadow^(0+128),w
 12445  13AC  1803               	skipnc
 12446  13AD  2BAF               	goto	u4071
 12447  13AE  2BB0               	goto	u4070
 12448  13AF                     u4071:
 12449  13AF  2CC4               	goto	l1025
 12450  13B0                     u4070:
 12451  13B0                     l6077:
 12452                           
 12453                           ;main.c: 587:         if(contTimShadow < 1) {
 12454  13B0  083D               	movf	_contTimShadow^(0+128),w
 12455  13B1  043E               	iorwf	(_contTimShadow+1)^(0+128),w
 12456  13B2  1D03               	btfss	3,2
 12457  13B3  2BB5               	goto	u4081
 12458  13B4  2BB6               	goto	u4080
 12459  13B5                     u4081:
 12460  13B5  2BCC               	goto	l6091
 12461  13B6                     u4080:
 12462  13B6                     l6079:
 12463                           
 12464                           ;main.c: 588:             char i = 0;
 12465  13B6  0020               	movlb	0	; select bank0
 12466  13B7  01DC               	clrf	despShadow@i
 12467                           
 12468                           ;main.c: 589:             for(i = 0; i < 22; i++)
 12469  13B8  01DC               	clrf	despShadow@i
 12470  13B9                     l6085:
 12471                           
 12472                           ;main.c: 590:                 shadowArray[i] = 255;
 12473  13B9  355C               	lslf	despShadow@i,w
 12474  13BA  3E20               	addlw	(low (_shadowArray| (0+512)))& (0+255)
 12475  13BB  0086               	movwf	6
 12476  13BC  3002               	movlw	2	; select bank4/5
 12477  13BD  0087               	movwf	7
 12478  13BE  30FF               	movlw	255
 12479  13BF  3FC0               	movwi [0]fsr1
 12480  13C0  3000               	movlw	0
 12481  13C1  3FC1               	movwi [1]fsr1
 12482  13C2                     l6087:
 12483  13C2  3001               	movlw	1
 12484  13C3  00D9               	movwf	??_despShadow
 12485  13C4  0859               	movf	??_despShadow,w
 12486  13C5  07DC               	addwf	despShadow@i,f
 12487  13C6                     l6089:
 12488  13C6  3016               	movlw	22
 12489  13C7  025C               	subwf	despShadow@i,w
 12490  13C8  1C03               	skipc
 12491  13C9  2BCB               	goto	u4091
 12492  13CA  2BCC               	goto	u4090
 12493  13CB                     u4091:
 12494  13CB  2BB9               	goto	l6085
 12495  13CC                     u4090:
 12496  13CC                     l6091:
 12497                           
 12498                           ;main.c: 592:         subContShadow++;
 12499  13CC  3001               	movlw	1
 12500  13CD  0020               	movlb	0	; select bank0
 12501  13CE  00D9               	movwf	??_despShadow
 12502  13CF  0859               	movf	??_despShadow,w
 12503  13D0  0021               	movlb	1	; select bank1
 12504  13D1  07DE               	addwf	_subContShadow^(0+128),f
 12505  13D2                     l6093:
 12506                           
 12507                           ;main.c: 593:         if(indexShadow < 25) {
 12508  13D2  3019               	movlw	25
 12509  13D3  0020               	movlb	0	; select bank0
 12510  13D4  023E               	subwf	_indexShadow,w
 12511  13D5  1803               	skipnc
 12512  13D6  2BD8               	goto	u4101
 12513  13D7  2BD9               	goto	u4100
 12514  13D8                     u4101:
 12515  13D8  2C92               	goto	l6125
 12516  13D9                     u4100:
 12517  13D9                     l6095:
 12518                           
 12519                           ;main.c: 594:             if(indexShadow < 22) {
 12520  13D9  3016               	movlw	22
 12521  13DA  023E               	subwf	_indexShadow,w
 12522  13DB  1803               	skipnc
 12523  13DC  2BDE               	goto	u4111
 12524  13DD  2BDF               	goto	u4110
 12525  13DE                     u4111:
 12526  13DE  2BFC               	goto	l6101
 12527  13DF                     u4110:
 12528  13DF                     l6097:
 12529                           
 12530                           ;main.c: 595:                 shadowArray[indexShadow] -= 6;
 12531  13DF  353E               	lslf	_indexShadow,w
 12532  13E0  3E20               	addlw	(low (_shadowArray| (0+512)))& (0+255)
 12533  13E1  0086               	movwf	6
 12534  13E2  3002               	movlw	2	; select bank4/5
 12535  13E3  0087               	movwf	7
 12536  13E4  30FA               	movlw	250
 12537  13E5  0781               	addwf	1,f
 12538  13E6  3141               	addfsr 1,1
 12539  13E7  30FF               	movlw	255
 12540  13E8  3D81               	addwfc	1,f
 12541  13E9  317F               	addfsr 1,-1
 12542                           
 12543                           ;main.c: 596:                 if(shadowArray[indexShadow] < 0)
 12544  13EA  353E               	lslf	_indexShadow,w
 12545  13EB  3E20               	addlw	(low (_shadowArray| (0+512)))& (0+255)
 12546  13EC  0086               	movwf	6
 12547  13ED  3002               	movlw	2	; select bank4/5
 12548  13EE  0087               	movwf	7
 12549  13EF  3141               	addfsr 1,1
 12550  13F0  1F81               	btfss	1,7
 12551  13F1  2BF3               	goto	u4121
 12552  13F2  2BF4               	goto	u4120
 12553  13F3                     u4121:
 12554  13F3  2BFC               	goto	l6101
 12555  13F4                     u4120:
 12556  13F4                     l6099:
 12557                           
 12558                           ;main.c: 597:                     shadowArray[indexShadow] = 0;
 12559  13F4  353E               	lslf	_indexShadow,w
 12560  13F5  3E20               	addlw	(low (_shadowArray| (0+512)))& (0+255)
 12561  13F6  0086               	movwf	6
 12562  13F7  3002               	movlw	2	; select bank4/5
 12563  13F8  0087               	movwf	7
 12564  13F9  3000               	movlw	0
 12565  13FA  3FC0               	movwi [0]fsr1
 12566  13FB  3FC1               	movwi [1]fsr1
 12567  13FC                     l6101:
 12568                           
 12569                           ;main.c: 599:             if(indexShadow > 0 && indexShadow < 23) {
 12570  13FC  083E               	movf	_indexShadow,w
 12571  13FD  1903               	btfsc	3,2
 12572  13FE  2C00               	goto	u4131
 12573  13FF  2C01               	goto	u4130
 12574  1400                     u4131:
 12575  1400  2C24               	goto	l6109
 12576  1401                     u4130:
 12577  1401                     l6103:
 12578  1401  3017               	movlw	23
 12579  1402  023E               	subwf	_indexShadow,w
 12580  1403  1803               	skipnc
 12581  1404  2C06               	goto	u4141
 12582  1405  2C07               	goto	u4140
 12583  1406                     u4141:
 12584  1406  2C24               	goto	l6109
 12585  1407                     u4140:
 12586  1407                     l6105:
 12587                           
 12588                           ;main.c: 600:                 shadowArray[indexShadow - 1] -= 6;
 12589  1407  353E               	lslf	_indexShadow,w
 12590  1408  3E1E               	addlw	(low ((_shadowArray| (0+512)+254)))& (0+255)
 12591  1409  0086               	movwf	6
 12592  140A  3002               	movlw	2	; select bank4/5
 12593  140B  0087               	movwf	7
 12594  140C  30FA               	movlw	250
 12595  140D  0781               	addwf	1,f
 12596  140E  3141               	addfsr 1,1
 12597  140F  30FF               	movlw	255
 12598  1410  3D81               	addwfc	1,f
 12599  1411  317F               	addfsr 1,-1
 12600                           
 12601                           ;main.c: 601:                 if(shadowArray[indexShadow - 1] < 0)
 12602  1412  353E               	lslf	_indexShadow,w
 12603  1413  3E1E               	addlw	(low ((_shadowArray| (0+512)+254)))& (0+255)
 12604  1414  0086               	movwf	6
 12605  1415  3002               	movlw	2	; select bank4/5
 12606  1416  0087               	movwf	7
 12607  1417  3141               	addfsr 1,1
 12608  1418  1F81               	btfss	1,7
 12609  1419  2C1B               	goto	u4151
 12610  141A  2C1C               	goto	u4150
 12611  141B                     u4151:
 12612  141B  2C24               	goto	l6109
 12613  141C                     u4150:
 12614  141C                     l6107:
 12615                           
 12616                           ;main.c: 602:                     shadowArray[indexShadow - 1] = 0;
 12617  141C  353E               	lslf	_indexShadow,w
 12618  141D  3E1E               	addlw	(low ((_shadowArray| (0+512)+254)))& (0+255)
 12619  141E  0086               	movwf	6
 12620  141F  3002               	movlw	2	; select bank4/5
 12621  1420  0087               	movwf	7
 12622  1421  3000               	movlw	0
 12623  1422  3FC0               	movwi [0]fsr1
 12624  1423  3FC1               	movwi [1]fsr1
 12625  1424                     l6109:
 12626                           
 12627                           ;main.c: 604:             if(indexShadow > 1 && indexShadow < 24) {
 12628  1424  3002               	movlw	2
 12629  1425  023E               	subwf	_indexShadow,w
 12630  1426  1C03               	skipc
 12631  1427  2C29               	goto	u4161
 12632  1428  2C2A               	goto	u4160
 12633  1429                     u4161:
 12634  1429  2C5A               	goto	l6117
 12635  142A                     u4160:
 12636  142A                     l6111:
 12637  142A  3018               	movlw	24
 12638  142B  023E               	subwf	_indexShadow,w
 12639  142C  1803               	skipnc
 12640  142D  2C2F               	goto	u4171
 12641  142E  2C30               	goto	u4170
 12642  142F                     u4171:
 12643  142F  2C5A               	goto	l6117
 12644  1430                     u4170:
 12645  1430                     l6113:
 12646                           
 12647                           ;main.c: 605:                 shadowArray[indexShadow - 2] += 6;
 12648  1430  353E               	lslf	_indexShadow,w
 12649  1431  3E1C               	addlw	(low ((_shadowArray| (0+512)+252)))& (0+255)
 12650  1432  0086               	movwf	6
 12651  1433  3002               	movlw	2	; select bank4/5
 12652  1434  0087               	movwf	7
 12653  1435  3006               	movlw	6
 12654  1436  0781               	addwf	1,f
 12655  1437  3141               	addfsr 1,1
 12656  1438  1803               	skipnc
 12657  1439  0A81               	incf	1,f
 12658                           
 12659                           ;main.c: 606:                 if(shadowArray[indexShadow - 2] > 255)
 12660  143A  353E               	lslf	_indexShadow,w
 12661  143B  3E1C               	addlw	(low ((_shadowArray| (0+512)+252)))& (0+255)
 12662  143C  0086               	movwf	6
 12663  143D  3002               	movlw	2	; select bank4/5
 12664  143E  0087               	movwf	7
 12665  143F  3F40               	moviw [0]fsr1
 12666  1440  00D9               	movwf	??_despShadow
 12667  1441  3F41               	moviw [1]fsr1
 12668  1442  00DA               	movwf	??_despShadow+1
 12669  1443  085A               	movf	??_despShadow+1,w
 12670  1444  3A80               	xorlw	128
 12671  1445  00DB               	movwf	??_despShadow+2
 12672  1446  3081               	movlw	129
 12673  1447  025B               	subwf	??_despShadow+2,w
 12674  1448  1D03               	skipz
 12675  1449  2C4C               	goto	u4185
 12676  144A  3000               	movlw	0
 12677  144B  0259               	subwf	??_despShadow,w
 12678  144C                     u4185:
 12679  144C  1C03               	skipc
 12680  144D  2C4F               	goto	u4181
 12681  144E  2C50               	goto	u4180
 12682  144F                     u4181:
 12683  144F  2C5A               	goto	l6117
 12684  1450                     u4180:
 12685  1450                     l6115:
 12686                           
 12687                           ;main.c: 607:                     shadowArray[indexShadow - 2] = 255;
 12688  1450  0020               	movlb	0	; select bank0
 12689  1451  353E               	lslf	_indexShadow,w
 12690  1452  3E1C               	addlw	(low ((_shadowArray| (0+512)+252)))& (0+255)
 12691  1453  0086               	movwf	6
 12692  1454  3002               	movlw	2	; select bank4/5
 12693  1455  0087               	movwf	7
 12694  1456  30FF               	movlw	255
 12695  1457  3FC0               	movwi [0]fsr1
 12696  1458  3000               	movlw	0
 12697  1459  3FC1               	movwi [1]fsr1
 12698  145A                     l6117:
 12699                           
 12700                           ;main.c: 609:             if(indexShadow > 2 && indexShadow < 25) {
 12701  145A  3003               	movlw	3
 12702  145B  0020               	movlb	0	; select bank0
 12703  145C  023E               	subwf	_indexShadow,w
 12704  145D  1C03               	skipc
 12705  145E  2C60               	goto	u4191
 12706  145F  2C61               	goto	u4190
 12707  1460                     u4191:
 12708  1460  2CAB               	goto	l6139
 12709  1461                     u4190:
 12710  1461                     l6119:
 12711  1461  3019               	movlw	25
 12712  1462  023E               	subwf	_indexShadow,w
 12713  1463  1803               	skipnc
 12714  1464  2C66               	goto	u4201
 12715  1465  2C67               	goto	u4200
 12716  1466                     u4201:
 12717  1466  2CAB               	goto	l6139
 12718  1467                     u4200:
 12719  1467                     l6121:
 12720                           
 12721                           ;main.c: 610:                 shadowArray[indexShadow - 3] += 6;
 12722  1467  353E               	lslf	_indexShadow,w
 12723  1468  3E1A               	addlw	(low ((_shadowArray| (0+512)+250)))& (0+255)
 12724  1469  0086               	movwf	6
 12725  146A  3002               	movlw	2	; select bank4/5
 12726  146B  0087               	movwf	7
 12727  146C  3006               	movlw	6
 12728  146D  0781               	addwf	1,f
 12729  146E  3141               	addfsr 1,1
 12730  146F  1803               	skipnc
 12731  1470  0A81               	incf	1,f
 12732                           
 12733                           ;main.c: 611:                 if(shadowArray[indexShadow - 3] > 255)
 12734  1471  353E               	lslf	_indexShadow,w
 12735  1472  3E1A               	addlw	(low ((_shadowArray| (0+512)+250)))& (0+255)
 12736  1473  0086               	movwf	6
 12737  1474  3002               	movlw	2	; select bank4/5
 12738  1475  0087               	movwf	7
 12739  1476  3F40               	moviw [0]fsr1
 12740  1477  00D9               	movwf	??_despShadow
 12741  1478  3F41               	moviw [1]fsr1
 12742  1479  00DA               	movwf	??_despShadow+1
 12743  147A  085A               	movf	??_despShadow+1,w
 12744  147B  3A80               	xorlw	128
 12745  147C  00DB               	movwf	??_despShadow+2
 12746  147D  3081               	movlw	129
 12747  147E  025B               	subwf	??_despShadow+2,w
 12748  147F  1D03               	skipz
 12749  1480  2C83               	goto	u4215
 12750  1481  3000               	movlw	0
 12751  1482  0259               	subwf	??_despShadow,w
 12752  1483                     u4215:
 12753  1483  1C03               	skipc
 12754  1484  2C86               	goto	u4211
 12755  1485  2C87               	goto	u4210
 12756  1486                     u4211:
 12757  1486  2CAB               	goto	l6139
 12758  1487                     u4210:
 12759  1487                     l6123:
 12760                           
 12761                           ;main.c: 612:                     shadowArray[indexShadow - 3] = 255;
 12762  1487  0020               	movlb	0	; select bank0
 12763  1488  353E               	lslf	_indexShadow,w
 12764  1489  3E1A               	addlw	(low ((_shadowArray| (0+512)+250)))& (0+255)
 12765  148A  0086               	movwf	6
 12766  148B  3002               	movlw	2	; select bank4/5
 12767  148C  0087               	movwf	7
 12768  148D  30FF               	movlw	255
 12769  148E  3FC0               	movwi [0]fsr1
 12770  148F  3000               	movlw	0
 12771  1490  3FC1               	movwi [1]fsr1
 12772  1491  2CAB               	goto	l6139
 12773  1492                     l6125:
 12774                           
 12775                           ;main.c: 615:             char i = 0;
 12776  1492  01DD               	clrf	despShadow@i_1341
 12777                           
 12778                           ;main.c: 616:             for(i = 0; i < 22; i++)
 12779  1493  01DD               	clrf	despShadow@i_1341
 12780  1494                     l6131:
 12781                           
 12782                           ;main.c: 617:                 shadowArray[i] = 255;
 12783  1494  355D               	lslf	despShadow@i_1341,w
 12784  1495  3E20               	addlw	(low (_shadowArray| (0+512)))& (0+255)
 12785  1496  0086               	movwf	6
 12786  1497  3002               	movlw	2	; select bank4/5
 12787  1498  0087               	movwf	7
 12788  1499  30FF               	movlw	255
 12789  149A  3FC0               	movwi [0]fsr1
 12790  149B  3000               	movlw	0
 12791  149C  3FC1               	movwi [1]fsr1
 12792  149D                     l6133:
 12793  149D  3001               	movlw	1
 12794  149E  00D9               	movwf	??_despShadow
 12795  149F  0859               	movf	??_despShadow,w
 12796  14A0  07DD               	addwf	despShadow@i_1341,f
 12797  14A1                     l6135:
 12798  14A1  3016               	movlw	22
 12799  14A2  025D               	subwf	despShadow@i_1341,w
 12800  14A3  1C03               	skipc
 12801  14A4  2CA6               	goto	u4221
 12802  14A5  2CA7               	goto	u4220
 12803  14A6                     u4221:
 12804  14A6  2C94               	goto	l6131
 12805  14A7                     u4220:
 12806  14A7                     l6137:
 12807                           
 12808                           ;main.c: 618:             rstShadow(0);
 12809  14A7  3000               	movlw	0
 12810  14A8  31A2  22AB  3193   	fcall	_rstShadow
 12811  14AB                     l6139:
 12812                           
 12813                           ;main.c: 620:         if(subContShadow >= 25) {
 12814  14AB  3019               	movlw	25
 12815  14AC  0021               	movlb	1	; select bank1
 12816  14AD  025E               	subwf	_subContShadow^(0+128),w
 12817  14AE  1C03               	skipc
 12818  14AF  2CB1               	goto	u4231
 12819  14B0  2CB2               	goto	u4230
 12820  14B1                     u4231:
 12821  14B1  2CB9               	goto	l6145
 12822  14B2                     u4230:
 12823  14B2                     l6141:
 12824                           
 12825                           ;main.c: 621:             indexShadow++;
 12826  14B2  3001               	movlw	1
 12827  14B3  0020               	movlb	0	; select bank0
 12828  14B4  00D9               	movwf	??_despShadow
 12829  14B5  0859               	movf	??_despShadow,w
 12830  14B6  07BE               	addwf	_indexShadow,f
 12831  14B7                     l6143:
 12832                           
 12833                           ;main.c: 622:             subContShadow = 0;
 12834  14B7  0021               	movlb	1	; select bank1
 12835  14B8  01DE               	clrf	_subContShadow^(0+128)
 12836  14B9                     l6145:
 12837                           
 12838                           ;main.c: 624:         translateShadows();
 12839  14B9  3192  227C  3193   	fcall	_translateShadows
 12840  14BC                     l6147:
 12841                           
 12842                           ;main.c: 625:         sendOrderX();
 12843  14BC  31A0  20E0  3193   	fcall	_sendOrderX
 12844  14BF                     l6149:
 12845                           
 12846                           ;main.c: 626:         contTimShadow++;
 12847  14BF  3001               	movlw	1
 12848  14C0  0021               	movlb	1	; select bank1
 12849  14C1  07BD               	addwf	_contTimShadow^(0+128),f
 12850  14C2  3000               	movlw	0
 12851  14C3  3DBE               	addwfc	(_contTimShadow+1)^(0+128),f
 12852  14C4                     l1025:
 12853  14C4  0008               	return
 12854  14C5                     __end_of_despShadow:
 12855                           
 12856                           	psect	text24
 12857  127C                     __ptext24:	
 12858 ;; *************** function _translateShadows *****************
 12859 ;; Defined at:
 12860 ;;		line 630 in file "main.c"
 12861 ;; Parameters:    Size  Location     Type
 12862 ;;		None
 12863 ;; Auto vars:     Size  Location     Type
 12864 ;;  sas             1   10[BANK0 ] unsigned char 
 12865 ;;  i               1   11[BANK0 ] unsigned char 
 12866 ;; Return value:  Size  Location     Type
 12867 ;;                  1    wreg      void 
 12868 ;; Registers used:
 12869 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12870 ;; Tracked objects:
 12871 ;;		On entry : 0/0
 12872 ;;		On exit  : 0/0
 12873 ;;		Unchanged: 0/0
 12874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12876 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12877 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12878 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12879 ;;Total ram usage:        3 bytes
 12880 ;; Hardware stack levels used: 1
 12881 ;; Hardware stack levels required when called: 12
 12882 ;; This function calls:
 12883 ;;		_val2group
 12884 ;; This function is called by:
 12885 ;;		_despShadow
 12886 ;; This function uses a non-reentrant model
 12887 ;;
 12888                           
 12889                           
 12890                           ;psect for function _translateShadows
 12891  127C                     _translateShadows:
 12892  127C                     l5735:	
 12893                           ;incstack = 0
 12894                           ; Regs used in _translateShadows: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12895                           
 12896                           
 12897                           ;main.c: 631:     char i = 0;
 12898  127C  0020               	movlb	0	; select bank0
 12899  127D  01D8               	clrf	translateShadows@i
 12900                           
 12901                           ;main.c: 632:     for(i = 0; i < groupSize[11]; i++) {
 12902  127E  01D8               	clrf	translateShadows@i
 12903  127F  2A9F               	goto	l5741
 12904  1280                     l5737:
 12905                           
 12906                           ;main.c: 633:         NeckBL[i] = shadowArray[i];
 12907  1280  3558               	lslf	translateShadows@i,w
 12908  1281  3E20               	addlw	(low (_shadowArray| (0+512)))& (0+255)
 12909  1282  0086               	movwf	6
 12910  1283  3002               	movlw	2	; select bank4/5
 12911  1284  0087               	movwf	7
 12912  1285  0801               	movf	1,w
 12913  1286  00D6               	movwf	??_translateShadows
 12914  1287  0858               	movf	translateShadows@i,w
 12915  1288  3EC2               	addlw	(low (_NeckBL| (0+256)))& (0+255)
 12916  1289  0086               	movwf	6
 12917  128A  3001               	movlw	1	; select bank3/4
 12918  128B  0087               	movwf	7
 12919  128C  0856               	movf	??_translateShadows,w
 12920  128D  0081               	movwf	1
 12921                           
 12922                           ;main.c: 634:         NeckBR[i] = shadowArray[i];
 12923  128E  3558               	lslf	translateShadows@i,w
 12924  128F  3E20               	addlw	(low (_shadowArray| (0+512)))& (0+255)
 12925  1290  0086               	movwf	6
 12926  1291  3002               	movlw	2	; select bank4/5
 12927  1292  0087               	movwf	7
 12928  1293  0801               	movf	1,w
 12929  1294  00D6               	movwf	??_translateShadows
 12930  1295  0858               	movf	translateShadows@i,w
 12931  1296  3EB0               	addlw	(low (_NeckBR| 0))& (0+255)
 12932  1297  0086               	movwf	6
 12933  1298  0187               	clrf	7
 12934  1299  0856               	movf	??_translateShadows,w
 12935  129A  0081               	movwf	1
 12936  129B                     l5739:
 12937                           
 12938                           ;main.c: 635:     }
 12939  129B  3001               	movlw	1
 12940  129C  00D6               	movwf	??_translateShadows
 12941  129D  0856               	movf	??_translateShadows,w
 12942  129E  07D8               	addwf	translateShadows@i,f
 12943  129F                     l5741:
 12944  129F  0026               	movlb	6	; select bank6
 12945  12A0  082B               	movf	(_groupSize^(0+768)+11),w
 12946  12A1  0020               	movlb	0	; select bank0
 12947  12A2  0258               	subwf	translateShadows@i,w
 12948  12A3  1C03               	skipc
 12949  12A4  2AA6               	goto	u3851
 12950  12A5  2AA7               	goto	u3850
 12951  12A6                     u3851:
 12952  12A6  2A80               	goto	l5737
 12953  12A7                     u3850:
 12954  12A7                     l5743:
 12955                           
 12956                           ;main.c: 636:     val2group(9, shadowArray[4]);
 12957  12A7  0024               	movlb	4	; select bank4
 12958  12A8  0828               	movf	(_shadowArray^(0+512)+8),w
 12959  12A9  0020               	movlb	0	; select bank0
 12960  12AA  00D6               	movwf	??_translateShadows
 12961  12AB  0856               	movf	??_translateShadows,w
 12962  12AC  00D1               	movwf	val2group@val
 12963  12AD  3009               	movlw	9
 12964  12AE  3196  2662  3192   	fcall	_val2group
 12965                           
 12966                           ;main.c: 637:     val2group(10, shadowArray[4]);
 12967  12B1  0024               	movlb	4	; select bank4
 12968  12B2  0828               	movf	(_shadowArray^(0+512)+8),w
 12969  12B3  0020               	movlb	0	; select bank0
 12970  12B4  00D6               	movwf	??_translateShadows
 12971  12B5  0856               	movf	??_translateShadows,w
 12972  12B6  00D1               	movwf	val2group@val
 12973  12B7  300A               	movlw	10
 12974  12B8  3196  2662  3192   	fcall	_val2group
 12975                           
 12976                           ;main.c: 638:     val2group(19, shadowArray[5]);
 12977  12BB  0024               	movlb	4	; select bank4
 12978  12BC  082A               	movf	(_shadowArray^(0+512)+10),w
 12979  12BD  0020               	movlb	0	; select bank0
 12980  12BE  00D6               	movwf	??_translateShadows
 12981  12BF  0856               	movf	??_translateShadows,w
 12982  12C0  00D1               	movwf	val2group@val
 12983  12C1  3013               	movlw	19
 12984  12C2  3196  2662  3192   	fcall	_val2group
 12985                           
 12986                           ;main.c: 639:     val2group(20, shadowArray[5]);
 12987  12C5  0024               	movlb	4	; select bank4
 12988  12C6  082A               	movf	(_shadowArray^(0+512)+10),w
 12989  12C7  0020               	movlb	0	; select bank0
 12990  12C8  00D6               	movwf	??_translateShadows
 12991  12C9  0856               	movf	??_translateShadows,w
 12992  12CA  00D1               	movwf	val2group@val
 12993  12CB  3014               	movlw	20
 12994  12CC  3196  2662  3192   	fcall	_val2group
 12995                           
 12996                           ;main.c: 640:     val2group(7, shadowArray[6]);
 12997  12CF  0024               	movlb	4	; select bank4
 12998  12D0  082C               	movf	(_shadowArray^(0+512)+12),w
 12999  12D1  0020               	movlb	0	; select bank0
 13000  12D2  00D6               	movwf	??_translateShadows
 13001  12D3  0856               	movf	??_translateShadows,w
 13002  12D4  00D1               	movwf	val2group@val
 13003  12D5  3007               	movlw	7
 13004  12D6  3196  2662  3192   	fcall	_val2group
 13005                           
 13006                           ;main.c: 641:     val2group(8, shadowArray[6]);
 13007  12D9  0024               	movlb	4	; select bank4
 13008  12DA  082C               	movf	(_shadowArray^(0+512)+12),w
 13009  12DB  0020               	movlb	0	; select bank0
 13010  12DC  00D6               	movwf	??_translateShadows
 13011  12DD  0856               	movf	??_translateShadows,w
 13012  12DE  00D1               	movwf	val2group@val
 13013  12DF  3008               	movlw	8
 13014  12E0  3196  2662  3192   	fcall	_val2group
 13015                           
 13016                           ;main.c: 642:     val2group(5, shadowArray[7]);
 13017  12E3  0024               	movlb	4	; select bank4
 13018  12E4  082E               	movf	(_shadowArray^(0+512)+14),w
 13019  12E5  0020               	movlb	0	; select bank0
 13020  12E6  00D6               	movwf	??_translateShadows
 13021  12E7  0856               	movf	??_translateShadows,w
 13022  12E8  00D1               	movwf	val2group@val
 13023  12E9  3005               	movlw	5
 13024  12EA  3196  2662  3192   	fcall	_val2group
 13025                           
 13026                           ;main.c: 643:     val2group(6, shadowArray[7]);
 13027  12ED  0024               	movlb	4	; select bank4
 13028  12EE  082E               	movf	(_shadowArray^(0+512)+14),w
 13029  12EF  0020               	movlb	0	; select bank0
 13030  12F0  00D6               	movwf	??_translateShadows
 13031  12F1  0856               	movf	??_translateShadows,w
 13032  12F2  00D1               	movwf	val2group@val
 13033  12F3  3006               	movlw	6
 13034  12F4  3196  2662  3192   	fcall	_val2group
 13035                           
 13036                           ;main.c: 644:     val2group(3, shadowArray[8]);
 13037  12F7  0024               	movlb	4	; select bank4
 13038  12F8  0830               	movf	(_shadowArray^(0+512)+16),w
 13039  12F9  0020               	movlb	0	; select bank0
 13040  12FA  00D6               	movwf	??_translateShadows
 13041  12FB  0856               	movf	??_translateShadows,w
 13042  12FC  00D1               	movwf	val2group@val
 13043  12FD  3003               	movlw	3
 13044  12FE  3196  2662  3192   	fcall	_val2group
 13045                           
 13046                           ;main.c: 645:     val2group(4, shadowArray[8]);
 13047  1301  0024               	movlb	4	; select bank4
 13048  1302  0830               	movf	(_shadowArray^(0+512)+16),w
 13049  1303  0020               	movlb	0	; select bank0
 13050  1304  00D6               	movwf	??_translateShadows
 13051  1305  0856               	movf	??_translateShadows,w
 13052  1306  00D1               	movwf	val2group@val
 13053  1307  3004               	movlw	4
 13054  1308  3196  2662  3192   	fcall	_val2group
 13055                           
 13056                           ;main.c: 646:     val2group(13, shadowArray[9]);
 13057  130B  0024               	movlb	4	; select bank4
 13058  130C  0832               	movf	(_shadowArray^(0+512)+18),w
 13059  130D  0020               	movlb	0	; select bank0
 13060  130E  00D6               	movwf	??_translateShadows
 13061  130F  0856               	movf	??_translateShadows,w
 13062  1310  00D1               	movwf	val2group@val
 13063  1311  300D               	movlw	13
 13064  1312  3196  2662  3192   	fcall	_val2group
 13065                           
 13066                           ;main.c: 647:     val2group(14, shadowArray[9]);
 13067  1315  0024               	movlb	4	; select bank4
 13068  1316  0832               	movf	(_shadowArray^(0+512)+18),w
 13069  1317  0020               	movlb	0	; select bank0
 13070  1318  00D6               	movwf	??_translateShadows
 13071  1319  0856               	movf	??_translateShadows,w
 13072  131A  00D1               	movwf	val2group@val
 13073  131B  300E               	movlw	14
 13074  131C  3196  2662  3192   	fcall	_val2group
 13075                           
 13076                           ;main.c: 648:     val2group(15, shadowArray[10]);
 13077  131F  0024               	movlb	4	; select bank4
 13078  1320  0834               	movf	(_shadowArray^(0+512)+20),w
 13079  1321  0020               	movlb	0	; select bank0
 13080  1322  00D6               	movwf	??_translateShadows
 13081  1323  0856               	movf	??_translateShadows,w
 13082  1324  00D1               	movwf	val2group@val
 13083  1325  300F               	movlw	15
 13084  1326  3196  2662  3192   	fcall	_val2group
 13085                           
 13086                           ;main.c: 649:     val2group(16, shadowArray[10]);
 13087  1329  0024               	movlb	4	; select bank4
 13088  132A  0834               	movf	(_shadowArray^(0+512)+20),w
 13089  132B  0020               	movlb	0	; select bank0
 13090  132C  00D6               	movwf	??_translateShadows
 13091  132D  0856               	movf	??_translateShadows,w
 13092  132E  00D1               	movwf	val2group@val
 13093  132F  3010               	movlw	16
 13094  1330  3196  2662  3192   	fcall	_val2group
 13095                           
 13096                           ;main.c: 650:     val2group(17, shadowArray[11]);
 13097  1333  0024               	movlb	4	; select bank4
 13098  1334  0836               	movf	(_shadowArray^(0+512)+22),w
 13099  1335  0020               	movlb	0	; select bank0
 13100  1336  00D6               	movwf	??_translateShadows
 13101  1337  0856               	movf	??_translateShadows,w
 13102  1338  00D1               	movwf	val2group@val
 13103  1339  3011               	movlw	17
 13104  133A  3196  2662  3192   	fcall	_val2group
 13105                           
 13106                           ;main.c: 651:     val2group(18, shadowArray[11]);
 13107  133D  0024               	movlb	4	; select bank4
 13108  133E  0836               	movf	(_shadowArray^(0+512)+22),w
 13109  133F  0020               	movlb	0	; select bank0
 13110  1340  00D6               	movwf	??_translateShadows
 13111  1341  0856               	movf	??_translateShadows,w
 13112  1342  00D1               	movwf	val2group@val
 13113  1343  3012               	movlw	18
 13114  1344  3196  2662  3192   	fcall	_val2group
 13115                           
 13116                           ;main.c: 652:     val2group(23, shadowArray[12]);
 13117  1347  0024               	movlb	4	; select bank4
 13118  1348  0838               	movf	(_shadowArray^(0+512)+24),w
 13119  1349  0020               	movlb	0	; select bank0
 13120  134A  00D6               	movwf	??_translateShadows
 13121  134B  0856               	movf	??_translateShadows,w
 13122  134C  00D1               	movwf	val2group@val
 13123  134D  3017               	movlw	23
 13124  134E  3196  2662  3192   	fcall	_val2group
 13125                           
 13126                           ;main.c: 653:     val2group(24, shadowArray[12]);
 13127  1351  0024               	movlb	4	; select bank4
 13128  1352  0838               	movf	(_shadowArray^(0+512)+24),w
 13129  1353  0020               	movlb	0	; select bank0
 13130  1354  00D6               	movwf	??_translateShadows
 13131  1355  0856               	movf	??_translateShadows,w
 13132  1356  00D1               	movwf	val2group@val
 13133  1357  3018               	movlw	24
 13134  1358  3196  2662  3192   	fcall	_val2group
 13135                           
 13136                           ;main.c: 654:     val2group(25, shadowArray[13]);
 13137  135B  0024               	movlb	4	; select bank4
 13138  135C  083A               	movf	(_shadowArray^(0+512)+26),w
 13139  135D  0020               	movlb	0	; select bank0
 13140  135E  00D6               	movwf	??_translateShadows
 13141  135F  0856               	movf	??_translateShadows,w
 13142  1360  00D1               	movwf	val2group@val
 13143  1361  3019               	movlw	25
 13144  1362  3196  2662  3192   	fcall	_val2group
 13145                           
 13146                           ;main.c: 655:     val2group(26, shadowArray[13]);
 13147  1365  0024               	movlb	4	; select bank4
 13148  1366  083A               	movf	(_shadowArray^(0+512)+26),w
 13149  1367  0020               	movlb	0	; select bank0
 13150  1368  00D6               	movwf	??_translateShadows
 13151  1369  0856               	movf	??_translateShadows,w
 13152  136A  00D1               	movwf	val2group@val
 13153  136B  301A               	movlw	26
 13154  136C  3196  2662  3192   	fcall	_val2group
 13155  136F                     l5745:
 13156                           
 13157                           ;main.c: 656:     for(i = 0; i < groupSize[27]; i++) {
 13158  136F  0020               	movlb	0	; select bank0
 13159  1370  01D8               	clrf	translateShadows@i
 13160  1371  2B97               	goto	l5753
 13161  1372                     l5747:
 13162                           
 13163                           ;main.c: 657:         char sas = i + 14;
 13164  1372  0858               	movf	translateShadows@i,w
 13165  1373  3E0E               	addlw	14
 13166  1374  00D6               	movwf	??_translateShadows
 13167  1375  0856               	movf	??_translateShadows,w
 13168  1376  00D7               	movwf	translateShadows@sas
 13169  1377                     l5749:
 13170                           
 13171                           ;main.c: 658:         ShoeL[i] = shadowArray[sas];
 13172  1377  3557               	lslf	translateShadows@sas,w
 13173  1378  3E20               	addlw	(low (_shadowArray| (0+512)))& (0+255)
 13174  1379  0086               	movwf	6
 13175  137A  3002               	movlw	2	; select bank4/5
 13176  137B  0087               	movwf	7
 13177  137C  0801               	movf	1,w
 13178  137D  00D6               	movwf	??_translateShadows
 13179  137E  0858               	movf	translateShadows@i,w
 13180  137F  3EC3               	addlw	(low (_ShoeL| (0+512)))& (0+255)
 13181  1380  0086               	movwf	6
 13182  1381  3002               	movlw	2	; select bank5/6
 13183  1382  0087               	movwf	7
 13184  1383  0856               	movf	??_translateShadows,w
 13185  1384  0081               	movwf	1
 13186  1385                     l5751:
 13187                           
 13188                           ;main.c: 659:         ShoeR[i] = shadowArray[sas];
 13189  1385  3557               	lslf	translateShadows@sas,w
 13190  1386  3E20               	addlw	(low (_shadowArray| (0+512)))& (0+255)
 13191  1387  0086               	movwf	6
 13192  1388  3002               	movlw	2	; select bank4/5
 13193  1389  0087               	movwf	7
 13194  138A  0801               	movf	1,w
 13195  138B  00D6               	movwf	??_translateShadows
 13196  138C  0858               	movf	translateShadows@i,w
 13197  138D  3EBB               	addlw	(low (_ShoeR| (0+512)))& (0+255)
 13198  138E  0086               	movwf	6
 13199  138F  3002               	movlw	2	; select bank5/6
 13200  1390  0087               	movwf	7
 13201  1391  0856               	movf	??_translateShadows,w
 13202  1392  0081               	movwf	1
 13203                           
 13204                           ;main.c: 660:     }
 13205  1393  3001               	movlw	1
 13206  1394  00D6               	movwf	??_translateShadows
 13207  1395  0856               	movf	??_translateShadows,w
 13208  1396  07D8               	addwf	translateShadows@i,f
 13209  1397                     l5753:
 13210  1397  0026               	movlb	6	; select bank6
 13211  1398  083B               	movf	(_groupSize^(0+768)+27),w
 13212  1399  0020               	movlb	0	; select bank0
 13213  139A  0258               	subwf	translateShadows@i,w
 13214  139B  1C03               	skipc
 13215  139C  2B9E               	goto	u3861
 13216  139D  2B9F               	goto	u3860
 13217  139E                     u3861:
 13218  139E  2B72               	goto	l5747
 13219  139F                     u3860:
 13220  139F                     l1034:
 13221  139F  0008               	return
 13222  13A0                     __end_of_translateShadows:
 13223                           
 13224                           	psect	text25
 13225  1A11                     __ptext25:	
 13226 ;; *************** function _demoEfectOn *****************
 13227 ;; Defined at:
 13228 ;;		line 992 in file "main.c"
 13229 ;; Parameters:    Size  Location     Type
 13230 ;;		None
 13231 ;; Auto vars:     Size  Location     Type
 13232 ;;		None
 13233 ;; Return value:  Size  Location     Type
 13234 ;;                  1    wreg      void 
 13235 ;; Registers used:
 13236 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13237 ;; Tracked objects:
 13238 ;;		On entry : 0/0
 13239 ;;		On exit  : 0/0
 13240 ;;		Unchanged: 0/0
 13241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13244 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13245 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13246 ;;Total ram usage:        1 bytes
 13247 ;; Hardware stack levels used: 1
 13248 ;; Hardware stack levels required when called: 14
 13249 ;; This function calls:
 13250 ;;		_allBodyVal
 13251 ;;		_putch
 13252 ;;		_rstDemoOn
 13253 ;;		_rstMusik
 13254 ;;		_sendOrderX
 13255 ;; This function is called by:
 13256 ;;		_secuences
 13257 ;; This function uses a non-reentrant model
 13258 ;;
 13259                           
 13260                           
 13261                           ;psect for function _demoEfectOn
 13262  1A11                     _demoEfectOn:
 13263  1A11                     l6371:	
 13264                           ;incstack = 0
 13265                           ; Regs used in _demoEfectOn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13266                           
 13267                           
 13268                           ;main.c: 993:     if(timDemoOn < 600) {
 13269  1A11  3002               	movlw	2
 13270  1A12  0021               	movlb	1	; select bank1
 13271  1A13  0246               	subwf	(_timDemoOn+1)^(0+128),w
 13272  1A14  3058               	movlw	88
 13273  1A15  1903               	skipnz
 13274  1A16  0245               	subwf	_timDemoOn^(0+128),w
 13275  1A17  1803               	skipnc
 13276  1A18  2A1A               	goto	u4671
 13277  1A19  2A1B               	goto	u4670
 13278  1A1A                     u4671:
 13279  1A1A  2A67               	goto	l1186
 13280  1A1B                     u4670:
 13281  1A1B                     l6373:
 13282                           
 13283                           ;main.c: 994:         timDemoOn++;
 13284  1A1B  3001               	movlw	1
 13285  1A1C  07C5               	addwf	_timDemoOn^(0+128),f
 13286  1A1D  3000               	movlw	0
 13287  1A1E  3DC6               	addwfc	(_timDemoOn+1)^(0+128),f
 13288  1A1F                     l6375:
 13289                           
 13290                           ;main.c: 995:         if(!lightsOn) {
 13291  1A1F  0020               	movlb	0	; select bank0
 13292  1A20  0844               	movf	_lightsOn,w
 13293  1A21  1D03               	btfss	3,2
 13294  1A22  2A24               	goto	u4681
 13295  1A23  2A25               	goto	u4680
 13296  1A24                     u4681:
 13297  1A24  2A55               	goto	l6389
 13298  1A25                     u4680:
 13299  1A25                     l6377:
 13300                           
 13301                           ;main.c: 996:             if(timDemoOn < 260) {
 13302  1A25  3001               	movlw	1
 13303  1A26  0021               	movlb	1	; select bank1
 13304  1A27  0246               	subwf	(_timDemoOn+1)^(0+128),w
 13305  1A28  3004               	movlw	4
 13306  1A29  1903               	skipnz
 13307  1A2A  0245               	subwf	_timDemoOn^(0+128),w
 13308  1A2B  1803               	skipnc
 13309  1A2C  2A2E               	goto	u4691
 13310  1A2D  2A2F               	goto	u4690
 13311  1A2E                     u4691:
 13312  1A2E  2A67               	goto	l1186
 13313  1A2F                     u4690:
 13314  1A2F                     l6379:
 13315                           
 13316                           ;main.c: 997:                 fullBodyVal += 1;
 13317  1A2F  3001               	movlw	1
 13318  1A30  0020               	movlb	0	; select bank0
 13319  1A31  07B0               	addwf	_fullBodyVal,f
 13320  1A32  3000               	movlw	0
 13321  1A33  3DB1               	addwfc	_fullBodyVal+1,f
 13322                           
 13323                           ;main.c: 998:                 if(fullBodyVal >= 255) {
 13324  1A34  0831               	movf	_fullBodyVal+1,w
 13325  1A35  3A80               	xorlw	128
 13326  1A36  00DF               	movwf	??_demoEfectOn
 13327  1A37  3080               	movlw	128
 13328  1A38  025F               	subwf	??_demoEfectOn,w
 13329  1A39  1D03               	skipz
 13330  1A3A  2A3D               	goto	u4705
 13331  1A3B  30FF               	movlw	255
 13332  1A3C  0230               	subwf	_fullBodyVal,w
 13333  1A3D                     u4705:
 13334  1A3D  1C03               	skipc
 13335  1A3E  2A40               	goto	u4701
 13336  1A3F  2A41               	goto	u4700
 13337  1A40                     u4701:
 13338  1A40  2A48               	goto	l6385
 13339  1A41                     u4700:
 13340  1A41                     l6381:
 13341                           
 13342                           ;main.c: 999:                     fullBodyVal = 255;
 13343  1A41  30FF               	movlw	255
 13344  1A42  0020               	movlb	0	; select bank0
 13345  1A43  00B0               	movwf	_fullBodyVal
 13346  1A44  3000               	movlw	0
 13347  1A45  00B1               	movwf	_fullBodyVal+1
 13348  1A46                     l6383:
 13349                           
 13350                           ;main.c: 1000:                     lightsOn = 1;
 13351  1A46  01C4               	clrf	_lightsOn
 13352  1A47  0AC4               	incf	_lightsOn,f
 13353  1A48                     l6385:
 13354                           
 13355                           ;main.c: 1002:                 allBodyVal((char)fullBodyVal, genVal);
 13356  1A48  0020               	movlb	0	; select bank0
 13357  1A49  0835               	movf	_genVal,w
 13358  1A4A  00DF               	movwf	??_demoEfectOn
 13359  1A4B  085F               	movf	??_demoEfectOn,w
 13360  1A4C  00DA               	movwf	allBodyVal@color
 13361  1A4D  0830               	movf	_fullBodyVal,w
 13362  1A4E  31A4  24A5  319A   	fcall	_allBodyVal
 13363  1A51                     l6387:
 13364                           
 13365                           ;main.c: 1003:                 sendOrderX();
 13366  1A51  31A0  20E0  319A   	fcall	_sendOrderX
 13367  1A54  2A67               	goto	l1186
 13368  1A55                     l6389:
 13369                           
 13370                           ;main.c: 1006:             rstDemoOn(0);
 13371  1A55  3000               	movlw	0
 13372  1A56  31A1  21D2  319A   	fcall	_rstDemoOn
 13373                           
 13374                           ;main.c: 1007:             putch('z');
 13375  1A59  307A               	movlw	122
 13376  1A5A  31A0  20EE  319A   	fcall	_putch
 13377  1A5D                     l6391:
 13378                           
 13379                           ;main.c: 1008:             if(!musikRun)
 13380  1A5D  0020               	movlb	0	; select bank0
 13381  1A5E  083A               	movf	_musikRun,w
 13382  1A5F  1D03               	btfss	3,2
 13383  1A60  2A62               	goto	u4711
 13384  1A61  2A63               	goto	u4710
 13385  1A62                     u4711:
 13386  1A62  2A67               	goto	l1186
 13387  1A63                     u4710:
 13388  1A63                     l6393:
 13389                           
 13390                           ;main.c: 1009:                 rstMusik(1);
 13391  1A63  3001               	movlw	1
 13392  1A64  31A2  22DB  319A   	fcall	_rstMusik
 13393  1A67                     l1186:
 13394  1A67  0008               	return
 13395  1A68                     __end_of_demoEfectOn:
 13396                           
 13397                           	psect	text26
 13398  1CA2                     __ptext26:	
 13399 ;; *************** function _demoEfectOff *****************
 13400 ;; Defined at:
 13401 ;;		line 1154 in file "main.c"
 13402 ;; Parameters:    Size  Location     Type
 13403 ;;		None
 13404 ;; Auto vars:     Size  Location     Type
 13405 ;;		None
 13406 ;; Return value:  Size  Location     Type
 13407 ;;                  1    wreg      void 
 13408 ;; Registers used:
 13409 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13410 ;; Tracked objects:
 13411 ;;		On entry : 0/0
 13412 ;;		On exit  : 0/0
 13413 ;;		Unchanged: 0/0
 13414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13417 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13418 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13419 ;;Total ram usage:        1 bytes
 13420 ;; Hardware stack levels used: 1
 13421 ;; Hardware stack levels required when called: 16
 13422 ;; This function calls:
 13423 ;;		_allBodyVal
 13424 ;;		_resetAndOff
 13425 ;;		_sendOrderX
 13426 ;; This function is called by:
 13427 ;;		_secuences
 13428 ;; This function uses a non-reentrant model
 13429 ;;
 13430                           
 13431                           
 13432                           ;psect for function _demoEfectOff
 13433  1CA2                     _demoEfectOff:
 13434  1CA2                     l6595:	
 13435                           ;incstack = 0
 13436 ;; hardware stack exceeded
 13437                           ; Regs used in _demoEfectOff: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13438                           
 13439                           
 13440                           ;main.c: 1155:     if(timDemoOff < 200) {
 13441  1CA2  3000               	movlw	0
 13442  1CA3  0020               	movlb	0	; select bank0
 13443  1CA4  022B               	subwf	_timDemoOff+1,w
 13444  1CA5  30C8               	movlw	200
 13445  1CA6  1903               	skipnz
 13446  1CA7  022A               	subwf	_timDemoOff,w
 13447  1CA8  1803               	skipnc
 13448  1CA9  2CAB               	goto	u5231
 13449  1CAA  2CAC               	goto	u5230
 13450  1CAB                     u5231:
 13451  1CAB  2D0F               	goto	l1260
 13452  1CAC                     u5230:
 13453  1CAC                     l6597:
 13454                           
 13455                           ;main.c: 1156:         timDemoOff++;
 13456  1CAC  3001               	movlw	1
 13457  1CAD  07AA               	addwf	_timDemoOff,f
 13458  1CAE  3000               	movlw	0
 13459  1CAF  3DAB               	addwfc	_timDemoOff+1,f
 13460                           
 13461                           ;main.c: 1157:         if(timDemoOff <= 50) {
 13462  1CB0  3000               	movlw	0
 13463  1CB1  022B               	subwf	_timDemoOff+1,w
 13464  1CB2  3033               	movlw	51
 13465  1CB3  1903               	skipnz
 13466  1CB4  022A               	subwf	_timDemoOff,w
 13467  1CB5  1803               	skipnc
 13468  1CB6  2CB8               	goto	u5241
 13469  1CB7  2CB9               	goto	u5240
 13470  1CB8                     u5241:
 13471  1CB8  2CC3               	goto	l6605
 13472  1CB9                     u5240:
 13473  1CB9                     l6599:
 13474                           
 13475                           ;main.c: 1158:             fullBodyVal -= 5;
 13476  1CB9  30FB               	movlw	251
 13477  1CBA  07B0               	addwf	_fullBodyVal,f
 13478  1CBB  30FF               	movlw	255
 13479  1CBC  3DB1               	addwfc	_fullBodyVal+1,f
 13480  1CBD                     l6601:
 13481                           
 13482                           ;main.c: 1159:             if(fullBodyVal < 0)
 13483  1CBD  1FB1               	btfss	_fullBodyVal+1,7
 13484  1CBE  2CC0               	goto	u5251
 13485  1CBF  2CC1               	goto	u5250
 13486  1CC0                     u5251:
 13487  1CC0  2CC3               	goto	l6605
 13488  1CC1                     u5250:
 13489  1CC1                     l6603:
 13490                           
 13491                           ;main.c: 1160:                 fullBodyVal = 0;
 13492  1CC1  01B0               	clrf	_fullBodyVal
 13493  1CC2  01B1               	clrf	_fullBodyVal+1
 13494  1CC3                     l6605:
 13495                           
 13496                           ;main.c: 1162:         if(timDemoOff > 50 && timDemoOff <= 100) {
 13497  1CC3  3000               	movlw	0
 13498  1CC4  022B               	subwf	_timDemoOff+1,w
 13499  1CC5  3033               	movlw	51
 13500  1CC6  1903               	skipnz
 13501  1CC7  022A               	subwf	_timDemoOff,w
 13502  1CC8  1C03               	skipc
 13503  1CC9  2CCB               	goto	u5261
 13504  1CCA  2CCC               	goto	u5260
 13505  1CCB                     u5261:
 13506  1CCB  2CEB               	goto	l1256
 13507  1CCC                     u5260:
 13508  1CCC                     l6607:
 13509  1CCC  3000               	movlw	0
 13510  1CCD  022B               	subwf	_timDemoOff+1,w
 13511  1CCE  3065               	movlw	101
 13512  1CCF  1903               	skipnz
 13513  1CD0  022A               	subwf	_timDemoOff,w
 13514  1CD1  1803               	skipnc
 13515  1CD2  2CD4               	goto	u5271
 13516  1CD3  2CD5               	goto	u5270
 13517  1CD4                     u5271:
 13518  1CD4  2CEB               	goto	l1256
 13519  1CD5                     u5270:
 13520  1CD5                     l6609:
 13521                           
 13522                           ;main.c: 1163:             fullBodyVal += 4;
 13523  1CD5  3004               	movlw	4
 13524  1CD6  07B0               	addwf	_fullBodyVal,f
 13525  1CD7  3000               	movlw	0
 13526  1CD8  3DB1               	addwfc	_fullBodyVal+1,f
 13527                           
 13528                           ;main.c: 1164:             if(fullBodyVal > 100)
 13529  1CD9  0831               	movf	_fullBodyVal+1,w
 13530  1CDA  3A80               	xorlw	128
 13531  1CDB  00E0               	movwf	??_demoEfectOff
 13532  1CDC  3080               	movlw	128
 13533  1CDD  0260               	subwf	??_demoEfectOff,w
 13534  1CDE  1D03               	skipz
 13535  1CDF  2CE2               	goto	u5285
 13536  1CE0  3065               	movlw	101
 13537  1CE1  0230               	subwf	_fullBodyVal,w
 13538  1CE2                     u5285:
 13539  1CE2  1C03               	skipc
 13540  1CE3  2CE5               	goto	u5281
 13541  1CE4  2CE6               	goto	u5280
 13542  1CE5                     u5281:
 13543  1CE5  2CEB               	goto	l1256
 13544  1CE6                     u5280:
 13545  1CE6                     l6611:
 13546                           
 13547                           ;main.c: 1165:                 fullBodyVal = 100;
 13548  1CE6  3064               	movlw	100
 13549  1CE7  0020               	movlb	0	; select bank0
 13550  1CE8  00B0               	movwf	_fullBodyVal
 13551  1CE9  3000               	movlw	0
 13552  1CEA  00B1               	movwf	_fullBodyVal+1
 13553  1CEB                     l1256:	
 13554                           ;main.c: 1166:         }
 13555                           
 13556                           
 13557                           ;main.c: 1167:         if(timDemoOff > 100) {
 13558  1CEB  3000               	movlw	0
 13559  1CEC  0020               	movlb	0	; select bank0
 13560  1CED  022B               	subwf	_timDemoOff+1,w
 13561  1CEE  3065               	movlw	101
 13562  1CEF  1903               	skipnz
 13563  1CF0  022A               	subwf	_timDemoOff,w
 13564  1CF1  1C03               	skipc
 13565  1CF2  2CF4               	goto	u5291
 13566  1CF3  2CF5               	goto	u5290
 13567  1CF4                     u5291:
 13568  1CF4  2D03               	goto	l6621
 13569  1CF5                     u5290:
 13570  1CF5                     l6613:
 13571                           
 13572                           ;main.c: 1168:             fullBodyVal -= 5;
 13573  1CF5  30FB               	movlw	251
 13574  1CF6  07B0               	addwf	_fullBodyVal,f
 13575  1CF7  30FF               	movlw	255
 13576  1CF8  3DB1               	addwfc	_fullBodyVal+1,f
 13577  1CF9                     l6615:
 13578                           
 13579                           ;main.c: 1169:             if(fullBodyVal < 0) {
 13580  1CF9  1FB1               	btfss	_fullBodyVal+1,7
 13581  1CFA  2CFC               	goto	u5301
 13582  1CFB  2CFD               	goto	u5300
 13583  1CFC                     u5301:
 13584  1CFC  2D03               	goto	l6621
 13585  1CFD                     u5300:
 13586  1CFD                     l6617:
 13587                           
 13588                           ;main.c: 1170:                 fullBodyVal = 0;
 13589  1CFD  01B0               	clrf	_fullBodyVal
 13590  1CFE  01B1               	clrf	_fullBodyVal+1
 13591  1CFF                     l6619:
 13592                           
 13593                           ;main.c: 1171:                 resetAndOff(1);
 13594  1CFF  3001               	movlw	1
 13595  1D00  3199  216D  319C   	fcall	_resetAndOff
 13596  1D03                     l6621:
 13597                           
 13598                           ;main.c: 1174:         allBodyVal((char)fullBodyVal, genVal);
 13599  1D03  0020               	movlb	0	; select bank0
 13600  1D04  0835               	movf	_genVal,w
 13601  1D05  00E0               	movwf	??_demoEfectOff
 13602  1D06  0860               	movf	??_demoEfectOff,w
 13603  1D07  00DA               	movwf	allBodyVal@color
 13604  1D08  0830               	movf	_fullBodyVal,w
 13605  1D09  31A4  24A5  319C   	fcall	_allBodyVal
 13606  1D0C                     l6623:
 13607                           
 13608                           ;main.c: 1175:         sendOrderX();
 13609  1D0C  31A0  20E0  319C   	fcall	_sendOrderX
 13610  1D0F                     l1260:
 13611  1D0F  0008               	return
 13612  1D10                     __end_of_demoEfectOff:
 13613                           
 13614                           	psect	text27
 13615  100A                     __ptext27:	
 13616 ;; *************** function _SeqPresOn *****************
 13617 ;; Defined at:
 13618 ;;		line 1200 in file "main.c"
 13619 ;; Parameters:    Size  Location     Type
 13620 ;;		None
 13621 ;; Auto vars:     Size  Location     Type
 13622 ;;		None
 13623 ;; Return value:  Size  Location     Type
 13624 ;;                  1    wreg      void 
 13625 ;; Registers used:
 13626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13627 ;; Tracked objects:
 13628 ;;		On entry : 0/0
 13629 ;;		On exit  : 0/0
 13630 ;;		Unchanged: 0/0
 13631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13636 ;;Total ram usage:        0 bytes
 13637 ;; Hardware stack levels used: 1
 13638 ;; Hardware stack levels required when called: 13
 13639 ;; This function calls:
 13640 ;;		_putch
 13641 ;;		_rstPressOn
 13642 ;;		_sendOrderX
 13643 ;;		_seqApply
 13644 ;;		_seqByZone_On
 13645 ;; This function is called by:
 13646 ;;		_secuences
 13647 ;; This function uses a non-reentrant model
 13648 ;;
 13649                           
 13650                           
 13651                           ;psect for function _SeqPresOn
 13652  100A                     _SeqPresOn:
 13653  100A                     l6625:	
 13654                           ;incstack = 0
 13655                           ; Regs used in _SeqPresOn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13656                           
 13657                           
 13658                           ;main.c: 1201:     if(timPresOn < 250) {
 13659  100A  3000               	movlw	0
 13660  100B  0020               	movlb	0	; select bank0
 13661  100C  022F               	subwf	_timPresOn+1,w
 13662  100D  30FA               	movlw	250
 13663  100E  1903               	skipnz
 13664  100F  022E               	subwf	_timPresOn,w
 13665  1010  1803               	skipnc
 13666  1011  2813               	goto	u5311
 13667  1012  2814               	goto	u5310
 13668  1013                     u5311:
 13669  1013  2883               	goto	l1279
 13670  1014                     u5310:
 13671  1014                     l6627:
 13672                           
 13673                           ;main.c: 1202:         timPresOn++;
 13674  1014  3001               	movlw	1
 13675  1015  07AE               	addwf	_timPresOn,f
 13676  1016  3000               	movlw	0
 13677  1017  3DAF               	addwfc	_timPresOn+1,f
 13678  1018                     l6629:
 13679                           
 13680                           ;main.c: 1203:         if(!soundASOn && timPresOn > 40 ) {
 13681  1018  0021               	movlb	1	; select bank1
 13682  1019  0865               	movf	_soundASOn^(0+128),w
 13683  101A  1D03               	btfss	3,2
 13684  101B  281D               	goto	u5321
 13685  101C  281E               	goto	u5320
 13686  101D                     u5321:
 13687  101D  282F               	goto	l6637
 13688  101E                     u5320:
 13689  101E                     l6631:
 13690  101E  3000               	movlw	0
 13691  101F  0020               	movlb	0	; select bank0
 13692  1020  022F               	subwf	_timPresOn+1,w
 13693  1021  3029               	movlw	41
 13694  1022  1903               	skipnz
 13695  1023  022E               	subwf	_timPresOn,w
 13696  1024  1C03               	skipc
 13697  1025  2827               	goto	u5331
 13698  1026  2828               	goto	u5330
 13699  1027                     u5331:
 13700  1027  282F               	goto	l6637
 13701  1028                     u5330:
 13702  1028                     l6633:
 13703                           
 13704                           ;main.c: 1204:             putch('g');
 13705  1028  3067               	movlw	103
 13706  1029  31A0  20EE  3190   	fcall	_putch
 13707  102C                     l6635:
 13708                           
 13709                           ;main.c: 1205:             soundASOn = 1;
 13710  102C  0021               	movlb	1	; select bank1
 13711  102D  01E5               	clrf	_soundASOn^(0+128)
 13712  102E  0AE5               	incf	_soundASOn^(0+128),f
 13713  102F                     l6637:
 13714                           
 13715                           ;main.c: 1207:         seqByZone_On(0, timPresOn);
 13716  102F  0020               	movlb	0	; select bank0
 13717  1030  082F               	movf	_timPresOn+1,w
 13718  1031  00D2               	movwf	seqByZone_On@time+1
 13719  1032  082E               	movf	_timPresOn,w
 13720  1033  00D1               	movwf	seqByZone_On@time
 13721  1034  3000               	movlw	0
 13722  1035  31A7  276F  3190   	fcall	_seqByZone_On
 13723  1038                     l6639:
 13724                           
 13725                           ;main.c: 1208:         seqByZone_On(1, timPresOn);
 13726  1038  0020               	movlb	0	; select bank0
 13727  1039  082F               	movf	_timPresOn+1,w
 13728  103A  00D2               	movwf	seqByZone_On@time+1
 13729  103B  082E               	movf	_timPresOn,w
 13730  103C  00D1               	movwf	seqByZone_On@time
 13731  103D  3001               	movlw	1
 13732  103E  31A7  276F  3190   	fcall	_seqByZone_On
 13733  1041                     l6641:
 13734                           
 13735                           ;main.c: 1209:         seqByZone_On(2, timPresOn);
 13736  1041  0020               	movlb	0	; select bank0
 13737  1042  082F               	movf	_timPresOn+1,w
 13738  1043  00D2               	movwf	seqByZone_On@time+1
 13739  1044  082E               	movf	_timPresOn,w
 13740  1045  00D1               	movwf	seqByZone_On@time
 13741  1046  3002               	movlw	2
 13742  1047  31A7  276F  3190   	fcall	_seqByZone_On
 13743  104A                     l6643:
 13744                           
 13745                           ;main.c: 1210:         seqByZone_On(3, timPresOn);
 13746  104A  0020               	movlb	0	; select bank0
 13747  104B  082F               	movf	_timPresOn+1,w
 13748  104C  00D2               	movwf	seqByZone_On@time+1
 13749  104D  082E               	movf	_timPresOn,w
 13750  104E  00D1               	movwf	seqByZone_On@time
 13751  104F  3003               	movlw	3
 13752  1050  31A7  276F  3190   	fcall	_seqByZone_On
 13753  1053                     l6645:
 13754                           
 13755                           ;main.c: 1211:         seqByZone_On(4, timPresOn);
 13756  1053  0020               	movlb	0	; select bank0
 13757  1054  082F               	movf	_timPresOn+1,w
 13758  1055  00D2               	movwf	seqByZone_On@time+1
 13759  1056  082E               	movf	_timPresOn,w
 13760  1057  00D1               	movwf	seqByZone_On@time
 13761  1058  3004               	movlw	4
 13762  1059  31A7  276F  3190   	fcall	_seqByZone_On
 13763  105C                     l6647:
 13764                           
 13765                           ;main.c: 1212:         seqByZone_On(5, timPresOn);
 13766  105C  0020               	movlb	0	; select bank0
 13767  105D  082F               	movf	_timPresOn+1,w
 13768  105E  00D2               	movwf	seqByZone_On@time+1
 13769  105F  082E               	movf	_timPresOn,w
 13770  1060  00D1               	movwf	seqByZone_On@time
 13771  1061  3005               	movlw	5
 13772  1062  31A7  276F  3190   	fcall	_seqByZone_On
 13773  1065                     l6649:
 13774                           
 13775                           ;main.c: 1213:         if(timPresOn >= 240) {
 13776  1065  3000               	movlw	0
 13777  1066  0020               	movlb	0	; select bank0
 13778  1067  022F               	subwf	_timPresOn+1,w
 13779  1068  30F0               	movlw	240
 13780  1069  1903               	skipnz
 13781  106A  022E               	subwf	_timPresOn,w
 13782  106B  1C03               	skipc
 13783  106C  286E               	goto	u5341
 13784  106D  286F               	goto	u5340
 13785  106E                     u5341:
 13786  106E  287D               	goto	l6657
 13787  106F                     u5340:
 13788  106F                     l6651:
 13789                           
 13790                           ;main.c: 1214:             maskIsOn = 1;
 13791  106F  0021               	movlb	1	; select bank1
 13792  1070  01E0               	clrf	_maskIsOn^(0+128)
 13793  1071  0AE0               	incf	_maskIsOn^(0+128),f
 13794                           
 13795                           ;main.c: 1215:             lightsOn = 1;
 13796  1072  0020               	movlb	0	; select bank0
 13797  1073  01C4               	clrf	_lightsOn
 13798  1074  0AC4               	incf	_lightsOn,f
 13799  1075                     l6653:
 13800                           
 13801                           ;main.c: 1216:             fullBodyVal = 255;
 13802  1075  30FF               	movlw	255
 13803  1076  00B0               	movwf	_fullBodyVal
 13804  1077  3000               	movlw	0
 13805  1078  00B1               	movwf	_fullBodyVal+1
 13806  1079                     l6655:
 13807                           
 13808                           ;main.c: 1217:             rstPressOn(0);
 13809  1079  3000               	movlw	0
 13810  107A  3190  2000  3190   	fcall	_rstPressOn
 13811  107D                     l6657:
 13812                           
 13813                           ;main.c: 1219:         seqApply();
 13814  107D  3191  216D  3190   	fcall	_seqApply
 13815  1080                     l6659:
 13816                           
 13817                           ;main.c: 1220:         sendOrderX();
 13818  1080  31A0  20E0  3190   	fcall	_sendOrderX
 13819  1083                     l1279:
 13820  1083  0008               	return
 13821  1084                     __end_of_SeqPresOn:
 13822                           
 13823                           	psect	text28
 13824  276F                     __ptext28:	
 13825 ;; *************** function _seqByZone_On *****************
 13826 ;; Defined at:
 13827 ;;		line 1179 in file "main.c"
 13828 ;; Parameters:    Size  Location     Type
 13829 ;;  num             1    wreg     unsigned char 
 13830 ;;  time            2    4[BANK0 ] short 
 13831 ;; Auto vars:     Size  Location     Type
 13832 ;;  num             1   10[BANK0 ] unsigned char 
 13833 ;; Return value:  Size  Location     Type
 13834 ;;                  1    wreg      void 
 13835 ;; Registers used:
 13836 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 13837 ;; Tracked objects:
 13838 ;;		On entry : 0/0
 13839 ;;		On exit  : 0/0
 13840 ;;		Unchanged: 0/0
 13841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13842 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13843 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13844 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13845 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13846 ;;Total ram usage:        7 bytes
 13847 ;; Hardware stack levels used: 1
 13848 ;; Hardware stack levels required when called: 11
 13849 ;; This function calls:
 13850 ;;		Nothing
 13851 ;; This function is called by:
 13852 ;;		_SeqPresOn
 13853 ;; This function uses a non-reentrant model
 13854 ;;
 13855                           
 13856                           
 13857                           ;psect for function _seqByZone_On
 13858  276F                     _seqByZone_On:
 13859                           
 13860                           ;incstack = 0
 13861                           ; Regs used in _seqByZone_On: [wreg-fsr1h+status,2+status,0]
 13862                           ;seqByZone_On@num stored from wreg
 13863  276F  0020               	movlb	0	; select bank0
 13864  2770  00D7               	movwf	seqByZone_On@num
 13865  2771                     l5831:
 13866                           
 13867                           ;main.c: 1180:     if(time >= (firstDelay + delaysOn[num])) {
 13868  2771  3557               	lslf	seqByZone_On@num,w
 13869  2772  3E49               	addlw	(low (_delaysOn| (0+768)))& (0+255)
 13870  2773  0086               	movwf	6
 13871  2774  3003               	movlw	3	; select bank6/7
 13872  2775  0087               	movwf	7
 13873  2776  3F40               	moviw [0]fsr1
 13874  2777  00D3               	movwf	??_seqByZone_On
 13875  2778  3F41               	moviw [1]fsr1
 13876  2779  00D4               	movwf	??_seqByZone_On+1
 13877  277A  0853               	movf	??_seqByZone_On,w
 13878  277B  3E98               	addlw	152
 13879  277C  00D5               	movwf	??_seqByZone_On+2
 13880  277D  3000               	movlw	0
 13881  277E  3D54               	addwfc	??_seqByZone_On+1,w
 13882  277F  00D6               	movwf	??_seqByZone_On+3
 13883  2780  0856               	movf	??_seqByZone_On+3,w
 13884  2781  0252               	subwf	seqByZone_On@time+1,w
 13885  2782  1D03               	skipz
 13886  2783  2F86               	goto	u3915
 13887  2784  0855               	movf	??_seqByZone_On+2,w
 13888  2785  0251               	subwf	seqByZone_On@time,w
 13889  2786                     u3915:
 13890  2786  1C03               	skipc
 13891  2787  2F89               	goto	u3911
 13892  2788  2F8A               	goto	u3910
 13893  2789                     u3911:
 13894  2789  2FB6               	goto	l1265
 13895  278A                     u3910:
 13896  278A                     l5833:
 13897                           
 13898                           ;main.c: 1181:         SeqVals[num] += seqDeltasOn[num];
 13899  278A  3557               	lslf	seqByZone_On@num,w
 13900  278B  3EA0               	addlw	(low (_SeqVals| 0))& (0+255)
 13901  278C  0086               	movwf	6
 13902  278D  0187               	clrf	7
 13903  278E  0857               	movf	seqByZone_On@num,w
 13904  278F  3EE5               	addlw	(low (_seqDeltasOn| (0+512)))& (0+255)
 13905  2790  0084               	movwf	4
 13906  2791  3002               	movlw	2	; select bank5/6
 13907  2792  0085               	movwf	5
 13908  2793  0800               	movf	0,w
 13909  2794  0781               	addwf	1,f
 13910  2795  3141               	addfsr 1,1
 13911  2796  1803               	skipnc
 13912  2797  0A81               	incf	1,f
 13913  2798                     l5835:
 13914                           
 13915                           ;main.c: 1182:         if(SeqVals[num] >= 255)
 13916  2798  3557               	lslf	seqByZone_On@num,w
 13917  2799  3EA0               	addlw	(low (_SeqVals| 0))& (0+255)
 13918  279A  0086               	movwf	6
 13919  279B  0187               	clrf	7
 13920  279C  3F40               	moviw [0]fsr1
 13921  279D  00D3               	movwf	??_seqByZone_On
 13922  279E  3F41               	moviw [1]fsr1
 13923  279F  00D4               	movwf	??_seqByZone_On+1
 13924  27A0  0854               	movf	??_seqByZone_On+1,w
 13925  27A1  3A80               	xorlw	128
 13926  27A2  00D5               	movwf	??_seqByZone_On+2
 13927  27A3  3080               	movlw	128
 13928  27A4  0255               	subwf	??_seqByZone_On+2,w
 13929  27A5  1D03               	skipz
 13930  27A6  2FA9               	goto	u3925
 13931  27A7  30FF               	movlw	255
 13932  27A8  0253               	subwf	??_seqByZone_On,w
 13933  27A9                     u3925:
 13934  27A9  1C03               	skipc
 13935  27AA  2FAC               	goto	u3921
 13936  27AB  2FAD               	goto	u3920
 13937  27AC                     u3921:
 13938  27AC  2FB6               	goto	l1265
 13939  27AD                     u3920:
 13940  27AD                     l5837:
 13941                           
 13942                           ;main.c: 1183:             SeqVals[num] = 255;
 13943  27AD  0020               	movlb	0	; select bank0
 13944  27AE  3557               	lslf	seqByZone_On@num,w
 13945  27AF  3EA0               	addlw	(low (_SeqVals| 0))& (0+255)
 13946  27B0  0086               	movwf	6
 13947  27B1  0187               	clrf	7
 13948  27B2  30FF               	movlw	255
 13949  27B3  3FC0               	movwi [0]fsr1
 13950  27B4  3000               	movlw	0
 13951  27B5  3FC1               	movwi [1]fsr1
 13952  27B6                     l1265:
 13953  27B6  0008               	return
 13954  27B7                     __end_of_seqByZone_On:
 13955                           
 13956                           	psect	text29
 13957  1D7F                     __ptext29:	
 13958 ;; *************** function _SeqPresOff *****************
 13959 ;; Defined at:
 13960 ;;		line 1229 in file "main.c"
 13961 ;; Parameters:    Size  Location     Type
 13962 ;;		None
 13963 ;; Auto vars:     Size  Location     Type
 13964 ;;		None
 13965 ;; Return value:  Size  Location     Type
 13966 ;;                  1    wreg      void 
 13967 ;; Registers used:
 13968 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13969 ;; Tracked objects:
 13970 ;;		On entry : 0/0
 13971 ;;		On exit  : 0/0
 13972 ;;		Unchanged: 0/0
 13973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13978 ;;Total ram usage:        0 bytes
 13979 ;; Hardware stack levels used: 1
 13980 ;; Hardware stack levels required when called: 16
 13981 ;; This function calls:
 13982 ;;		_putch
 13983 ;;		_resetAndOff
 13984 ;;		_sendOrderX
 13985 ;;		_seqApply
 13986 ;;		_seqByZone_Off
 13987 ;; This function is called by:
 13988 ;;		_secuences
 13989 ;; This function uses a non-reentrant model
 13990 ;;
 13991                           
 13992                           
 13993                           ;psect for function _SeqPresOff
 13994  1D7F                     _SeqPresOff:
 13995  1D7F                     l6661:	
 13996                           ;incstack = 0
 13997 ;; hardware stack exceeded
 13998                           ; Regs used in _SeqPresOff: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13999                           
 14000                           
 14001                           ;main.c: 1230:     if(timPresOff < 320) {
 14002  1D7F  3001               	movlw	1
 14003  1D80  0020               	movlb	0	; select bank0
 14004  1D81  022D               	subwf	_timPresOff+1,w
 14005  1D82  3040               	movlw	64
 14006  1D83  1903               	skipnz
 14007  1D84  022C               	subwf	_timPresOff,w
 14008  1D85  1803               	skipnc
 14009  1D86  2D88               	goto	u5351
 14010  1D87  2D89               	goto	u5350
 14011  1D88                     u5351:
 14012  1D88  2DF2               	goto	l1288
 14013  1D89                     u5350:
 14014  1D89                     l6663:
 14015                           
 14016                           ;main.c: 1231:         timPresOff++;
 14017  1D89  3001               	movlw	1
 14018  1D8A  07AC               	addwf	_timPresOff,f
 14019  1D8B  3000               	movlw	0
 14020  1D8C  3DAD               	addwfc	_timPresOff+1,f
 14021  1D8D                     l6665:
 14022                           
 14023                           ;main.c: 1232:         if(!soundASOff && timPresOff > delaysOff[5]) {
 14024  1D8D  0021               	movlb	1	; select bank1
 14025  1D8E  0864               	movf	_soundASOff^(0+128),w
 14026  1D8F  1D03               	btfss	3,2
 14027  1D90  2D92               	goto	u5361
 14028  1D91  2D93               	goto	u5360
 14029  1D92                     u5361:
 14030  1D92  2DA8               	goto	l6673
 14031  1D93                     u5360:
 14032  1D93                     l6667:
 14033  1D93  0020               	movlb	0	; select bank0
 14034  1D94  082D               	movf	_timPresOff+1,w
 14035  1D95  0025               	movlb	5	; select bank5
 14036  1D96  025E               	subwf	((_delaysOff+1)^(0+640)+10),w
 14037  1D97  1D03               	skipz
 14038  1D98  2D9D               	goto	u5375
 14039  1D99  0020               	movlb	0	; select bank0
 14040  1D9A  082C               	movf	_timPresOff,w
 14041  1D9B  0025               	movlb	5	; select bank5
 14042  1D9C  025D               	subwf	(_delaysOff^(0+640)+10),w
 14043  1D9D                     u5375:
 14044  1D9D  1803               	skipnc
 14045  1D9E  2DA0               	goto	u5371
 14046  1D9F  2DA1               	goto	u5370
 14047  1DA0                     u5371:
 14048  1DA0  2DA8               	goto	l6673
 14049  1DA1                     u5370:
 14050  1DA1                     l6669:
 14051                           
 14052                           ;main.c: 1233:             putch('f');
 14053  1DA1  3066               	movlw	102
 14054  1DA2  31A0  20EE  319D   	fcall	_putch
 14055  1DA5                     l6671:
 14056                           
 14057                           ;main.c: 1234:             soundASOff = 1;
 14058  1DA5  0021               	movlb	1	; select bank1
 14059  1DA6  01E4               	clrf	_soundASOff^(0+128)
 14060  1DA7  0AE4               	incf	_soundASOff^(0+128),f
 14061  1DA8                     l6673:
 14062                           
 14063                           ;main.c: 1236:         seqByZone_Off(0, timPresOff);
 14064  1DA8  0020               	movlb	0	; select bank0
 14065  1DA9  082D               	movf	_timPresOff+1,w
 14066  1DAA  00D2               	movwf	seqByZone_Off@time+1
 14067  1DAB  082C               	movf	_timPresOff,w
 14068  1DAC  00D1               	movwf	seqByZone_Off@time
 14069  1DAD  3000               	movlw	0
 14070  1DAE  31A6  2672  319D   	fcall	_seqByZone_Off
 14071  1DB1                     l6675:
 14072                           
 14073                           ;main.c: 1237:         seqByZone_Off(1, timPresOff);
 14074  1DB1  0020               	movlb	0	; select bank0
 14075  1DB2  082D               	movf	_timPresOff+1,w
 14076  1DB3  00D2               	movwf	seqByZone_Off@time+1
 14077  1DB4  082C               	movf	_timPresOff,w
 14078  1DB5  00D1               	movwf	seqByZone_Off@time
 14079  1DB6  3001               	movlw	1
 14080  1DB7  31A6  2672  319D   	fcall	_seqByZone_Off
 14081  1DBA                     l6677:
 14082                           
 14083                           ;main.c: 1238:         seqByZone_Off(2, timPresOff);
 14084  1DBA  0020               	movlb	0	; select bank0
 14085  1DBB  082D               	movf	_timPresOff+1,w
 14086  1DBC  00D2               	movwf	seqByZone_Off@time+1
 14087  1DBD  082C               	movf	_timPresOff,w
 14088  1DBE  00D1               	movwf	seqByZone_Off@time
 14089  1DBF  3002               	movlw	2
 14090  1DC0  31A6  2672  319D   	fcall	_seqByZone_Off
 14091  1DC3                     l6679:
 14092                           
 14093                           ;main.c: 1239:         seqByZone_Off(3, timPresOff);
 14094  1DC3  0020               	movlb	0	; select bank0
 14095  1DC4  082D               	movf	_timPresOff+1,w
 14096  1DC5  00D2               	movwf	seqByZone_Off@time+1
 14097  1DC6  082C               	movf	_timPresOff,w
 14098  1DC7  00D1               	movwf	seqByZone_Off@time
 14099  1DC8  3003               	movlw	3
 14100  1DC9  31A6  2672  319D   	fcall	_seqByZone_Off
 14101  1DCC                     l6681:
 14102                           
 14103                           ;main.c: 1240:         seqByZone_Off(4, timPresOff);
 14104  1DCC  0020               	movlb	0	; select bank0
 14105  1DCD  082D               	movf	_timPresOff+1,w
 14106  1DCE  00D2               	movwf	seqByZone_Off@time+1
 14107  1DCF  082C               	movf	_timPresOff,w
 14108  1DD0  00D1               	movwf	seqByZone_Off@time
 14109  1DD1  3004               	movlw	4
 14110  1DD2  31A6  2672  319D   	fcall	_seqByZone_Off
 14111  1DD5                     l6683:
 14112                           
 14113                           ;main.c: 1241:         seqByZone_Off(5, timPresOff);
 14114  1DD5  0020               	movlb	0	; select bank0
 14115  1DD6  082D               	movf	_timPresOff+1,w
 14116  1DD7  00D2               	movwf	seqByZone_Off@time+1
 14117  1DD8  082C               	movf	_timPresOff,w
 14118  1DD9  00D1               	movwf	seqByZone_Off@time
 14119  1DDA  3005               	movlw	5
 14120  1DDB  31A6  2672  319D   	fcall	_seqByZone_Off
 14121  1DDE                     l6685:
 14122                           
 14123                           ;main.c: 1242:         if(timPresOff >= 305) {
 14124  1DDE  3001               	movlw	1
 14125  1DDF  0020               	movlb	0	; select bank0
 14126  1DE0  022D               	subwf	_timPresOff+1,w
 14127  1DE1  3031               	movlw	49
 14128  1DE2  1903               	skipnz
 14129  1DE3  022C               	subwf	_timPresOff,w
 14130  1DE4  1C03               	skipc
 14131  1DE5  2DE7               	goto	u5381
 14132  1DE6  2DE8               	goto	u5380
 14133  1DE7                     u5381:
 14134  1DE7  2DEC               	goto	l1287
 14135  1DE8                     u5380:
 14136  1DE8                     l6687:
 14137                           
 14138                           ;main.c: 1243:             resetAndOff(1);
 14139  1DE8  3001               	movlw	1
 14140  1DE9  3199  216D  319D   	fcall	_resetAndOff
 14141  1DEC                     l1287:	
 14142                           ;main.c: 1244:         }
 14143                           
 14144                           
 14145                           ;main.c: 1245:         seqApply();
 14146  1DEC  3191  216D  319D   	fcall	_seqApply
 14147  1DEF                     l6689:
 14148                           
 14149                           ;main.c: 1246:         sendOrderX();
 14150  1DEF  31A0  20E0  319D   	fcall	_sendOrderX
 14151  1DF2                     l1288:
 14152  1DF2  0008               	return
 14153  1DF3                     __end_of_SeqPresOff:
 14154                           
 14155                           	psect	text30
 14156  2672                     __ptext30:	
 14157 ;; *************** function _seqByZone_Off *****************
 14158 ;; Defined at:
 14159 ;;		line 1187 in file "main.c"
 14160 ;; Parameters:    Size  Location     Type
 14161 ;;  num             1    wreg     unsigned char 
 14162 ;;  time            2    4[BANK0 ] short 
 14163 ;; Auto vars:     Size  Location     Type
 14164 ;;  num             1   10[BANK0 ] unsigned char 
 14165 ;; Return value:  Size  Location     Type
 14166 ;;                  1    wreg      void 
 14167 ;; Registers used:
 14168 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 14169 ;; Tracked objects:
 14170 ;;		On entry : 0/0
 14171 ;;		On exit  : 0/0
 14172 ;;		Unchanged: 0/0
 14173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14174 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14175 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14176 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14177 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14178 ;;Total ram usage:        7 bytes
 14179 ;; Hardware stack levels used: 1
 14180 ;; Hardware stack levels required when called: 11
 14181 ;; This function calls:
 14182 ;;		Nothing
 14183 ;; This function is called by:
 14184 ;;		_SeqPresOff
 14185 ;; This function uses a non-reentrant model
 14186 ;;
 14187                           
 14188                           
 14189                           ;psect for function _seqByZone_Off
 14190  2672                     _seqByZone_Off:
 14191                           
 14192                           ;incstack = 0
 14193                           ; Regs used in _seqByZone_Off: [wreg-fsr1h+status,2+status,0]
 14194                           ;seqByZone_Off@num stored from wreg
 14195  2672  0020               	movlb	0	; select bank0
 14196  2673  00D7               	movwf	seqByZone_Off@num
 14197  2674                     l5839:
 14198                           
 14199                           ;main.c: 1188:     if(time >= (130 + delaysOff[num])) {
 14200  2674  3557               	lslf	seqByZone_Off@num,w
 14201  2675  3ED3               	addlw	(low (_delaysOff| (0+512)))& (0+255)
 14202  2676  0086               	movwf	6
 14203  2677  3002               	movlw	2	; select bank5/6
 14204  2678  0087               	movwf	7
 14205  2679  3F40               	moviw [0]fsr1
 14206  267A  00D3               	movwf	??_seqByZone_Off
 14207  267B  3F41               	moviw [1]fsr1
 14208  267C  00D4               	movwf	??_seqByZone_Off+1
 14209  267D  0853               	movf	??_seqByZone_Off,w
 14210  267E  3E82               	addlw	130
 14211  267F  00D5               	movwf	??_seqByZone_Off+2
 14212  2680  3000               	movlw	0
 14213  2681  3D54               	addwfc	??_seqByZone_Off+1,w
 14214  2682  00D6               	movwf	??_seqByZone_Off+3
 14215  2683  0856               	movf	??_seqByZone_Off+3,w
 14216  2684  0252               	subwf	seqByZone_Off@time+1,w
 14217  2685  1D03               	skipz
 14218  2686  2E89               	goto	u3935
 14219  2687  0855               	movf	??_seqByZone_Off+2,w
 14220  2688  0251               	subwf	seqByZone_Off@time,w
 14221  2689                     u3935:
 14222  2689  1C03               	skipc
 14223  268A  2E8C               	goto	u3931
 14224  268B  2E8D               	goto	u3930
 14225  268C                     u3931:
 14226  268C  2EAC               	goto	l1270
 14227  268D                     u3930:
 14228  268D                     l5841:
 14229                           
 14230                           ;main.c: 1189:         SeqVals[num] -= seqDeltasOff[num];
 14231  268D  0857               	movf	seqByZone_Off@num,w
 14232  268E  3EDF               	addlw	(low (_seqDeltasOff| (0+512)))& (0+255)
 14233  268F  0086               	movwf	6
 14234  2690  3002               	movlw	2	; select bank5/6
 14235  2691  0087               	movwf	7
 14236  2692  3557               	lslf	seqByZone_Off@num,w
 14237  2693  3EA0               	addlw	(low (_SeqVals| 0))& (0+255)
 14238  2694  0084               	movwf	4
 14239  2695  0185               	clrf	5
 14240  2696  0801               	movf	1,w
 14241  2697  0280               	subwf	0,f
 14242  2698  3101               	addfsr 0,1
 14243  2699  1C03               	skipc
 14244  269A  0380               	decf	0,f
 14245  269B  313F               	addfsr 0,-1
 14246  269C                     l5843:
 14247                           
 14248                           ;main.c: 1190:         if(SeqVals[num] < 0)
 14249  269C  3557               	lslf	seqByZone_Off@num,w
 14250  269D  3EA0               	addlw	(low (_SeqVals| 0))& (0+255)
 14251  269E  0086               	movwf	6
 14252  269F  0187               	clrf	7
 14253  26A0  3141               	addfsr 1,1
 14254  26A1  1F81               	btfss	1,7
 14255  26A2  2EA4               	goto	u3941
 14256  26A3  2EA5               	goto	u3940
 14257  26A4                     u3941:
 14258  26A4  2EAC               	goto	l1270
 14259  26A5                     u3940:
 14260  26A5                     l5845:
 14261                           
 14262                           ;main.c: 1191:             SeqVals[num] = 0;
 14263  26A5  3557               	lslf	seqByZone_Off@num,w
 14264  26A6  3EA0               	addlw	(low (_SeqVals| 0))& (0+255)
 14265  26A7  0086               	movwf	6
 14266  26A8  0187               	clrf	7
 14267  26A9  3000               	movlw	0
 14268  26AA  3FC0               	movwi [0]fsr1
 14269  26AB  3FC1               	movwi [1]fsr1
 14270  26AC                     l1270:
 14271  26AC  0008               	return
 14272  26AD                     __end_of_seqByZone_Off:
 14273                           
 14274                           	psect	text31
 14275  116D                     __ptext31:	
 14276 ;; *************** function _seqApply *****************
 14277 ;; Defined at:
 14278 ;;		line 1250 in file "main.c"
 14279 ;; Parameters:    Size  Location     Type
 14280 ;;		None
 14281 ;; Auto vars:     Size  Location     Type
 14282 ;;		None
 14283 ;; Return value:  Size  Location     Type
 14284 ;;                  1    wreg      void 
 14285 ;; Registers used:
 14286 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14287 ;; Tracked objects:
 14288 ;;		On entry : 0/0
 14289 ;;		On exit  : 0/0
 14290 ;;		Unchanged: 0/0
 14291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14294 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14295 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14296 ;;Total ram usage:        1 bytes
 14297 ;; Hardware stack levels used: 1
 14298 ;; Hardware stack levels required when called: 12
 14299 ;; This function calls:
 14300 ;;		_val2group
 14301 ;; This function is called by:
 14302 ;;		_SeqPresOn
 14303 ;;		_SeqPresOff
 14304 ;; This function uses a non-reentrant model
 14305 ;;
 14306                           
 14307                           
 14308                           ;psect for function _seqApply
 14309  116D                     _seqApply:
 14310  116D                     l5847:	
 14311                           ;incstack = 0
 14312                           ; Regs used in _seqApply: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14313                           
 14314                           
 14315                           ;main.c: 1253:     val2group(2, (unsigned char)SeqVals[0]);
 14316  116D  0021               	movlb	1	; select bank1
 14317  116E  0820               	movf	_SeqVals^(0+128),w
 14318  116F  0020               	movlb	0	; select bank0
 14319  1170  00D6               	movwf	??_seqApply
 14320  1171  0856               	movf	??_seqApply,w
 14321  1172  00D1               	movwf	val2group@val
 14322  1173  3002               	movlw	2
 14323  1174  3196  2662  3191   	fcall	_val2group
 14324                           
 14325                           ;main.c: 1254:     val2group(1, (unsigned char)SeqVals[1]);
 14326  1177  0021               	movlb	1	; select bank1
 14327  1178  0822               	movf	(_SeqVals^(0+128)+2),w
 14328  1179  0020               	movlb	0	; select bank0
 14329  117A  00D6               	movwf	??_seqApply
 14330  117B  0856               	movf	??_seqApply,w
 14331  117C  00D1               	movwf	val2group@val
 14332  117D  3001               	movlw	1
 14333  117E  3196  2662  3191   	fcall	_val2group
 14334                           
 14335                           ;main.c: 1255:     val2group(3, (unsigned char)SeqVals[2]);
 14336  1181  0021               	movlb	1	; select bank1
 14337  1182  0824               	movf	(_SeqVals^(0+128)+4),w
 14338  1183  0020               	movlb	0	; select bank0
 14339  1184  00D6               	movwf	??_seqApply
 14340  1185  0856               	movf	??_seqApply,w
 14341  1186  00D1               	movwf	val2group@val
 14342  1187  3003               	movlw	3
 14343  1188  3196  2662  3191   	fcall	_val2group
 14344                           
 14345                           ;main.c: 1256:     val2group(4, (unsigned char)SeqVals[2]);
 14346  118B  0021               	movlb	1	; select bank1
 14347  118C  0824               	movf	(_SeqVals^(0+128)+4),w
 14348  118D  0020               	movlb	0	; select bank0
 14349  118E  00D6               	movwf	??_seqApply
 14350  118F  0856               	movf	??_seqApply,w
 14351  1190  00D1               	movwf	val2group@val
 14352  1191  3004               	movlw	4
 14353  1192  3196  2662  3191   	fcall	_val2group
 14354                           
 14355                           ;main.c: 1258:     val2group(14, (unsigned char)SeqVals[3]);
 14356  1195  0021               	movlb	1	; select bank1
 14357  1196  0826               	movf	(_SeqVals^(0+128)+6),w
 14358  1197  0020               	movlb	0	; select bank0
 14359  1198  00D6               	movwf	??_seqApply
 14360  1199  0856               	movf	??_seqApply,w
 14361  119A  00D1               	movwf	val2group@val
 14362  119B  300E               	movlw	14
 14363  119C  3196  2662  3191   	fcall	_val2group
 14364                           
 14365                           ;main.c: 1259:     val2group(16, (unsigned char)SeqVals[3]);
 14366  119F  0021               	movlb	1	; select bank1
 14367  11A0  0826               	movf	(_SeqVals^(0+128)+6),w
 14368  11A1  0020               	movlb	0	; select bank0
 14369  11A2  00D6               	movwf	??_seqApply
 14370  11A3  0856               	movf	??_seqApply,w
 14371  11A4  00D1               	movwf	val2group@val
 14372  11A5  3010               	movlw	16
 14373  11A6  3196  2662  3191   	fcall	_val2group
 14374                           
 14375                           ;main.c: 1260:     val2group(18, (unsigned char)SeqVals[3]);
 14376  11A9  0021               	movlb	1	; select bank1
 14377  11AA  0826               	movf	(_SeqVals^(0+128)+6),w
 14378  11AB  0020               	movlb	0	; select bank0
 14379  11AC  00D6               	movwf	??_seqApply
 14380  11AD  0856               	movf	??_seqApply,w
 14381  11AE  00D1               	movwf	val2group@val
 14382  11AF  3012               	movlw	18
 14383  11B0  3196  2662  3191   	fcall	_val2group
 14384                           
 14385                           ;main.c: 1261:     val2group(6, (unsigned char)SeqVals[3]);
 14386  11B3  0021               	movlb	1	; select bank1
 14387  11B4  0826               	movf	(_SeqVals^(0+128)+6),w
 14388  11B5  0020               	movlb	0	; select bank0
 14389  11B6  00D6               	movwf	??_seqApply
 14390  11B7  0856               	movf	??_seqApply,w
 14391  11B8  00D1               	movwf	val2group@val
 14392  11B9  3006               	movlw	6
 14393  11BA  3196  2662  3191   	fcall	_val2group
 14394                           
 14395                           ;main.c: 1262:     val2group(9, (unsigned char)SeqVals[3]);
 14396  11BD  0021               	movlb	1	; select bank1
 14397  11BE  0826               	movf	(_SeqVals^(0+128)+6),w
 14398  11BF  0020               	movlb	0	; select bank0
 14399  11C0  00D6               	movwf	??_seqApply
 14400  11C1  0856               	movf	??_seqApply,w
 14401  11C2  00D1               	movwf	val2group@val
 14402  11C3  3009               	movlw	9
 14403  11C4  3196  2662  3191   	fcall	_val2group
 14404                           
 14405                           ;main.c: 1263:     val2group(7, (unsigned char)SeqVals[3]);
 14406  11C7  0021               	movlb	1	; select bank1
 14407  11C8  0826               	movf	(_SeqVals^(0+128)+6),w
 14408  11C9  0020               	movlb	0	; select bank0
 14409  11CA  00D6               	movwf	??_seqApply
 14410  11CB  0856               	movf	??_seqApply,w
 14411  11CC  00D1               	movwf	val2group@val
 14412  11CD  3007               	movlw	7
 14413  11CE  3196  2662  3191   	fcall	_val2group
 14414                           
 14415                           ;main.c: 1264:     val2group(12, (unsigned char)SeqVals[3]);
 14416  11D1  0021               	movlb	1	; select bank1
 14417  11D2  0826               	movf	(_SeqVals^(0+128)+6),w
 14418  11D3  0020               	movlb	0	; select bank0
 14419  11D4  00D6               	movwf	??_seqApply
 14420  11D5  0856               	movf	??_seqApply,w
 14421  11D6  00D1               	movwf	val2group@val
 14422  11D7  300C               	movlw	12
 14423  11D8  3196  2662  3191   	fcall	_val2group
 14424                           
 14425                           ;main.c: 1265:     val2group(19, (unsigned char)SeqVals[3]);
 14426  11DB  0021               	movlb	1	; select bank1
 14427  11DC  0826               	movf	(_SeqVals^(0+128)+6),w
 14428  11DD  0020               	movlb	0	; select bank0
 14429  11DE  00D6               	movwf	??_seqApply
 14430  11DF  0856               	movf	??_seqApply,w
 14431  11E0  00D1               	movwf	val2group@val
 14432  11E1  3013               	movlw	19
 14433  11E2  3196  2662  3191   	fcall	_val2group
 14434                           
 14435                           ;main.c: 1267:     val2group(13, (unsigned char)SeqVals[4]);
 14436  11E5  0021               	movlb	1	; select bank1
 14437  11E6  0828               	movf	(_SeqVals^(0+128)+8),w
 14438  11E7  0020               	movlb	0	; select bank0
 14439  11E8  00D6               	movwf	??_seqApply
 14440  11E9  0856               	movf	??_seqApply,w
 14441  11EA  00D1               	movwf	val2group@val
 14442  11EB  300D               	movlw	13
 14443  11EC  3196  2662  3191   	fcall	_val2group
 14444                           
 14445                           ;main.c: 1268:     val2group(15, (unsigned char)SeqVals[4]);
 14446  11EF  0021               	movlb	1	; select bank1
 14447  11F0  0828               	movf	(_SeqVals^(0+128)+8),w
 14448  11F1  0020               	movlb	0	; select bank0
 14449  11F2  00D6               	movwf	??_seqApply
 14450  11F3  0856               	movf	??_seqApply,w
 14451  11F4  00D1               	movwf	val2group@val
 14452  11F5  300F               	movlw	15
 14453  11F6  3196  2662  3191   	fcall	_val2group
 14454                           
 14455                           ;main.c: 1269:     val2group(17, (unsigned char)SeqVals[4]);
 14456  11F9  0021               	movlb	1	; select bank1
 14457  11FA  0828               	movf	(_SeqVals^(0+128)+8),w
 14458  11FB  0020               	movlb	0	; select bank0
 14459  11FC  00D6               	movwf	??_seqApply
 14460  11FD  0856               	movf	??_seqApply,w
 14461  11FE  00D1               	movwf	val2group@val
 14462  11FF  3011               	movlw	17
 14463  1200  3196  2662  3191   	fcall	_val2group
 14464                           
 14465                           ;main.c: 1270:     val2group(5, (unsigned char)SeqVals[4]);
 14466  1203  0021               	movlb	1	; select bank1
 14467  1204  0828               	movf	(_SeqVals^(0+128)+8),w
 14468  1205  0020               	movlb	0	; select bank0
 14469  1206  00D6               	movwf	??_seqApply
 14470  1207  0856               	movf	??_seqApply,w
 14471  1208  00D1               	movwf	val2group@val
 14472  1209  3005               	movlw	5
 14473  120A  3196  2662  3191   	fcall	_val2group
 14474                           
 14475                           ;main.c: 1271:     val2group(10, (unsigned char)SeqVals[4]);
 14476  120D  0021               	movlb	1	; select bank1
 14477  120E  0828               	movf	(_SeqVals^(0+128)+8),w
 14478  120F  0020               	movlb	0	; select bank0
 14479  1210  00D6               	movwf	??_seqApply
 14480  1211  0856               	movf	??_seqApply,w
 14481  1212  00D1               	movwf	val2group@val
 14482  1213  300A               	movlw	10
 14483  1214  3196  2662  3191   	fcall	_val2group
 14484                           
 14485                           ;main.c: 1272:     val2group(8, (unsigned char)SeqVals[4]);
 14486  1217  0021               	movlb	1	; select bank1
 14487  1218  0828               	movf	(_SeqVals^(0+128)+8),w
 14488  1219  0020               	movlb	0	; select bank0
 14489  121A  00D6               	movwf	??_seqApply
 14490  121B  0856               	movf	??_seqApply,w
 14491  121C  00D1               	movwf	val2group@val
 14492  121D  3008               	movlw	8
 14493  121E  3196  2662  3191   	fcall	_val2group
 14494                           
 14495                           ;main.c: 1273:     val2group(11, (unsigned char)SeqVals[4]);
 14496  1221  0021               	movlb	1	; select bank1
 14497  1222  0828               	movf	(_SeqVals^(0+128)+8),w
 14498  1223  0020               	movlb	0	; select bank0
 14499  1224  00D6               	movwf	??_seqApply
 14500  1225  0856               	movf	??_seqApply,w
 14501  1226  00D1               	movwf	val2group@val
 14502  1227  300B               	movlw	11
 14503  1228  3196  2662  3191   	fcall	_val2group
 14504                           
 14505                           ;main.c: 1274:     val2group(20, (unsigned char)SeqVals[4]);
 14506  122B  0021               	movlb	1	; select bank1
 14507  122C  0828               	movf	(_SeqVals^(0+128)+8),w
 14508  122D  0020               	movlb	0	; select bank0
 14509  122E  00D6               	movwf	??_seqApply
 14510  122F  0856               	movf	??_seqApply,w
 14511  1230  00D1               	movwf	val2group@val
 14512  1231  3014               	movlw	20
 14513  1232  3196  2662  3191   	fcall	_val2group
 14514                           
 14515                           ;main.c: 1275:     val2group(21, (unsigned char)SeqVals[4]);
 14516  1235  0021               	movlb	1	; select bank1
 14517  1236  0828               	movf	(_SeqVals^(0+128)+8),w
 14518  1237  0020               	movlb	0	; select bank0
 14519  1238  00D6               	movwf	??_seqApply
 14520  1239  0856               	movf	??_seqApply,w
 14521  123A  00D1               	movwf	val2group@val
 14522  123B  3015               	movlw	21
 14523  123C  3196  2662  3191   	fcall	_val2group
 14524                           
 14525                           ;main.c: 1278:     val2group(23, (unsigned char)SeqVals[5]);
 14526  123F  0021               	movlb	1	; select bank1
 14527  1240  082A               	movf	(_SeqVals^(0+128)+10),w
 14528  1241  0020               	movlb	0	; select bank0
 14529  1242  00D6               	movwf	??_seqApply
 14530  1243  0856               	movf	??_seqApply,w
 14531  1244  00D1               	movwf	val2group@val
 14532  1245  3017               	movlw	23
 14533  1246  3196  2662  3191   	fcall	_val2group
 14534                           
 14535                           ;main.c: 1279:     val2group(24, (unsigned char)SeqVals[5]);
 14536  1249  0021               	movlb	1	; select bank1
 14537  124A  082A               	movf	(_SeqVals^(0+128)+10),w
 14538  124B  0020               	movlb	0	; select bank0
 14539  124C  00D6               	movwf	??_seqApply
 14540  124D  0856               	movf	??_seqApply,w
 14541  124E  00D1               	movwf	val2group@val
 14542  124F  3018               	movlw	24
 14543  1250  3196  2662  3191   	fcall	_val2group
 14544                           
 14545                           ;main.c: 1280:     val2group(25, (unsigned char)SeqVals[5]);
 14546  1253  0021               	movlb	1	; select bank1
 14547  1254  082A               	movf	(_SeqVals^(0+128)+10),w
 14548  1255  0020               	movlb	0	; select bank0
 14549  1256  00D6               	movwf	??_seqApply
 14550  1257  0856               	movf	??_seqApply,w
 14551  1258  00D1               	movwf	val2group@val
 14552  1259  3019               	movlw	25
 14553  125A  3196  2662  3191   	fcall	_val2group
 14554                           
 14555                           ;main.c: 1281:     val2group(26, (unsigned char)SeqVals[5]);
 14556  125D  0021               	movlb	1	; select bank1
 14557  125E  082A               	movf	(_SeqVals^(0+128)+10),w
 14558  125F  0020               	movlb	0	; select bank0
 14559  1260  00D6               	movwf	??_seqApply
 14560  1261  0856               	movf	??_seqApply,w
 14561  1262  00D1               	movwf	val2group@val
 14562  1263  301A               	movlw	26
 14563  1264  3196  2662  3191   	fcall	_val2group
 14564                           
 14565                           ;main.c: 1282:     val2group(27, (unsigned char)SeqVals[5]);
 14566  1267  0021               	movlb	1	; select bank1
 14567  1268  082A               	movf	(_SeqVals^(0+128)+10),w
 14568  1269  0020               	movlb	0	; select bank0
 14569  126A  00D6               	movwf	??_seqApply
 14570  126B  0856               	movf	??_seqApply,w
 14571  126C  00D1               	movwf	val2group@val
 14572  126D  301B               	movlw	27
 14573  126E  3196  2662  3191   	fcall	_val2group
 14574                           
 14575                           ;main.c: 1283:     val2group(28, (unsigned char)SeqVals[5]);
 14576  1271  0021               	movlb	1	; select bank1
 14577  1272  082A               	movf	(_SeqVals^(0+128)+10),w
 14578  1273  0020               	movlb	0	; select bank0
 14579  1274  00D6               	movwf	??_seqApply
 14580  1275  0856               	movf	??_seqApply,w
 14581  1276  00D1               	movwf	val2group@val
 14582  1277  301C               	movlw	28
 14583  1278  3196  2662  3191   	fcall	_val2group
 14584  127B                     l1291:
 14585  127B  0008               	return
 14586  127C                     __end_of_seqApply:
 14587                           
 14588                           	psect	text32
 14589  1838                     __ptext32:	
 14590 ;; *************** function _protExec *****************
 14591 ;; Defined at:
 14592 ;;		line 1365 in file "main.c"
 14593 ;; Parameters:    Size  Location     Type
 14594 ;;		None
 14595 ;; Auto vars:     Size  Location     Type
 14596 ;;		None
 14597 ;; Return value:  Size  Location     Type
 14598 ;;                  1    wreg      void 
 14599 ;; Registers used:
 14600 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14601 ;; Tracked objects:
 14602 ;;		On entry : 0/0
 14603 ;;		On exit  : 0/0
 14604 ;;		Unchanged: 0/0
 14605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14608 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14609 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14610 ;;Total ram usage:        2 bytes
 14611 ;; Hardware stack levels used: 1
 14612 ;; Hardware stack levels required when called: 12
 14613 ;; This function calls:
 14614 ;;		_sendOrderX
 14615 ;; This function is called by:
 14616 ;;		_main
 14617 ;; This function uses a non-reentrant model
 14618 ;;
 14619                           
 14620                           
 14621                           ;psect for function _protExec
 14622  1838                     _protExec:
 14623  1838                     l6899:	
 14624                           ;incstack = 0
 14625                           ; Regs used in _protExec: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14626                           
 14627                           
 14628                           ;main.c: 1366:     switch(pVals[0]) {
 14629  1838  286D               	goto	l6915
 14630  1839                     l6901:
 14631                           
 14632                           ;main.c: 1368:             if(pVals[1] == 100) {
 14633  1839  3064               	movlw	100
 14634  183A  0024               	movlb	4	; select bank4
 14635  183B  064B               	xorwf	(_pVals^(0+512)+1),w
 14636  183C  1D03               	btfss	3,2
 14637  183D  283F               	goto	u5651
 14638  183E  2840               	goto	u5650
 14639  183F                     u5651:
 14640  183F  287F               	goto	l6917
 14641  1840                     u5650:
 14642  1840                     l6903:
 14643                           
 14644                           ;main.c: 1369:                 dotTestColor[0] = pVals[2];
 14645  1840  084C               	movf	(_pVals^(0+512)+2),w
 14646  1841  0020               	movlb	0	; select bank0
 14647  1842  00D1               	movwf	??_protExec
 14648  1843  0851               	movf	??_protExec,w
 14649  1844  0021               	movlb	1	; select bank1
 14650  1845  00E8               	movwf	_dotTestColor^(0+128)
 14651                           
 14652                           ;main.c: 1370:                 dotTestColor[1] = pVals[3];
 14653  1846  0024               	movlb	4	; select bank4
 14654  1847  084D               	movf	(_pVals^(0+512)+3),w
 14655  1848  0020               	movlb	0	; select bank0
 14656  1849  00D1               	movwf	??_protExec
 14657  184A  0851               	movf	??_protExec,w
 14658  184B  0021               	movlb	1	; select bank1
 14659  184C  00E9               	movwf	(_dotTestColor^(0+128)+1)
 14660                           
 14661                           ;main.c: 1371:                 dotTestColor[2] = pVals[4];
 14662  184D  0024               	movlb	4	; select bank4
 14663  184E  084E               	movf	(_pVals^(0+512)+4),w
 14664  184F  0020               	movlb	0	; select bank0
 14665  1850  00D1               	movwf	??_protExec
 14666  1851  0851               	movf	??_protExec,w
 14667  1852  0021               	movlb	1	; select bank1
 14668  1853  00EA               	movwf	(_dotTestColor^(0+128)+2)
 14669                           
 14670                           ;main.c: 1372:             }else {
 14671  1854  287F               	goto	l6917
 14672  1855                     l6905:
 14673                           
 14674                           ;main.c: 1377:             if(pVals[1] > 31)
 14675  1855  3020               	movlw	32
 14676  1856  0024               	movlb	4	; select bank4
 14677  1857  024B               	subwf	(_pVals^(0+512)+1),w
 14678  1858  1C03               	skipc
 14679  1859  285B               	goto	u5661
 14680  185A  285C               	goto	u5660
 14681  185B                     u5661:
 14682  185B  2863               	goto	l6909
 14683  185C                     u5660:
 14684  185C                     l6907:
 14685                           
 14686                           ;main.c: 1378:                 defaultLum = 31;
 14687  185C  301F               	movlw	31
 14688  185D  0020               	movlb	0	; select bank0
 14689  185E  00D1               	movwf	??_protExec
 14690  185F  0851               	movf	??_protExec,w
 14691  1860  0021               	movlb	1	; select bank1
 14692  1861  00ED               	movwf	_defaultLum^(0+128)
 14693  1862  2869               	goto	l6911
 14694  1863                     l6909:
 14695                           
 14696                           ;main.c: 1380:                 defaultLum = pVals[1];
 14697  1863  084B               	movf	(_pVals^(0+512)+1),w
 14698  1864  0020               	movlb	0	; select bank0
 14699  1865  00D1               	movwf	??_protExec
 14700  1866  0851               	movf	??_protExec,w
 14701  1867  0021               	movlb	1	; select bank1
 14702  1868  00ED               	movwf	_defaultLum^(0+128)
 14703  1869                     l6911:
 14704                           
 14705                           ;main.c: 1381:             sendOrderX();
 14706  1869  31A0  20E0  3198   	fcall	_sendOrderX
 14707                           
 14708                           ;main.c: 1382:             break;
 14709  186C  287F               	goto	l6917
 14710  186D                     l6915:
 14711  186D  0024               	movlb	4	; select bank4
 14712  186E  084A               	movf	_pVals^(0+512),w
 14713  186F  0020               	movlb	0	; select bank0
 14714  1870  00D1               	movwf	??_protExec
 14715  1871  01D2               	clrf	??_protExec+1
 14716                           
 14717                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14718                           ; Switch size 1, requested type "simple"
 14719                           ; Number of cases is 1, Range of values is 0 to 0
 14720                           ; switch strategies available:
 14721                           ; Name         Instructions Cycles
 14722                           ; simple_byte            4     3 (average)
 14723                           ; direct_byte            8     6 (fixed)
 14724                           ; jumptable            260     6 (fixed)
 14725                           ;	Chosen strategy is simple_byte
 14726  1872  0852               	movf	??_protExec+1,w
 14727  1873  3A00               	xorlw	0	; case 0
 14728  1874  1903               	skipnz
 14729  1875  2877               	goto	l7949
 14730  1876  287F               	goto	l6917
 14731  1877                     l7949:
 14732                           
 14733                           ; Switch size 1, requested type "simple"
 14734                           ; Number of cases is 2, Range of values is 0 to 1
 14735                           ; switch strategies available:
 14736                           ; Name         Instructions Cycles
 14737                           ; simple_byte            7     4 (average)
 14738                           ; direct_byte           10     6 (fixed)
 14739                           ; jumptable            260     6 (fixed)
 14740                           ;	Chosen strategy is simple_byte
 14741  1877  0851               	movf	??_protExec,w
 14742  1878  3A00               	xorlw	0	; case 0
 14743  1879  1903               	skipnz
 14744  187A  2839               	goto	l6901
 14745  187B  3A01               	xorlw	1	; case 1
 14746  187C  1903               	skipnz
 14747  187D  2855               	goto	l6905
 14748  187E  287F               	goto	l6917
 14749  187F                     l6917:
 14750                           
 14751                           ;main.c: 1384:     execChan = 0;
 14752  187F  0021               	movlb	1	; select bank1
 14753  1880  01D3               	clrf	_execChan^(0+128)
 14754  1881                     l1337:
 14755  1881  0008               	return
 14756  1882                     __end_of_protExec:
 14757                           
 14758                           	psect	text33
 14759  27B7                     __ptext33:	
 14760 ;; *************** function _initArrays *****************
 14761 ;; Defined at:
 14762 ;;		line 190 in file "main.c"
 14763 ;; Parameters:    Size  Location     Type
 14764 ;;		None
 14765 ;; Auto vars:     Size  Location     Type
 14766 ;;  i               1   14[BANK0 ] unsigned char 
 14767 ;; Return value:  Size  Location     Type
 14768 ;;                  1    wreg      void 
 14769 ;; Registers used:
 14770 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14771 ;; Tracked objects:
 14772 ;;		On entry : 0/0
 14773 ;;		On exit  : 0/0
 14774 ;;		Unchanged: 0/0
 14775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14777 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14778 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14779 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14780 ;;Total ram usage:        2 bytes
 14781 ;; Hardware stack levels used: 1
 14782 ;; Hardware stack levels required when called: 13
 14783 ;; This function calls:
 14784 ;;		_applyColor
 14785 ;; This function is called by:
 14786 ;;		_main
 14787 ;; This function uses a non-reentrant model
 14788 ;;
 14789                           
 14790                           
 14791                           ;psect for function _initArrays
 14792  27B7                     _initArrays:
 14793  27B7                     l6859:	
 14794                           ;incstack = 0
 14795                           ; Regs used in _initArrays: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14796                           
 14797                           
 14798                           ;main.c: 191:     char i = 0;
 14799  27B7  0020               	movlb	0	; select bank0
 14800  27B8  01DB               	clrf	initArrays@i
 14801                           
 14802                           ;main.c: 192:     for(i = 0; i < dotCant1; i++) {
 14803  27B9  01DB               	clrf	initArrays@i
 14804  27BA  2FDB               	goto	l6865
 14805  27BB                     l6861:
 14806                           
 14807                           ;main.c: 193:         dotValue1[i] = 0;
 14808  27BB  085B               	movf	initArrays@i,w
 14809  27BC  3E9B               	addlw	155
 14810  27BD  0086               	movwf	6
 14811  27BE  0187               	clrf	7
 14812  27BF  3027               	movlw	39
 14813  27C0  3D87               	addwfc	7,f
 14814  27C1  0181               	clrf	1
 14815                           
 14816                           ;main.c: 194:         dotValue2[i] = 0;
 14817  27C2  085B               	movf	initArrays@i,w
 14818  27C3  3E46               	addlw	70
 14819  27C4  0086               	movwf	6
 14820  27C5  0187               	clrf	7
 14821  27C6  3027               	movlw	39
 14822  27C7  3D87               	addwfc	7,f
 14823  27C8  0181               	clrf	1
 14824                           
 14825                           ;main.c: 195:         dotColor1[i] = 0;
 14826  27C9  085B               	movf	initArrays@i,w
 14827  27CA  3EF1               	addlw	241
 14828  27CB  0086               	movwf	6
 14829  27CC  0187               	clrf	7
 14830  27CD  3026               	movlw	38
 14831  27CE  3D87               	addwfc	7,f
 14832  27CF  0181               	clrf	1
 14833                           
 14834                           ;main.c: 196:         dotColor2[i] = 0;
 14835  27D0  085B               	movf	initArrays@i,w
 14836  27D1  3E9C               	addlw	156
 14837  27D2  0086               	movwf	6
 14838  27D3  0187               	clrf	7
 14839  27D4  3026               	movlw	38
 14840  27D5  3D87               	addwfc	7,f
 14841  27D6  0181               	clrf	1
 14842  27D7                     l6863:
 14843                           
 14844                           ;main.c: 197:     }
 14845  27D7  3001               	movlw	1
 14846  27D8  00DA               	movwf	??_initArrays
 14847  27D9  085A               	movf	??_initArrays,w
 14848  27DA  07DB               	addwf	initArrays@i,f
 14849  27DB                     l6865:
 14850  27DB  3055               	movlw	85
 14851  27DC  025B               	subwf	initArrays@i,w
 14852  27DD  1C03               	skipc
 14853  27DE  2FE0               	goto	u5611
 14854  27DF  2FE1               	goto	u5610
 14855  27E0                     u5611:
 14856  27E0  2FBB               	goto	l6861
 14857  27E1                     u5610:
 14858  27E1                     l6867:
 14859                           
 14860                           ;main.c: 198:     for(i = 0; i < groupCant; i++)
 14861  27E1  01DB               	clrf	initArrays@i
 14862  27E2  2FEE               	goto	l6873
 14863  27E3                     l6869:
 14864                           
 14865                           ;main.c: 199:         applyColor(i, 0, 0);
 14866  27E3  01D6               	clrf	applyColor@color
 14867  27E4  01D7               	clrf	applyColor@intensity
 14868  27E5  085B               	movf	initArrays@i,w
 14869  27E6  31A3  235E  31A7   	fcall	_applyColor
 14870  27E9                     l6871:
 14871  27E9  3001               	movlw	1
 14872  27EA  0020               	movlb	0	; select bank0
 14873  27EB  00DA               	movwf	??_initArrays
 14874  27EC  085A               	movf	??_initArrays,w
 14875  27ED  07DB               	addwf	initArrays@i,f
 14876  27EE                     l6873:
 14877  27EE  086B               	movf	_groupCant,w
 14878  27EF  025B               	subwf	initArrays@i,w
 14879  27F0  1C03               	skipc
 14880  27F1  2FF3               	goto	u5621
 14881  27F2  2FF4               	goto	u5620
 14882  27F3                     u5621:
 14883  27F3  2FE3               	goto	l6869
 14884  27F4                     u5620:
 14885  27F4                     l6875:
 14886                           
 14887                           ;main.c: 200:     for(i = 0; i < 15; i++) {
 14888  27F4  01DB               	clrf	initArrays@i
 14889  27F5                     l6881:
 14890                           
 14891                           ;main.c: 203:     }
 14892  27F5  3001               	movlw	1
 14893  27F6  00DA               	movwf	??_initArrays
 14894  27F7  085A               	movf	??_initArrays,w
 14895  27F8  07DB               	addwf	initArrays@i,f
 14896  27F9                     l6883:
 14897  27F9  300F               	movlw	15
 14898  27FA  025B               	subwf	initArrays@i,w
 14899  27FB  1C03               	skipc
 14900  27FC  2FFE               	goto	u5631
 14901  27FD  2FFF               	goto	u5630
 14902  27FE                     u5631:
 14903  27FE  2FF5               	goto	l6881
 14904  27FF                     u5630:
 14905  27FF                     l833:
 14906  27FF  0008               	return
 14907  2800                     __end_of_initArrays:
 14908                           
 14909                           	psect	text34
 14910  23F4                     __ptext34:	
 14911 ;; *************** function _changeDemoMode *****************
 14912 ;; Defined at:
 14913 ;;		line 1528 in file "main.c"
 14914 ;; Parameters:    Size  Location     Type
 14915 ;;		None
 14916 ;; Auto vars:     Size  Location     Type
 14917 ;;		None
 14918 ;; Return value:  Size  Location     Type
 14919 ;;                  1    wreg      void 
 14920 ;; Registers used:
 14921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14922 ;; Tracked objects:
 14923 ;;		On entry : 0/0
 14924 ;;		On exit  : 0/0
 14925 ;;		Unchanged: 0/0
 14926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14931 ;;Total ram usage:        0 bytes
 14932 ;; Hardware stack levels used: 1
 14933 ;; Hardware stack levels required when called: 17
 14934 ;; This function calls:
 14935 ;;		_butt3Pres
 14936 ;;		_waitX0ms
 14937 ;; This function is called by:
 14938 ;;		_main
 14939 ;; This function uses a non-reentrant model
 14940 ;;
 14941                           
 14942                           
 14943                           ;psect for function _changeDemoMode
 14944  23F4                     _changeDemoMode:
 14945  23F4                     l7039:	
 14946                           ;incstack = 0
 14947 ;; hardware stack exceeded
 14948                           ; Regs used in _changeDemoMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14949                           
 14950                           
 14951                           ;main.c: 1529:     if(!PORTCbits.RC2) {
 14952  23F4  0020               	movlb	0	; select bank0
 14953  23F5  190E               	btfsc	14,2	;volatile
 14954  23F6  2BF8               	goto	u5911
 14955  23F7  2BF9               	goto	u5910
 14956  23F8                     u5911:
 14957  23F8  2C02               	goto	l7045
 14958  23F9                     u5910:
 14959  23F9                     l7041:
 14960                           
 14961                           ;main.c: 1530:         butt3Pres(1);
 14962  23F9  3001               	movlw	1
 14963  23FA  31A6  2606  31A3   	fcall	_butt3Pres
 14964  23FD                     l7043:
 14965                           
 14966                           ;main.c: 1531:         waitX0ms(5);
 14967  23FD  3005               	movlw	5
 14968  23FE  31A1  210D  31A3   	fcall	_waitX0ms
 14969                           
 14970                           ;main.c: 1532:     }else {
 14971  2401  2C0A               	goto	l1420
 14972  2402                     l7045:
 14973                           
 14974                           ;main.c: 1533:         butt3Pres(0);
 14975  2402  3000               	movlw	0
 14976  2403  31A6  2606  31A3   	fcall	_butt3Pres
 14977  2406                     l7047:
 14978                           
 14979                           ;main.c: 1534:         waitX0ms(5);
 14980  2406  3005               	movlw	5
 14981  2407  31A1  210D  31A3   	fcall	_waitX0ms
 14982  240A                     l1420:
 14983  240A  0008               	return
 14984  240B                     __end_of_changeDemoMode:
 14985                           
 14986                           	psect	text35
 14987  210D                     __ptext35:	
 14988 ;; *************** function _waitX0ms *****************
 14989 ;; Defined at:
 14990 ;;		line 1571 in file "main.c"
 14991 ;; Parameters:    Size  Location     Type
 14992 ;;  X               1    wreg     unsigned char 
 14993 ;; Auto vars:     Size  Location     Type
 14994 ;;  X               1    5[BANK0 ] unsigned char 
 14995 ;; Return value:  Size  Location     Type
 14996 ;;                  1    wreg      void 
 14997 ;; Registers used:
 14998 ;;		wreg, status,2
 14999 ;; Tracked objects:
 15000 ;;		On entry : 0/0
 15001 ;;		On exit  : 0/0
 15002 ;;		Unchanged: 0/0
 15003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15005 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15006 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15007 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15008 ;;Total ram usage:        2 bytes
 15009 ;; Hardware stack levels used: 1
 15010 ;; Hardware stack levels required when called: 11
 15011 ;; This function calls:
 15012 ;;		Nothing
 15013 ;; This function is called by:
 15014 ;;		_changeDemoMode
 15015 ;;		_dotTest1
 15016 ;;		_dotTest2
 15017 ;;		_dotTest3
 15018 ;; This function uses a non-reentrant model
 15019 ;;
 15020                           
 15021                           
 15022                           ;psect for function _waitX0ms
 15023  210D                     _waitX0ms:
 15024                           
 15025                           ;incstack = 0
 15026                           ; Regs used in _waitX0ms: [wreg+status,2]
 15027                           ;waitX0ms@X stored from wreg
 15028  210D  0020               	movlb	0	; select bank0
 15029  210E  00D2               	movwf	waitX0ms@X
 15030  210F                     l6763:
 15031                           
 15032                           ;main.c: 1572:     waiter = 0;
 15033  210F  01C8               	clrf	_waiter
 15034  2110                     l6765:
 15035                           
 15036                           ;main.c: 1573:     waitingTime = X;
 15037  2110  0852               	movf	waitX0ms@X,w
 15038  2111  00D1               	movwf	??_waitX0ms
 15039  2112  0851               	movf	??_waitX0ms,w
 15040  2113  00C9               	movwf	_waitingTime
 15041  2114                     l1439:
 15042  2114  0008               	return
 15043  2115                     __end_of_waitX0ms:
 15044                           
 15045                           	psect	text36
 15046  2606                     __ptext36:	
 15047 ;; *************** function _butt3Pres *****************
 15048 ;; Defined at:
 15049 ;;		line 1548 in file "main.c"
 15050 ;; Parameters:    Size  Location     Type
 15051 ;;  state           1    wreg     unsigned char 
 15052 ;; Auto vars:     Size  Location     Type
 15053 ;;  state           1   19[BANK0 ] unsigned char 
 15054 ;; Return value:  Size  Location     Type
 15055 ;;                  1    wreg      void 
 15056 ;; Registers used:
 15057 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15058 ;; Tracked objects:
 15059 ;;		On entry : 0/0
 15060 ;;		On exit  : 0/0
 15061 ;;		Unchanged: 0/0
 15062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15064 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15066 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15067 ;;Total ram usage:        1 bytes
 15068 ;; Hardware stack levels used: 1
 15069 ;; Hardware stack levels required when called: 16
 15070 ;; This function calls:
 15071 ;;		_putch
 15072 ;;		_resetAndOff
 15073 ;;		_rstDemoOff
 15074 ;; This function is called by:
 15075 ;;		_changeDemoMode
 15076 ;;		_main
 15077 ;; This function uses a non-reentrant model
 15078 ;;
 15079                           
 15080                           
 15081                           ;psect for function _butt3Pres
 15082  2606                     _butt3Pres:
 15083                           
 15084                           ;incstack = 0
 15085 ;; hardware stack exceeded
 15086                           ; Regs used in _butt3Pres: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15087                           ;butt3Pres@state stored from wreg
 15088  2606  0020               	movlb	0	; select bank0
 15089  2607  00E0               	movwf	butt3Pres@state
 15090  2608                     l6739:
 15091                           
 15092                           ;main.c: 1549:     if(state) {
 15093  2608  0860               	movf	butt3Pres@state,w
 15094  2609  1903               	btfsc	3,2
 15095  260A  2E0C               	goto	u5501
 15096  260B  2E0D               	goto	u5500
 15097  260C                     u5501:
 15098  260C  2E2E               	goto	l6757
 15099  260D                     u5500:
 15100  260D                     l6741:
 15101                           
 15102                           ;main.c: 1550:         putch('o');
 15103  260D  306F               	movlw	111
 15104  260E  31A0  20EE  31A6   	fcall	_putch
 15105  2611                     l6743:
 15106                           
 15107                           ;main.c: 1551:         modoPress_nDemo = 1;
 15108  2611  0020               	movlb	0	; select bank0
 15109  2612  01C6               	clrf	_modoPress_nDemo
 15110  2613  0AC6               	incf	_modoPress_nDemo,f
 15111  2614                     l6745:
 15112                           
 15113                           ;main.c: 1552:         if(lightsOn) {
 15114  2614  0844               	movf	_lightsOn,w
 15115  2615  1903               	btfsc	3,2
 15116  2616  2E18               	goto	u5511
 15117  2617  2E19               	goto	u5510
 15118  2618                     u5511:
 15119  2618  2E29               	goto	l6755
 15120  2619                     u5510:
 15121  2619                     l6747:
 15122                           
 15123                           ;main.c: 1553:             resetAndOff(0);
 15124  2619  3000               	movlw	0
 15125  261A  3199  216D  31A6   	fcall	_resetAndOff
 15126  261D                     l6749:
 15127                           
 15128                           ;main.c: 1554:             rstDemoOff(1);
 15129  261D  3001               	movlw	1
 15130  261E  31A1  21B3  31A6   	fcall	_rstDemoOff
 15131  2621                     l6751:
 15132                           
 15133                           ;main.c: 1555:             run = 1;
 15134  2621  0020               	movlb	0	; select bank0
 15135  2622  01C5               	clrf	_run
 15136  2623  0AC5               	incf	_run,f
 15137  2624                     l6753:
 15138                           
 15139                           ;main.c: 1556:             putch('f');
 15140  2624  3066               	movlw	102
 15141  2625  31A0  20EE  31A6   	fcall	_putch
 15142                           
 15143                           ;main.c: 1557:         }else
 15144  2628  2E38               	goto	l1433
 15145  2629                     l6755:
 15146                           
 15147                           ;main.c: 1558:             resetAndOff(1);
 15148  2629  3001               	movlw	1
 15149  262A  3199  216D  31A6   	fcall	_resetAndOff
 15150  262D  2E38               	goto	l1433
 15151  262E                     l6757:
 15152                           
 15153                           ;main.c: 1560:         putch('d');
 15154  262E  3064               	movlw	100
 15155  262F  31A0  20EE  31A6   	fcall	_putch
 15156  2632                     l6759:
 15157                           
 15158                           ;main.c: 1561:         modoPress_nDemo = 0;
 15159  2632  0020               	movlb	0	; select bank0
 15160  2633  01C6               	clrf	_modoPress_nDemo
 15161  2634                     l6761:
 15162                           
 15163                           ;main.c: 1562:         resetAndOff(1);
 15164  2634  3001               	movlw	1
 15165  2635  3199  216D  31A6   	fcall	_resetAndOff
 15166  2638                     l1433:
 15167  2638  0008               	return
 15168  2639                     __end_of_butt3Pres:
 15169                           
 15170                           	psect	text37
 15171  196D                     __ptext37:	
 15172 ;; *************** function _resetAndOff *****************
 15173 ;; Defined at:
 15174 ;;		line 1305 in file "main.c"
 15175 ;; Parameters:    Size  Location     Type
 15176 ;;  light           1    wreg     unsigned char 
 15177 ;; Auto vars:     Size  Location     Type
 15178 ;;  light           1   18[BANK0 ] unsigned char 
 15179 ;; Return value:  Size  Location     Type
 15180 ;;                  1    wreg      void 
 15181 ;; Registers used:
 15182 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15183 ;; Tracked objects:
 15184 ;;		On entry : 0/0
 15185 ;;		On exit  : 0/0
 15186 ;;		Unchanged: 0/0
 15187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15189 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15191 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15192 ;;Total ram usage:        1 bytes
 15193 ;; Hardware stack levels used: 1
 15194 ;; Hardware stack levels required when called: 15
 15195 ;; This function calls:
 15196 ;;		_allBodyVal
 15197 ;;		_rstDemoOff
 15198 ;;		_rstDemoOn
 15199 ;;		_rstDragon
 15200 ;;		_rstMaskOff
 15201 ;;		_rstMaskOn
 15202 ;;		_rstMusik
 15203 ;;		_rstPressOff
 15204 ;;		_rstPressOn
 15205 ;;		_rstSeq
 15206 ;;		_rstShadow
 15207 ;;		_sendOrderX
 15208 ;; This function is called by:
 15209 ;;		_demoEfectOff
 15210 ;;		_SeqPresOff
 15211 ;;		_butt3Pres
 15212 ;;		_main
 15213 ;; This function uses a non-reentrant model
 15214 ;;
 15215                           
 15216                           
 15217                           ;psect for function _resetAndOff
 15218  196D                     _resetAndOff:
 15219                           
 15220                           ;incstack = 0
 15221 ;; hardware stack exceeded
 15222                           ; Regs used in _resetAndOff: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15223                           ;resetAndOff@light stored from wreg
 15224  196D  0020               	movlb	0	; select bank0
 15225  196E  00DF               	movwf	resetAndOff@light
 15226  196F                     l5789:
 15227                           
 15228                           ;main.c: 1306:     soundASOn = 0;
 15229  196F  0021               	movlb	1	; select bank1
 15230  1970  01E5               	clrf	_soundASOn^(0+128)
 15231                           
 15232                           ;main.c: 1307:     soundASOff = 0;
 15233  1971  01E4               	clrf	_soundASOff^(0+128)
 15234                           
 15235                           ;main.c: 1308:     maskIsOn = 0;
 15236  1972  01E0               	clrf	_maskIsOn^(0+128)
 15237                           
 15238                           ;main.c: 1309:     lightsOn = 0;
 15239  1973  0020               	movlb	0	; select bank0
 15240  1974  01C4               	clrf	_lightsOn
 15241  1975                     l5791:
 15242                           
 15243                           ;main.c: 1310:     rstPressOn(0);
 15244  1975  3000               	movlw	0
 15245  1976  3190  2000  3199   	fcall	_rstPressOn
 15246  1979                     l5793:
 15247                           
 15248                           ;main.c: 1311:     rstPressOff(0);
 15249  1979  3000               	movlw	0
 15250  197A  31A1  21BD  3199   	fcall	_rstPressOff
 15251  197D                     l5795:
 15252                           
 15253                           ;main.c: 1312:     rstSeq();
 15254  197D  31A3  239C  3199   	fcall	_rstSeq
 15255  1980                     l5797:
 15256                           
 15257                           ;main.c: 1313:     rstDemoOn(0);
 15258  1980  3000               	movlw	0
 15259  1981  31A1  21D2  3199   	fcall	_rstDemoOn
 15260  1984                     l5799:
 15261                           
 15262                           ;main.c: 1314:     rstDemoOff(0);
 15263  1984  3000               	movlw	0
 15264  1985  31A1  21B3  3199   	fcall	_rstDemoOff
 15265  1988                     l5801:
 15266                           
 15267                           ;main.c: 1315:     rstMaskOn(0);
 15268  1988  3000               	movlw	0
 15269  1989  31A2  2243  3199   	fcall	_rstMaskOn
 15270  198C                     l5803:
 15271                           
 15272                           ;main.c: 1316:     rstMaskOff(0);
 15273  198C  3000               	movlw	0
 15274  198D  31A2  220D  3199   	fcall	_rstMaskOff
 15275  1990                     l5805:
 15276                           
 15277                           ;main.c: 1317:     rstShadow(0);
 15278  1990  3000               	movlw	0
 15279  1991  31A2  22AB  3199   	fcall	_rstShadow
 15280  1994                     l5807:
 15281                           
 15282                           ;main.c: 1318:     rstDragon(0);
 15283  1994  3000               	movlw	0
 15284  1995  31A5  25A2  3199   	fcall	_rstDragon
 15285  1998                     l5809:
 15286                           
 15287                           ;main.c: 1319:     rstMusik(0);
 15288  1998  3000               	movlw	0
 15289  1999  31A2  22DB  3199   	fcall	_rstMusik
 15290  199C                     l5811:
 15291                           
 15292                           ;main.c: 1320:     secCont = 0;
 15293  199C  3000               	movlw	0
 15294  199D  0023               	movlb	3	; select bank3
 15295  199E  00C9               	movwf	(_secCont+3)^(0+384)
 15296  199F  3000               	movlw	0
 15297  19A0  00C8               	movwf	(_secCont+2)^(0+384)
 15298  19A1  3000               	movlw	0
 15299  19A2  00C7               	movwf	(_secCont+1)^(0+384)
 15300  19A3  3000               	movlw	0
 15301  19A4  00C6               	movwf	_secCont^(0+384)
 15302  19A5                     l5813:
 15303                           
 15304                           ;main.c: 1321:     stepContDemo = 0;
 15305  19A5  0021               	movlb	1	; select bank1
 15306  19A6  01D7               	clrf	_stepContDemo^(0+128)
 15307  19A7                     l5815:
 15308                           
 15309                           ;main.c: 1322:     stepContPress = 0;
 15310  19A7  01D6               	clrf	_stepContPress^(0+128)
 15311  19A8                     l5817:
 15312                           
 15313                           ;main.c: 1323:     dragonCrashDone = 0;
 15314  19A8  01DB               	clrf	_dragonCrashDone^(0+128)
 15315  19A9                     l5819:
 15316                           
 15317                           ;main.c: 1324:     refriShoulderDone = 0;
 15318  19A9  01D8               	clrf	_refriShoulderDone^(0+128)
 15319  19AA                     l5821:
 15320                           
 15321                           ;main.c: 1326:     run = 0;
 15322  19AA  0020               	movlb	0	; select bank0
 15323  19AB  01C5               	clrf	_run
 15324  19AC                     l5823:
 15325                           
 15326                           ;main.c: 1327:     if(light) {
 15327  19AC  085F               	movf	resetAndOff@light,w
 15328  19AD  1903               	btfsc	3,2
 15329  19AE  29B0               	goto	u3901
 15330  19AF  29B1               	goto	u3900
 15331  19B0                     u3901:
 15332  19B0  29B9               	goto	l5829
 15333  19B1                     u3900:
 15334  19B1                     l5825:
 15335                           
 15336                           ;main.c: 1328:         fullBodyVal = 0;
 15337  19B1  01B0               	clrf	_fullBodyVal
 15338  19B2  01B1               	clrf	_fullBodyVal+1
 15339                           
 15340                           ;main.c: 1329:         genVal = 0;
 15341  19B3  01B5               	clrf	_genVal
 15342  19B4                     l5827:
 15343                           
 15344                           ;main.c: 1330:         allBodyVal(0, 0);
 15345  19B4  01DA               	clrf	allBodyVal@color
 15346  19B5  3000               	movlw	0
 15347  19B6  31A4  24A5  3199   	fcall	_allBodyVal
 15348  19B9                     l5829:
 15349                           
 15350                           ;main.c: 1332:     sendOrderX();
 15351  19B9  31A0  20E0  3199   	fcall	_sendOrderX
 15352  19BC                     l1309:
 15353  19BC  0008               	return
 15354  19BD                     __end_of_resetAndOff:
 15355                           
 15356                           	psect	text38
 15357  20E0                     __ptext38:	
 15358 ;; *************** function _sendOrderX *****************
 15359 ;; Defined at:
 15360 ;;		line 495 in file "main.c"
 15361 ;; Parameters:    Size  Location     Type
 15362 ;;		None
 15363 ;; Auto vars:     Size  Location     Type
 15364 ;;		None
 15365 ;; Return value:  Size  Location     Type
 15366 ;;                  1    wreg      void 
 15367 ;; Registers used:
 15368 ;;		None
 15369 ;; Tracked objects:
 15370 ;;		On entry : 0/0
 15371 ;;		On exit  : 0/0
 15372 ;;		Unchanged: 0/0
 15373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15378 ;;Total ram usage:        0 bytes
 15379 ;; Hardware stack levels used: 1
 15380 ;; Hardware stack levels required when called: 11
 15381 ;; This function calls:
 15382 ;;		Nothing
 15383 ;; This function is called by:
 15384 ;;		_despShadow
 15385 ;;		_dragonCrash
 15386 ;;		_refriShoulder
 15387 ;;		_maskOn
 15388 ;;		_maskOff
 15389 ;;		_demoEfectOn
 15390 ;;		_musik
 15391 ;;		_demoEfectOff
 15392 ;;		_SeqPresOn
 15393 ;;		_SeqPresOff
 15394 ;;		_resetAndOff
 15395 ;;		_protExec
 15396 ;;		_maskOffOld
 15397 ;; This function uses a non-reentrant model
 15398 ;;
 15399                           
 15400                           
 15401                           ;psect for function _sendOrderX
 15402  20E0                     _sendOrderX:
 15403  20E0                     l5387:	
 15404                           ;incstack = 0
 15405                           ; Regs used in _sendOrderX: []
 15406                           
 15407                           
 15408                           ;main.c: 496:     sendOrder = 1;
 15409  20E0  0021               	movlb	1	; select bank1
 15410  20E1  01D4               	clrf	_sendOrder^(0+128)
 15411  20E2  0AD4               	incf	_sendOrder^(0+128),f
 15412  20E3                     l940:
 15413  20E3  0008               	return
 15414  20E4                     __end_of_sendOrderX:
 15415                           
 15416                           	psect	text39
 15417  22AB                     __ptext39:	
 15418 ;; *************** function _rstShadow *****************
 15419 ;; Defined at:
 15420 ;;		line 578 in file "main.c"
 15421 ;; Parameters:    Size  Location     Type
 15422 ;;  start           1    wreg     unsigned char 
 15423 ;; Auto vars:     Size  Location     Type
 15424 ;;  start           1    5[BANK0 ] unsigned char 
 15425 ;; Return value:  Size  Location     Type
 15426 ;;                  1    wreg      void 
 15427 ;; Registers used:
 15428 ;;		wreg, status,2
 15429 ;; Tracked objects:
 15430 ;;		On entry : 0/0
 15431 ;;		On exit  : 0/0
 15432 ;;		Unchanged: 0/0
 15433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15435 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15436 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15437 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15438 ;;Total ram usage:        2 bytes
 15439 ;; Hardware stack levels used: 1
 15440 ;; Hardware stack levels required when called: 11
 15441 ;; This function calls:
 15442 ;;		Nothing
 15443 ;; This function is called by:
 15444 ;;		_despShadow
 15445 ;;		_resetAndOff
 15446 ;;		_secuences
 15447 ;; This function uses a non-reentrant model
 15448 ;;
 15449                           
 15450                           
 15451                           ;psect for function _rstShadow
 15452  22AB                     _rstShadow:
 15453                           
 15454                           ;incstack = 0
 15455                           ; Regs used in _rstShadow: [wreg+status,2]
 15456                           ;rstShadow@start stored from wreg
 15457  22AB  0020               	movlb	0	; select bank0
 15458  22AC  00D2               	movwf	rstShadow@start
 15459  22AD                     l5403:
 15460                           
 15461                           ;main.c: 579:     subContShadow = 0;
 15462  22AD  0021               	movlb	1	; select bank1
 15463  22AE  01DE               	clrf	_subContShadow^(0+128)
 15464                           
 15465                           ;main.c: 580:     indexShadow = 0;
 15466  22AF  0020               	movlb	0	; select bank0
 15467  22B0  01BE               	clrf	_indexShadow
 15468                           
 15469                           ;main.c: 581:     contTimShadow = 0;
 15470  22B1  0021               	movlb	1	; select bank1
 15471  22B2  01BD               	clrf	_contTimShadow^(0+128)
 15472  22B3  01BE               	clrf	(_contTimShadow+1)^(0+128)
 15473  22B4                     l5405:
 15474                           
 15475                           ;main.c: 582:     runShadow = start;
 15476  22B4  0020               	movlb	0	; select bank0
 15477  22B5  0852               	movf	rstShadow@start,w
 15478  22B6  00D1               	movwf	??_rstShadow
 15479  22B7  0851               	movf	??_rstShadow,w
 15480  22B8  00BF               	movwf	_runShadow
 15481  22B9                     l1005:
 15482  22B9  0008               	return
 15483  22BA                     __end_of_rstShadow:
 15484                           
 15485                           	psect	text40
 15486  239C                     __ptext40:	
 15487 ;; *************** function _rstSeq *****************
 15488 ;; Defined at:
 15489 ;;		line 1293 in file "main.c"
 15490 ;; Parameters:    Size  Location     Type
 15491 ;;		None
 15492 ;; Auto vars:     Size  Location     Type
 15493 ;;  i               1    5[BANK0 ] unsigned char 
 15494 ;; Return value:  Size  Location     Type
 15495 ;;                  1    wreg      void 
 15496 ;; Registers used:
 15497 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15498 ;; Tracked objects:
 15499 ;;		On entry : 0/0
 15500 ;;		On exit  : 0/0
 15501 ;;		Unchanged: 0/0
 15502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15504 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15505 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15506 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15507 ;;Total ram usage:        2 bytes
 15508 ;; Hardware stack levels used: 1
 15509 ;; Hardware stack levels required when called: 11
 15510 ;; This function calls:
 15511 ;;		Nothing
 15512 ;; This function is called by:
 15513 ;;		_resetAndOff
 15514 ;; This function uses a non-reentrant model
 15515 ;;
 15516                           
 15517                           
 15518                           ;psect for function _rstSeq
 15519  239C                     _rstSeq:
 15520  239C                     l5491:	
 15521                           ;incstack = 0
 15522                           ; Regs used in _rstSeq: [wreg+fsr1l+fsr1h+status,2+status,0]
 15523                           
 15524                           
 15525                           ;main.c: 1294:     char i = 0;
 15526  239C  0020               	movlb	0	; select bank0
 15527  239D  01D2               	clrf	rstSeq@i
 15528                           
 15529                           ;main.c: 1295:     for(i = 0; i < 6; i++)
 15530  239E  01D2               	clrf	rstSeq@i
 15531  239F                     l5497:
 15532                           
 15533                           ;main.c: 1296:         SeqVals[i] = 0;
 15534  239F  3552               	lslf	rstSeq@i,w
 15535  23A0  3EA0               	addlw	(low (_SeqVals| 0))& (0+255)
 15536  23A1  0086               	movwf	6
 15537  23A2  0187               	clrf	7
 15538  23A3  3000               	movlw	0
 15539  23A4  3FC0               	movwi [0]fsr1
 15540  23A5  3FC1               	movwi [1]fsr1
 15541  23A6                     l5499:
 15542  23A6  3001               	movlw	1
 15543  23A7  00D1               	movwf	??_rstSeq
 15544  23A8  0851               	movf	??_rstSeq,w
 15545  23A9  07D2               	addwf	rstSeq@i,f
 15546  23AA                     l5501:
 15547  23AA  3006               	movlw	6
 15548  23AB  0252               	subwf	rstSeq@i,w
 15549  23AC  1C03               	skipc
 15550  23AD  2BAF               	goto	u3591
 15551  23AE  2BB0               	goto	u3590
 15552  23AF                     u3591:
 15553  23AF  2B9F               	goto	l5497
 15554  23B0                     u3590:
 15555  23B0                     l1299:
 15556  23B0  0008               	return
 15557  23B1                     __end_of_rstSeq:
 15558                           
 15559                           	psect	text41
 15560  1000                     __ptext41:	
 15561 ;; *************** function _rstPressOn *****************
 15562 ;; Defined at:
 15563 ;;		line 1195 in file "main.c"
 15564 ;; Parameters:    Size  Location     Type
 15565 ;;  start           1    wreg     unsigned char 
 15566 ;; Auto vars:     Size  Location     Type
 15567 ;;  start           1    5[BANK0 ] unsigned char 
 15568 ;; Return value:  Size  Location     Type
 15569 ;;                  1    wreg      void 
 15570 ;; Registers used:
 15571 ;;		wreg, status,2
 15572 ;; Tracked objects:
 15573 ;;		On entry : 0/0
 15574 ;;		On exit  : 0/0
 15575 ;;		Unchanged: 0/0
 15576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15578 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15579 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15580 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15581 ;;Total ram usage:        2 bytes
 15582 ;; Hardware stack levels used: 1
 15583 ;; Hardware stack levels required when called: 11
 15584 ;; This function calls:
 15585 ;;		Nothing
 15586 ;; This function is called by:
 15587 ;;		_SeqPresOn
 15588 ;;		_resetAndOff
 15589 ;; This function uses a non-reentrant model
 15590 ;;
 15591                           
 15592                           
 15593                           ;psect for function _rstPressOn
 15594  1000                     _rstPressOn:
 15595                           
 15596                           ;incstack = 0
 15597                           ; Regs used in _rstPressOn: [wreg+status,2]
 15598                           ;rstPressOn@start stored from wreg
 15599  1000  0020               	movlb	0	; select bank0
 15600  1001  00D2               	movwf	rstPressOn@start
 15601  1002                     l5483:
 15602                           
 15603                           ;main.c: 1196:     timPresOn = 0;
 15604  1002  01AE               	clrf	_timPresOn
 15605  1003  01AF               	clrf	_timPresOn+1
 15606  1004                     l5485:
 15607                           
 15608                           ;main.c: 1197:     flagPressOn = start;
 15609  1004  0852               	movf	rstPressOn@start,w
 15610  1005  00D1               	movwf	??_rstPressOn
 15611  1006  0851               	movf	??_rstPressOn,w
 15612  1007  0021               	movlb	1	; select bank1
 15613  1008  00E3               	movwf	_flagPressOn^(0+128)
 15614  1009                     l1273:
 15615  1009  0008               	return
 15616  100A                     __end_of_rstPressOn:
 15617                           
 15618                           	psect	text42
 15619  21BD                     __ptext42:	
 15620 ;; *************** function _rstPressOff *****************
 15621 ;; Defined at:
 15622 ;;		line 1224 in file "main.c"
 15623 ;; Parameters:    Size  Location     Type
 15624 ;;  start           1    wreg     unsigned char 
 15625 ;; Auto vars:     Size  Location     Type
 15626 ;;  start           1    5[BANK0 ] unsigned char 
 15627 ;; Return value:  Size  Location     Type
 15628 ;;                  1    wreg      void 
 15629 ;; Registers used:
 15630 ;;		wreg, status,2
 15631 ;; Tracked objects:
 15632 ;;		On entry : 0/0
 15633 ;;		On exit  : 0/0
 15634 ;;		Unchanged: 0/0
 15635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15637 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15638 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15639 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15640 ;;Total ram usage:        2 bytes
 15641 ;; Hardware stack levels used: 1
 15642 ;; Hardware stack levels required when called: 11
 15643 ;; This function calls:
 15644 ;;		Nothing
 15645 ;; This function is called by:
 15646 ;;		_resetAndOff
 15647 ;; This function uses a non-reentrant model
 15648 ;;
 15649                           
 15650                           
 15651                           ;psect for function _rstPressOff
 15652  21BD                     _rstPressOff:
 15653                           
 15654                           ;incstack = 0
 15655                           ; Regs used in _rstPressOff: [wreg+status,2]
 15656                           ;rstPressOff@start stored from wreg
 15657  21BD  0020               	movlb	0	; select bank0
 15658  21BE  00D2               	movwf	rstPressOff@start
 15659  21BF                     l5487:
 15660                           
 15661                           ;main.c: 1225:     timPresOff = 0;
 15662  21BF  01AC               	clrf	_timPresOff
 15663  21C0  01AD               	clrf	_timPresOff+1
 15664  21C1                     l5489:
 15665                           
 15666                           ;main.c: 1226:     flagPressOff = start;
 15667  21C1  0852               	movf	rstPressOff@start,w
 15668  21C2  00D1               	movwf	??_rstPressOff
 15669  21C3  0851               	movf	??_rstPressOff,w
 15670  21C4  0021               	movlb	1	; select bank1
 15671  21C5  00E2               	movwf	_flagPressOff^(0+128)
 15672  21C6                     l1282:
 15673  21C6  0008               	return
 15674  21C7                     __end_of_rstPressOff:
 15675                           
 15676                           	psect	text43
 15677  22DB                     __ptext43:	
 15678 ;; *************** function _rstMusik *****************
 15679 ;; Defined at:
 15680 ;;		line 1014 in file "main.c"
 15681 ;; Parameters:    Size  Location     Type
 15682 ;;  start           1    wreg     unsigned char 
 15683 ;; Auto vars:     Size  Location     Type
 15684 ;;  start           1    5[BANK0 ] unsigned char 
 15685 ;; Return value:  Size  Location     Type
 15686 ;;                  1    wreg      void 
 15687 ;; Registers used:
 15688 ;;		wreg, status,2
 15689 ;; Tracked objects:
 15690 ;;		On entry : 0/0
 15691 ;;		On exit  : 0/0
 15692 ;;		Unchanged: 0/0
 15693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15695 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15696 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15697 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15698 ;;Total ram usage:        2 bytes
 15699 ;; Hardware stack levels used: 1
 15700 ;; Hardware stack levels required when called: 11
 15701 ;; This function calls:
 15702 ;;		Nothing
 15703 ;; This function is called by:
 15704 ;;		_demoEfectOn
 15705 ;;		_musik
 15706 ;;		_resetAndOff
 15707 ;; This function uses a non-reentrant model
 15708 ;;
 15709                           
 15710                           
 15711                           ;psect for function _rstMusik
 15712  22DB                     _rstMusik:
 15713                           
 15714                           ;incstack = 0
 15715                           ; Regs used in _rstMusik: [wreg+status,2]
 15716                           ;rstMusik@start stored from wreg
 15717  22DB  0020               	movlb	0	; select bank0
 15718  22DC  00D2               	movwf	rstMusik@start
 15719  22DD                     l5469:
 15720                           
 15721                           ;main.c: 1015:     ritmCont = 0;
 15722  22DD  0021               	movlb	1	; select bank1
 15723  22DE  01B7               	clrf	_ritmCont^(0+128)
 15724  22DF  01B8               	clrf	(_ritmCont+1)^(0+128)
 15725  22E0                     l5471:
 15726                           
 15727                           ;main.c: 1016:     noteNum = -5;
 15728  22E0  30FB               	movlw	251
 15729  22E1  0020               	movlb	0	; select bank0
 15730  22E2  00D1               	movwf	??_rstMusik
 15731  22E3  0851               	movf	??_rstMusik,w
 15732  22E4  00B7               	movwf	_noteNum
 15733  22E5                     l5473:
 15734                           
 15735                           ;main.c: 1017:     stepsNote = 0;
 15736  22E5  01B9               	clrf	_stepsNote
 15737  22E6                     l5475:
 15738                           
 15739                           ;main.c: 1018:     noteOnTempo = 0;
 15740  22E6  01B8               	clrf	_noteOnTempo
 15741  22E7                     l5477:
 15742                           
 15743                           ;main.c: 1019:     musikRun = start;
 15744  22E7  0852               	movf	rstMusik@start,w
 15745  22E8  00D1               	movwf	??_rstMusik
 15746  22E9  0851               	movf	??_rstMusik,w
 15747  22EA  00BA               	movwf	_musikRun
 15748  22EB                     l1189:
 15749  22EB  0008               	return
 15750  22EC                     __end_of_rstMusik:
 15751                           
 15752                           	psect	text44
 15753  2243                     __ptext44:	
 15754 ;; *************** function _rstMaskOn *****************
 15755 ;; Defined at:
 15756 ;;		line 831 in file "main.c"
 15757 ;; Parameters:    Size  Location     Type
 15758 ;;  start           1    wreg     unsigned char 
 15759 ;; Auto vars:     Size  Location     Type
 15760 ;;  start           1    5[BANK0 ] unsigned char 
 15761 ;; Return value:  Size  Location     Type
 15762 ;;                  1    wreg      void 
 15763 ;; Registers used:
 15764 ;;		wreg, status,2
 15765 ;; Tracked objects:
 15766 ;;		On entry : 0/0
 15767 ;;		On exit  : 0/0
 15768 ;;		Unchanged: 0/0
 15769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15771 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15772 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15773 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15774 ;;Total ram usage:        2 bytes
 15775 ;; Hardware stack levels used: 1
 15776 ;; Hardware stack levels required when called: 11
 15777 ;; This function calls:
 15778 ;;		Nothing
 15779 ;; This function is called by:
 15780 ;;		_maskOn
 15781 ;;		_resetAndOff
 15782 ;; This function uses a non-reentrant model
 15783 ;;
 15784                           
 15785                           
 15786                           ;psect for function _rstMaskOn
 15787  2243                     _rstMaskOn:
 15788                           
 15789                           ;incstack = 0
 15790                           ; Regs used in _rstMaskOn: [wreg+status,2]
 15791                           ;rstMaskOn@start stored from wreg
 15792  2243  0020               	movlb	0	; select bank0
 15793  2244  00D2               	movwf	rstMaskOn@start
 15794  2245                     l5449:
 15795                           
 15796                           ;main.c: 832:     indexMaskOn = 0;
 15797  2245  0021               	movlb	1	; select bank1
 15798  2246  01C3               	clrf	_indexMaskOn^(0+128)
 15799  2247  01C4               	clrf	(_indexMaskOn+1)^(0+128)
 15800                           
 15801                           ;main.c: 833:     contTimMaskOn = 0;
 15802  2248  01C1               	clrf	_contTimMaskOn^(0+128)
 15803  2249  01C2               	clrf	(_contTimMaskOn+1)^(0+128)
 15804  224A                     l5451:
 15805                           
 15806                           ;main.c: 834:     runMaskOn = start;
 15807  224A  0020               	movlb	0	; select bank0
 15808  224B  0852               	movf	rstMaskOn@start,w
 15809  224C  00D1               	movwf	??_rstMaskOn
 15810  224D  0851               	movf	??_rstMaskOn,w
 15811  224E  0021               	movlb	1	; select bank1
 15812  224F  00DF               	movwf	_runMaskOn^(0+128)
 15813  2250                     l1107:
 15814  2250  0008               	return
 15815  2251                     __end_of_rstMaskOn:
 15816                           
 15817                           	psect	text45
 15818  220D                     __ptext45:	
 15819 ;; *************** function _rstMaskOff *****************
 15820 ;; Defined at:
 15821 ;;		line 852 in file "main.c"
 15822 ;; Parameters:    Size  Location     Type
 15823 ;;  start           1    wreg     unsigned char 
 15824 ;; Auto vars:     Size  Location     Type
 15825 ;;  start           1    5[BANK0 ] unsigned char 
 15826 ;; Return value:  Size  Location     Type
 15827 ;;                  1    wreg      void 
 15828 ;; Registers used:
 15829 ;;		wreg, status,2
 15830 ;; Tracked objects:
 15831 ;;		On entry : 0/0
 15832 ;;		On exit  : 0/0
 15833 ;;		Unchanged: 0/0
 15834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15836 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15837 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15838 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15839 ;;Total ram usage:        2 bytes
 15840 ;; Hardware stack levels used: 1
 15841 ;; Hardware stack levels required when called: 11
 15842 ;; This function calls:
 15843 ;;		Nothing
 15844 ;; This function is called by:
 15845 ;;		_maskOff
 15846 ;;		_resetAndOff
 15847 ;;		_maskOffOld
 15848 ;; This function uses a non-reentrant model
 15849 ;;
 15850                           
 15851                           
 15852                           ;psect for function _rstMaskOff
 15853  220D                     _rstMaskOff:
 15854                           
 15855                           ;incstack = 0
 15856                           ; Regs used in _rstMaskOff: [wreg+status,2]
 15857                           ;rstMaskOff@start stored from wreg
 15858  220D  0020               	movlb	0	; select bank0
 15859  220E  00D2               	movwf	rstMaskOff@start
 15860  220F                     l5453:
 15861                           
 15862                           ;main.c: 853:     contTimMaskOff = 0;
 15863  220F  0021               	movlb	1	; select bank1
 15864  2210  01BF               	clrf	_contTimMaskOff^(0+128)
 15865  2211  01C0               	clrf	(_contTimMaskOff+1)^(0+128)
 15866                           
 15867                           ;main.c: 854:     subContMaskOff = 0;
 15868  2212  0020               	movlb	0	; select bank0
 15869  2213  01C0               	clrf	_subContMaskOff
 15870                           
 15871                           ;main.c: 855:     indexMaskOff = 0;
 15872  2214  01C1               	clrf	_indexMaskOff
 15873  2215                     l5455:
 15874                           
 15875                           ;main.c: 856:     runMaskOff = start;
 15876  2215  0852               	movf	rstMaskOff@start,w
 15877  2216  00D1               	movwf	??_rstMaskOff
 15878  2217  0851               	movf	??_rstMaskOff,w
 15879  2218  00C2               	movwf	_runMaskOff
 15880  2219                     l1116:
 15881  2219  0008               	return
 15882  221A                     __end_of_rstMaskOff:
 15883                           
 15884                           	psect	text46
 15885  25A2                     __ptext46:	
 15886 ;; *************** function _rstDragon *****************
 15887 ;; Defined at:
 15888 ;;		line 742 in file "main.c"
 15889 ;; Parameters:    Size  Location     Type
 15890 ;;  start           1    wreg     unsigned char 
 15891 ;; Auto vars:     Size  Location     Type
 15892 ;;  start           1   16[BANK0 ] unsigned char 
 15893 ;;  i               1   17[BANK0 ] unsigned char 
 15894 ;; Return value:  Size  Location     Type
 15895 ;;                  1    wreg      void 
 15896 ;; Registers used:
 15897 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15898 ;; Tracked objects:
 15899 ;;		On entry : 0/0
 15900 ;;		On exit  : 0/0
 15901 ;;		Unchanged: 0/0
 15902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15904 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15905 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15906 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15907 ;;Total ram usage:        3 bytes
 15908 ;; Hardware stack levels used: 1
 15909 ;; Hardware stack levels required when called: 14
 15910 ;; This function calls:
 15911 ;;		_dragonCrashTool
 15912 ;; This function is called by:
 15913 ;;		_dragonCrash
 15914 ;;		_resetAndOff
 15915 ;; This function uses a non-reentrant model
 15916 ;;
 15917                           
 15918                           
 15919                           ;psect for function _rstDragon
 15920  25A2                     _rstDragon:
 15921                           
 15922                           ;incstack = 0
 15923 ;; hardware stack exceeded
 15924                           ; Regs used in _rstDragon: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15925                           ;rstDragon@start stored from wreg
 15926  25A2  0020               	movlb	0	; select bank0
 15927  25A3  00DD               	movwf	rstDragon@start
 15928  25A4                     l5407:
 15929                           
 15930                           ;main.c: 743:     char i = 0;
 15931  25A4  01DE               	clrf	rstDragon@i
 15932                           
 15933                           ;main.c: 744:     for(i = 0; i < 15; i++) {
 15934  25A5  01DE               	clrf	rstDragon@i
 15935  25A6                     l5413:
 15936                           
 15937                           ;main.c: 745:         intensityArray[i] = 255;
 15938  25A6  30FF               	movlw	255
 15939  25A7  00DC               	movwf	??_rstDragon
 15940  25A8  085E               	movf	rstDragon@i,w
 15941  25A9  3E38               	addlw	(low (_intensityArray| (0+256)))& (0+255)
 15942  25AA  0086               	movwf	6
 15943  25AB  3001               	movlw	1	; select bank2/3
 15944  25AC  0087               	movwf	7
 15945  25AD  085C               	movf	??_rstDragon,w
 15946  25AE  0081               	movwf	1
 15947                           
 15948                           ;main.c: 746:         dragonArray[i] = 0;
 15949  25AF  085E               	movf	rstDragon@i,w
 15950  25B0  3E47               	addlw	(low (_dragonArray| (0+256)))& (0+255)
 15951  25B1  0086               	movwf	6
 15952  25B2  3001               	movlw	1	; select bank2/3
 15953  25B3  0087               	movwf	7
 15954  25B4  0181               	clrf	1
 15955  25B5                     l5415:
 15956                           
 15957                           ;main.c: 747:         dragonCrashTool();
 15958  25B5  3190  2084  31A5   	fcall	_dragonCrashTool
 15959  25B8                     l5417:
 15960                           
 15961                           ;main.c: 748:     }
 15962  25B8  3001               	movlw	1
 15963  25B9  0020               	movlb	0	; select bank0
 15964  25BA  00DC               	movwf	??_rstDragon
 15965  25BB  085C               	movf	??_rstDragon,w
 15966  25BC  07DE               	addwf	rstDragon@i,f
 15967  25BD                     l5419:
 15968  25BD  300F               	movlw	15
 15969  25BE  025E               	subwf	rstDragon@i,w
 15970  25BF  1C03               	skipc
 15971  25C0  2DC2               	goto	u3561
 15972  25C1  2DC3               	goto	u3560
 15973  25C2                     u3561:
 15974  25C2  2DA6               	goto	l5413
 15975  25C3                     u3560:
 15976  25C3                     l5421:
 15977                           
 15978                           ;main.c: 749:     intensityCrash = 255;
 15979  25C3  30FF               	movlw	255
 15980  25C4  00A8               	movwf	_intensityCrash
 15981  25C5  3000               	movlw	0
 15982  25C6  00A9               	movwf	_intensityCrash+1
 15983  25C7                     l5423:
 15984                           
 15985                           ;main.c: 750:     subContCrash = 0;
 15986  25C7  01BC               	clrf	_subContCrash
 15987  25C8                     l5425:
 15988                           
 15989                           ;main.c: 751:     indexCrash = 0;
 15990  25C8  01BD               	clrf	_indexCrash
 15991  25C9                     l5427:
 15992                           
 15993                           ;main.c: 752:     contCrash = 0;
 15994  25C9  0021               	movlb	1	; select bank1
 15995  25CA  01BB               	clrf	_contCrash^(0+128)
 15996  25CB  01BC               	clrf	(_contCrash+1)^(0+128)
 15997  25CC                     l5429:
 15998                           
 15999                           ;main.c: 753:     runCrash = start;
 16000  25CC  0020               	movlb	0	; select bank0
 16001  25CD  085D               	movf	rstDragon@start,w
 16002  25CE  00DC               	movwf	??_rstDragon
 16003  25CF  085C               	movf	??_rstDragon,w
 16004  25D0  0021               	movlb	1	; select bank1
 16005  25D1  00DD               	movwf	_runCrash^(0+128)
 16006  25D2                     l1070:
 16007  25D2  0008               	return
 16008  25D3                     __end_of_rstDragon:
 16009                           
 16010                           	psect	text47
 16011  1084                     __ptext47:	
 16012 ;; *************** function _dragonCrashTool *****************
 16013 ;; Defined at:
 16014 ;;		line 724 in file "main.c"
 16015 ;; Parameters:    Size  Location     Type
 16016 ;;		None
 16017 ;; Auto vars:     Size  Location     Type
 16018 ;;		None
 16019 ;; Return value:  Size  Location     Type
 16020 ;;                  1    wreg      void 
 16021 ;; Registers used:
 16022 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16023 ;; Tracked objects:
 16024 ;;		On entry : 0/0
 16025 ;;		On exit  : 0/0
 16026 ;;		Unchanged: 0/0
 16027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16030 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16031 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16032 ;;Total ram usage:        2 bytes
 16033 ;; Hardware stack levels used: 1
 16034 ;; Hardware stack levels required when called: 13
 16035 ;; This function calls:
 16036 ;;		_applyColor
 16037 ;; This function is called by:
 16038 ;;		_rstDragon
 16039 ;;		_dragonCrash
 16040 ;; This function uses a non-reentrant model
 16041 ;;
 16042                           
 16043                           
 16044                           ;psect for function _dragonCrashTool
 16045  1084                     _dragonCrashTool:
 16046  1084                     l5245:	
 16047                           ;incstack = 0
 16048 ;; hardware stack exceeded
 16049                           ; Regs used in _dragonCrashTool: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16050                           
 16051                           
 16052                           ;main.c: 725:     applyColor(6, dragonArray[0], intensityArray[0]);
 16053  1084  0022               	movlb	2	; select bank2
 16054  1085  0847               	movf	_dragonArray^(0+256),w
 16055  1086  0020               	movlb	0	; select bank0
 16056  1087  00DA               	movwf	??_dragonCrashTool
 16057  1088  085A               	movf	??_dragonCrashTool,w
 16058  1089  00D6               	movwf	applyColor@color
 16059  108A  0022               	movlb	2	; select bank2
 16060  108B  0838               	movf	_intensityArray^(0+256),w
 16061  108C  0020               	movlb	0	; select bank0
 16062  108D  00DB               	movwf	??_dragonCrashTool+1
 16063  108E  085B               	movf	??_dragonCrashTool+1,w
 16064  108F  00D7               	movwf	applyColor@intensity
 16065  1090  3006               	movlw	6
 16066  1091  31A3  235E  3190   	fcall	_applyColor
 16067                           
 16068                           ;main.c: 726:     applyColor(4, dragonArray[1], intensityArray[1]);
 16069  1094  0022               	movlb	2	; select bank2
 16070  1095  0848               	movf	(_dragonArray^(0+256)+1),w
 16071  1096  0020               	movlb	0	; select bank0
 16072  1097  00DA               	movwf	??_dragonCrashTool
 16073  1098  085A               	movf	??_dragonCrashTool,w
 16074  1099  00D6               	movwf	applyColor@color
 16075  109A  0022               	movlb	2	; select bank2
 16076  109B  0839               	movf	(_intensityArray^(0+256)+1),w
 16077  109C  0020               	movlb	0	; select bank0
 16078  109D  00DB               	movwf	??_dragonCrashTool+1
 16079  109E  085B               	movf	??_dragonCrashTool+1,w
 16080  109F  00D7               	movwf	applyColor@intensity
 16081  10A0  3004               	movlw	4
 16082  10A1  31A3  235E  3190   	fcall	_applyColor
 16083                           
 16084                           ;main.c: 727:     applyColor(8, dragonArray[2], intensityArray[2]);
 16085  10A4  0022               	movlb	2	; select bank2
 16086  10A5  0849               	movf	(_dragonArray^(0+256)+2),w
 16087  10A6  0020               	movlb	0	; select bank0
 16088  10A7  00DA               	movwf	??_dragonCrashTool
 16089  10A8  085A               	movf	??_dragonCrashTool,w
 16090  10A9  00D6               	movwf	applyColor@color
 16091  10AA  0022               	movlb	2	; select bank2
 16092  10AB  083A               	movf	(_intensityArray^(0+256)+2),w
 16093  10AC  0020               	movlb	0	; select bank0
 16094  10AD  00DB               	movwf	??_dragonCrashTool+1
 16095  10AE  085B               	movf	??_dragonCrashTool+1,w
 16096  10AF  00D7               	movwf	applyColor@intensity
 16097  10B0  3008               	movlw	8
 16098  10B1  31A3  235E  3190   	fcall	_applyColor
 16099                           
 16100                           ;main.c: 728:     applyColor(10, dragonArray[3], intensityArray[3]);
 16101  10B4  0022               	movlb	2	; select bank2
 16102  10B5  084A               	movf	(_dragonArray^(0+256)+3),w
 16103  10B6  0020               	movlb	0	; select bank0
 16104  10B7  00DA               	movwf	??_dragonCrashTool
 16105  10B8  085A               	movf	??_dragonCrashTool,w
 16106  10B9  00D6               	movwf	applyColor@color
 16107  10BA  0022               	movlb	2	; select bank2
 16108  10BB  083B               	movf	(_intensityArray^(0+256)+3),w
 16109  10BC  0020               	movlb	0	; select bank0
 16110  10BD  00DB               	movwf	??_dragonCrashTool+1
 16111  10BE  085B               	movf	??_dragonCrashTool+1,w
 16112  10BF  00D7               	movwf	applyColor@intensity
 16113  10C0  300A               	movlw	10
 16114  10C1  31A3  235E  3190   	fcall	_applyColor
 16115                           
 16116                           ;main.c: 729:     applyColor(14, dragonArray[4], intensityArray[4]);
 16117  10C4  0022               	movlb	2	; select bank2
 16118  10C5  084B               	movf	(_dragonArray^(0+256)+4),w
 16119  10C6  0020               	movlb	0	; select bank0
 16120  10C7  00DA               	movwf	??_dragonCrashTool
 16121  10C8  085A               	movf	??_dragonCrashTool,w
 16122  10C9  00D6               	movwf	applyColor@color
 16123  10CA  0022               	movlb	2	; select bank2
 16124  10CB  083C               	movf	(_intensityArray^(0+256)+4),w
 16125  10CC  0020               	movlb	0	; select bank0
 16126  10CD  00DB               	movwf	??_dragonCrashTool+1
 16127  10CE  085B               	movf	??_dragonCrashTool+1,w
 16128  10CF  00D7               	movwf	applyColor@intensity
 16129  10D0  300E               	movlw	14
 16130  10D1  31A3  235E  3190   	fcall	_applyColor
 16131                           
 16132                           ;main.c: 730:     applyColor(20, dragonArray[5], intensityArray[5]);
 16133  10D4  0022               	movlb	2	; select bank2
 16134  10D5  084C               	movf	(_dragonArray^(0+256)+5),w
 16135  10D6  0020               	movlb	0	; select bank0
 16136  10D7  00DA               	movwf	??_dragonCrashTool
 16137  10D8  085A               	movf	??_dragonCrashTool,w
 16138  10D9  00D6               	movwf	applyColor@color
 16139  10DA  0022               	movlb	2	; select bank2
 16140  10DB  083D               	movf	(_intensityArray^(0+256)+5),w
 16141  10DC  0020               	movlb	0	; select bank0
 16142  10DD  00DB               	movwf	??_dragonCrashTool+1
 16143  10DE  085B               	movf	??_dragonCrashTool+1,w
 16144  10DF  00D7               	movwf	applyColor@intensity
 16145  10E0  3014               	movlw	20
 16146  10E1  31A3  235E  3190   	fcall	_applyColor
 16147  10E4                     l5247:
 16148                           
 16149                           ;main.c: 731:     NeckBR[0] = intensityArray[6]; NeckBRcolor[0] = dragonArray[6];
 16150  10E4  0022               	movlb	2	; select bank2
 16151  10E5  083E               	movf	(_intensityArray^(0+256)+6),w
 16152  10E6  0020               	movlb	0	; select bank0
 16153  10E7  00DA               	movwf	??_dragonCrashTool
 16154  10E8  085A               	movf	??_dragonCrashTool,w
 16155  10E9  0021               	movlb	1	; select bank1
 16156  10EA  00B0               	movwf	_NeckBR^(0+128)
 16157  10EB                     l5249:
 16158  10EB  0022               	movlb	2	; select bank2
 16159  10EC  084D               	movf	(_dragonArray^(0+256)+6),w
 16160  10ED  0020               	movlb	0	; select bank0
 16161  10EE  00DA               	movwf	??_dragonCrashTool
 16162  10EF  085A               	movf	??_dragonCrashTool,w
 16163  10F0  0021               	movlb	1	; select bank1
 16164  10F1  00AC               	movwf	_NeckBRcolor^(0+128)
 16165                           
 16166                           ;main.c: 732:     applyColor(16, dragonArray[7], intensityArray[7]);
 16167  10F2  0022               	movlb	2	; select bank2
 16168  10F3  084E               	movf	(_dragonArray^(0+256)+7),w
 16169  10F4  0020               	movlb	0	; select bank0
 16170  10F5  00DA               	movwf	??_dragonCrashTool
 16171  10F6  085A               	movf	??_dragonCrashTool,w
 16172  10F7  00D6               	movwf	applyColor@color
 16173  10F8  0022               	movlb	2	; select bank2
 16174  10F9  083F               	movf	(_intensityArray^(0+256)+7),w
 16175  10FA  0020               	movlb	0	; select bank0
 16176  10FB  00DB               	movwf	??_dragonCrashTool+1
 16177  10FC  085B               	movf	??_dragonCrashTool+1,w
 16178  10FD  00D7               	movwf	applyColor@intensity
 16179  10FE  3010               	movlw	16
 16180  10FF  31A3  235E  3190   	fcall	_applyColor
 16181  1102                     l5251:
 16182                           
 16183                           ;main.c: 733:     NeckBR[1] = intensityArray[8]; NeckBRcolor[1] = dragonArray[8];
 16184  1102  0022               	movlb	2	; select bank2
 16185  1103  0840               	movf	(_intensityArray^(0+256)+8),w
 16186  1104  0020               	movlb	0	; select bank0
 16187  1105  00DA               	movwf	??_dragonCrashTool
 16188  1106  085A               	movf	??_dragonCrashTool,w
 16189  1107  0021               	movlb	1	; select bank1
 16190  1108  00B1               	movwf	(_NeckBR^(0+128)+1)
 16191  1109                     l5253:
 16192  1109  0022               	movlb	2	; select bank2
 16193  110A  084F               	movf	(_dragonArray^(0+256)+8),w
 16194  110B  0020               	movlb	0	; select bank0
 16195  110C  00DA               	movwf	??_dragonCrashTool
 16196  110D  085A               	movf	??_dragonCrashTool,w
 16197  110E  0021               	movlb	1	; select bank1
 16198  110F  00AD               	movwf	(_NeckBRcolor^(0+128)+1)
 16199                           
 16200                           ;main.c: 734:     applyColor(18, dragonArray[9], intensityArray[9]);
 16201  1110  0022               	movlb	2	; select bank2
 16202  1111  0850               	movf	(_dragonArray^(0+256)+9),w
 16203  1112  0020               	movlb	0	; select bank0
 16204  1113  00DA               	movwf	??_dragonCrashTool
 16205  1114  085A               	movf	??_dragonCrashTool,w
 16206  1115  00D6               	movwf	applyColor@color
 16207  1116  0022               	movlb	2	; select bank2
 16208  1117  0841               	movf	(_intensityArray^(0+256)+9),w
 16209  1118  0020               	movlb	0	; select bank0
 16210  1119  00DB               	movwf	??_dragonCrashTool+1
 16211  111A  085B               	movf	??_dragonCrashTool+1,w
 16212  111B  00D7               	movwf	applyColor@intensity
 16213  111C  3012               	movlw	18
 16214  111D  31A3  235E  3190   	fcall	_applyColor
 16215  1120                     l5255:
 16216                           
 16217                           ;main.c: 735:     NeckBR[2] = intensityArray[10]; NeckBRcolor[2] = dragonArray[10];
 16218  1120  0022               	movlb	2	; select bank2
 16219  1121  0842               	movf	(_intensityArray^(0+256)+10),w
 16220  1122  0020               	movlb	0	; select bank0
 16221  1123  00DA               	movwf	??_dragonCrashTool
 16222  1124  085A               	movf	??_dragonCrashTool,w
 16223  1125  0021               	movlb	1	; select bank1
 16224  1126  00B2               	movwf	(_NeckBR^(0+128)+2)
 16225  1127                     l5257:
 16226  1127  0022               	movlb	2	; select bank2
 16227  1128  0851               	movf	(_dragonArray^(0+256)+10),w
 16228  1129  0020               	movlb	0	; select bank0
 16229  112A  00DA               	movwf	??_dragonCrashTool
 16230  112B  085A               	movf	??_dragonCrashTool,w
 16231  112C  0021               	movlb	1	; select bank1
 16232  112D  00AE               	movwf	(_NeckBRcolor^(0+128)+2)
 16233                           
 16234                           ;main.c: 736:     applyColor(24, dragonArray[11], intensityArray[11]);
 16235  112E  0022               	movlb	2	; select bank2
 16236  112F  0852               	movf	(_dragonArray^(0+256)+11),w
 16237  1130  0020               	movlb	0	; select bank0
 16238  1131  00DA               	movwf	??_dragonCrashTool
 16239  1132  085A               	movf	??_dragonCrashTool,w
 16240  1133  00D6               	movwf	applyColor@color
 16241  1134  0022               	movlb	2	; select bank2
 16242  1135  0843               	movf	(_intensityArray^(0+256)+11),w
 16243  1136  0020               	movlb	0	; select bank0
 16244  1137  00DB               	movwf	??_dragonCrashTool+1
 16245  1138  085B               	movf	??_dragonCrashTool+1,w
 16246  1139  00D7               	movwf	applyColor@intensity
 16247  113A  3018               	movlw	24
 16248  113B  31A3  235E  3190   	fcall	_applyColor
 16249  113E                     l5259:
 16250                           
 16251                           ;main.c: 737:     NeckBR[3] = intensityArray[12]; NeckBRcolor[3] = dragonArray[12];
 16252  113E  0022               	movlb	2	; select bank2
 16253  113F  0844               	movf	(_intensityArray^(0+256)+12),w
 16254  1140  0020               	movlb	0	; select bank0
 16255  1141  00DA               	movwf	??_dragonCrashTool
 16256  1142  085A               	movf	??_dragonCrashTool,w
 16257  1143  0021               	movlb	1	; select bank1
 16258  1144  00B3               	movwf	(_NeckBR^(0+128)+3)
 16259  1145                     l5261:
 16260  1145  0022               	movlb	2	; select bank2
 16261  1146  0853               	movf	(_dragonArray^(0+256)+12),w
 16262  1147  0020               	movlb	0	; select bank0
 16263  1148  00DA               	movwf	??_dragonCrashTool
 16264  1149  085A               	movf	??_dragonCrashTool,w
 16265  114A  0021               	movlb	1	; select bank1
 16266  114B  00AF               	movwf	(_NeckBRcolor^(0+128)+3)
 16267                           
 16268                           ;main.c: 738:     applyColor(26, dragonArray[13], intensityArray[13]);
 16269  114C  0022               	movlb	2	; select bank2
 16270  114D  0854               	movf	(_dragonArray^(0+256)+13),w
 16271  114E  0020               	movlb	0	; select bank0
 16272  114F  00DA               	movwf	??_dragonCrashTool
 16273  1150  085A               	movf	??_dragonCrashTool,w
 16274  1151  00D6               	movwf	applyColor@color
 16275  1152  0022               	movlb	2	; select bank2
 16276  1153  0845               	movf	(_intensityArray^(0+256)+13),w
 16277  1154  0020               	movlb	0	; select bank0
 16278  1155  00DB               	movwf	??_dragonCrashTool+1
 16279  1156  085B               	movf	??_dragonCrashTool+1,w
 16280  1157  00D7               	movwf	applyColor@intensity
 16281  1158  301A               	movlw	26
 16282  1159  31A3  235E  3190   	fcall	_applyColor
 16283                           
 16284                           ;main.c: 739:     applyColor(28, dragonArray[14], intensityArray[14]);
 16285  115C  0022               	movlb	2	; select bank2
 16286  115D  0855               	movf	(_dragonArray^(0+256)+14),w
 16287  115E  0020               	movlb	0	; select bank0
 16288  115F  00DA               	movwf	??_dragonCrashTool
 16289  1160  085A               	movf	??_dragonCrashTool,w
 16290  1161  00D6               	movwf	applyColor@color
 16291  1162  0022               	movlb	2	; select bank2
 16292  1163  0846               	movf	(_intensityArray^(0+256)+14),w
 16293  1164  0020               	movlb	0	; select bank0
 16294  1165  00DB               	movwf	??_dragonCrashTool+1
 16295  1166  085B               	movf	??_dragonCrashTool+1,w
 16296  1167  00D7               	movwf	applyColor@intensity
 16297  1168  301C               	movlw	28
 16298  1169  31A3  235E  3190   	fcall	_applyColor
 16299  116C                     l1065:
 16300  116C  0008               	return
 16301  116D                     __end_of_dragonCrashTool:
 16302                           
 16303                           	psect	text48
 16304  21D2                     __ptext48:	
 16305 ;; *************** function _rstDemoOn *****************
 16306 ;; Defined at:
 16307 ;;		line 987 in file "main.c"
 16308 ;; Parameters:    Size  Location     Type
 16309 ;;  start           1    wreg     unsigned char 
 16310 ;; Auto vars:     Size  Location     Type
 16311 ;;  start           1    5[BANK0 ] unsigned char 
 16312 ;; Return value:  Size  Location     Type
 16313 ;;                  1    wreg      void 
 16314 ;; Registers used:
 16315 ;;		wreg, status,2
 16316 ;; Tracked objects:
 16317 ;;		On entry : 0/0
 16318 ;;		On exit  : 0/0
 16319 ;;		Unchanged: 0/0
 16320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16322 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16323 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16324 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16325 ;;Total ram usage:        2 bytes
 16326 ;; Hardware stack levels used: 1
 16327 ;; Hardware stack levels required when called: 11
 16328 ;; This function calls:
 16329 ;;		Nothing
 16330 ;; This function is called by:
 16331 ;;		_demoEfectOn
 16332 ;;		_resetAndOff
 16333 ;; This function uses a non-reentrant model
 16334 ;;
 16335                           
 16336                           
 16337                           ;psect for function _rstDemoOn
 16338  21D2                     _rstDemoOn:
 16339                           
 16340                           ;incstack = 0
 16341                           ; Regs used in _rstDemoOn: [wreg+status,2]
 16342                           ;rstDemoOn@start stored from wreg
 16343  21D2  0020               	movlb	0	; select bank0
 16344  21D3  00D2               	movwf	rstDemoOn@start
 16345  21D4                     l5457:
 16346                           
 16347                           ;main.c: 988:     timDemoOn = 0;
 16348  21D4  0021               	movlb	1	; select bank1
 16349  21D5  01C5               	clrf	_timDemoOn^(0+128)
 16350  21D6  01C6               	clrf	(_timDemoOn+1)^(0+128)
 16351  21D7                     l5459:
 16352                           
 16353                           ;main.c: 989:     flagDemoOn = start;
 16354  21D7  0020               	movlb	0	; select bank0
 16355  21D8  0852               	movf	rstDemoOn@start,w
 16356  21D9  00D1               	movwf	??_rstDemoOn
 16357  21DA  0851               	movf	??_rstDemoOn,w
 16358  21DB  00C3               	movwf	_flagDemoOn
 16359  21DC                     l1177:
 16360  21DC  0008               	return
 16361  21DD                     __end_of_rstDemoOn:
 16362                           
 16363                           	psect	text49
 16364  21B3                     __ptext49:	
 16365 ;; *************** function _rstDemoOff *****************
 16366 ;; Defined at:
 16367 ;;		line 1149 in file "main.c"
 16368 ;; Parameters:    Size  Location     Type
 16369 ;;  start           1    wreg     unsigned char 
 16370 ;; Auto vars:     Size  Location     Type
 16371 ;;  start           1    5[BANK0 ] unsigned char 
 16372 ;; Return value:  Size  Location     Type
 16373 ;;                  1    wreg      void 
 16374 ;; Registers used:
 16375 ;;		wreg, status,2
 16376 ;; Tracked objects:
 16377 ;;		On entry : 0/0
 16378 ;;		On exit  : 0/0
 16379 ;;		Unchanged: 0/0
 16380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16382 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16383 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16384 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16385 ;;Total ram usage:        2 bytes
 16386 ;; Hardware stack levels used: 1
 16387 ;; Hardware stack levels required when called: 11
 16388 ;; This function calls:
 16389 ;;		Nothing
 16390 ;; This function is called by:
 16391 ;;		_resetAndOff
 16392 ;;		_butt3Pres
 16393 ;; This function uses a non-reentrant model
 16394 ;;
 16395                           
 16396                           
 16397                           ;psect for function _rstDemoOff
 16398  21B3                     _rstDemoOff:
 16399                           
 16400                           ;incstack = 0
 16401                           ; Regs used in _rstDemoOff: [wreg+status,2]
 16402                           ;rstDemoOff@start stored from wreg
 16403  21B3  0020               	movlb	0	; select bank0
 16404  21B4  00D2               	movwf	rstDemoOff@start
 16405  21B5                     l5479:
 16406                           
 16407                           ;main.c: 1150:     timDemoOff = 0;
 16408  21B5  01AA               	clrf	_timDemoOff
 16409  21B6  01AB               	clrf	_timDemoOff+1
 16410  21B7                     l5481:
 16411                           
 16412                           ;main.c: 1151:     flagDemoOff = start;
 16413  21B7  0852               	movf	rstDemoOff@start,w
 16414  21B8  00D1               	movwf	??_rstDemoOff
 16415  21B9  0851               	movf	??_rstDemoOff,w
 16416  21BA  0021               	movlb	1	; select bank1
 16417  21BB  00E1               	movwf	_flagDemoOff^(0+128)
 16418  21BC                     l1250:
 16419  21BC  0008               	return
 16420  21BD                     __end_of_rstDemoOff:
 16421                           
 16422                           	psect	text50
 16423  24A5                     __ptext50:	
 16424 ;; *************** function _allBodyVal *****************
 16425 ;; Defined at:
 16426 ;;		line 1299 in file "main.c"
 16427 ;; Parameters:    Size  Location     Type
 16428 ;;  val             1    wreg     unsigned char 
 16429 ;;  color           1   13[BANK0 ] unsigned char 
 16430 ;; Auto vars:     Size  Location     Type
 16431 ;;  val             1   16[BANK0 ] unsigned char 
 16432 ;;  i               1   17[BANK0 ] unsigned char 
 16433 ;; Return value:  Size  Location     Type
 16434 ;;                  1    wreg      void 
 16435 ;; Registers used:
 16436 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16437 ;; Tracked objects:
 16438 ;;		On entry : 0/0
 16439 ;;		On exit  : 0/0
 16440 ;;		Unchanged: 0/0
 16441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16442 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16443 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16444 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16445 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16446 ;;Total ram usage:        5 bytes
 16447 ;; Hardware stack levels used: 1
 16448 ;; Hardware stack levels required when called: 13
 16449 ;; This function calls:
 16450 ;;		_applyColor
 16451 ;; This function is called by:
 16452 ;;		_demoEfectOn
 16453 ;;		_demoEfectOff
 16454 ;;		_resetAndOff
 16455 ;; This function uses a non-reentrant model
 16456 ;;
 16457                           
 16458                           
 16459                           ;psect for function _allBodyVal
 16460  24A5                     _allBodyVal:
 16461                           
 16462                           ;incstack = 0
 16463                           ; Regs used in _allBodyVal: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16464                           ;allBodyVal@val stored from wreg
 16465  24A5  0020               	movlb	0	; select bank0
 16466  24A6  00DD               	movwf	allBodyVal@val
 16467  24A7                     l5461:
 16468                           
 16469                           ;main.c: 1300:     char i = 0;
 16470  24A7  01DE               	clrf	allBodyVal@i
 16471                           
 16472                           ;main.c: 1301:     for(i = 0; i < groupCant; i++)
 16473  24A8  01DE               	clrf	allBodyVal@i
 16474  24A9  2CBB               	goto	l5467
 16475  24AA                     l5463:
 16476                           
 16477                           ;main.c: 1302:         applyColor(i, color, val);
 16478  24AA  085A               	movf	allBodyVal@color,w
 16479  24AB  00DB               	movwf	??_allBodyVal
 16480  24AC  085B               	movf	??_allBodyVal,w
 16481  24AD  00D6               	movwf	applyColor@color
 16482  24AE  085D               	movf	allBodyVal@val,w
 16483  24AF  00DC               	movwf	??_allBodyVal+1
 16484  24B0  085C               	movf	??_allBodyVal+1,w
 16485  24B1  00D7               	movwf	applyColor@intensity
 16486  24B2  085E               	movf	allBodyVal@i,w
 16487  24B3  31A3  235E  31A4   	fcall	_applyColor
 16488  24B6                     l5465:
 16489  24B6  3001               	movlw	1
 16490  24B7  0020               	movlb	0	; select bank0
 16491  24B8  00DB               	movwf	??_allBodyVal
 16492  24B9  085B               	movf	??_allBodyVal,w
 16493  24BA  07DE               	addwf	allBodyVal@i,f
 16494  24BB                     l5467:
 16495  24BB  086B               	movf	_groupCant,w
 16496  24BC  025E               	subwf	allBodyVal@i,w
 16497  24BD  1C03               	skipc
 16498  24BE  2CC0               	goto	u3581
 16499  24BF  2CC1               	goto	u3580
 16500  24C0                     u3581:
 16501  24C0  2CAA               	goto	l5463
 16502  24C1                     u3580:
 16503  24C1                     l1305:
 16504  24C1  0008               	return
 16505  24C2                     __end_of_allBodyVal:
 16506                           
 16507                           	psect	text51
 16508  235E                     __ptext51:	
 16509 ;; *************** function _applyColor *****************
 16510 ;; Defined at:
 16511 ;;		line 1288 in file "main.c"
 16512 ;; Parameters:    Size  Location     Type
 16513 ;;  group           1    wreg     unsigned char 
 16514 ;;  color           1    9[BANK0 ] unsigned char 
 16515 ;;  intensity       1   10[BANK0 ] unsigned char 
 16516 ;; Auto vars:     Size  Location     Type
 16517 ;;  group           1   12[BANK0 ] unsigned char 
 16518 ;; Return value:  Size  Location     Type
 16519 ;;                  1    wreg      void 
 16520 ;; Registers used:
 16521 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16522 ;; Tracked objects:
 16523 ;;		On entry : 0/0
 16524 ;;		On exit  : 0/0
 16525 ;;		Unchanged: 0/0
 16526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16527 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16528 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16529 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16530 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16531 ;;Total ram usage:        4 bytes
 16532 ;; Hardware stack levels used: 1
 16533 ;; Hardware stack levels required when called: 12
 16534 ;; This function calls:
 16535 ;;		_val2group
 16536 ;; This function is called by:
 16537 ;;		_initArrays
 16538 ;;		_dragonCrashTool
 16539 ;;		_refriShoulderTool
 16540 ;;		_allBodyVal
 16541 ;; This function uses a non-reentrant model
 16542 ;;
 16543                           
 16544                           
 16545                           ;psect for function _applyColor
 16546  235E                     _applyColor:
 16547                           
 16548                           ;incstack = 0
 16549 ;; hardware stack exceeded
 16550                           ; Regs used in _applyColor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16551                           ;applyColor@group stored from wreg
 16552  235E  0020               	movlb	0	; select bank0
 16553  235F  00D9               	movwf	applyColor@group
 16554  2360                     l5119:
 16555                           
 16556                           ;main.c: 1289:     groupColor[group] = color;
 16557  2360  0856               	movf	applyColor@color,w
 16558  2361  00D8               	movwf	??_applyColor
 16559  2362  0859               	movf	applyColor@group,w
 16560  2363  3EA0               	addlw	(low (_groupColor| (0+768)))& (0+255)
 16561  2364  0086               	movwf	6
 16562  2365  3003               	movlw	3	; select bank7/8
 16563  2366  0087               	movwf	7
 16564  2367  0858               	movf	??_applyColor,w
 16565  2368  0081               	movwf	1
 16566  2369                     l5121:
 16567                           
 16568                           ;main.c: 1290:     val2group(group, intensity);
 16569  2369  0857               	movf	applyColor@intensity,w
 16570  236A  00D8               	movwf	??_applyColor
 16571  236B  0858               	movf	??_applyColor,w
 16572  236C  00D1               	movwf	val2group@val
 16573  236D  0859               	movf	applyColor@group,w
 16574  236E  3196  2662  31A3   	fcall	_val2group
 16575  2371                     l1294:
 16576  2371  0008               	return
 16577  2372                     __end_of_applyColor:
 16578                           
 16579                           	psect	text52
 16580  1662                     __ptext52:	
 16581 ;; *************** function _val2group *****************
 16582 ;; Defined at:
 16583 ;;		line 301 in file "main.c"
 16584 ;; Parameters:    Size  Location     Type
 16585 ;;  groupID         1    wreg     unsigned char 
 16586 ;;  val             1    4[BANK0 ] unsigned char 
 16587 ;; Auto vars:     Size  Location     Type
 16588 ;;  groupID         1    7[BANK0 ] unsigned char 
 16589 ;;  i               1    8[BANK0 ] unsigned char 
 16590 ;; Return value:  Size  Location     Type
 16591 ;;                  1    wreg      void 
 16592 ;; Registers used:
 16593 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 16594 ;; Tracked objects:
 16595 ;;		On entry : 0/0
 16596 ;;		On exit  : 0/0
 16597 ;;		Unchanged: 0/0
 16598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16599 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16600 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16601 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16602 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16603 ;;Total ram usage:        5 bytes
 16604 ;; Hardware stack levels used: 1
 16605 ;; Hardware stack levels required when called: 11
 16606 ;; This function calls:
 16607 ;;		Nothing
 16608 ;; This function is called by:
 16609 ;;		_translateShadows
 16610 ;;		_maskOn
 16611 ;;		_maskOff
 16612 ;;		_musik
 16613 ;;		_seqApply
 16614 ;;		_applyColor
 16615 ;;		_maskOffOld
 16616 ;; This function uses a non-reentrant model
 16617 ;;
 16618                           
 16619                           
 16620                           ;psect for function _val2group
 16621  1662                     _val2group:
 16622                           
 16623                           ;incstack = 0
 16624 ;; hardware stack exceeded
 16625                           ; Regs used in _val2group: [wreg-fsr1h+status,2+status,0]
 16626                           ;val2group@groupID stored from wreg
 16627  1662  0020               	movlb	0	; select bank0
 16628  1663  00D4               	movwf	val2group@groupID
 16629  1664                     l4957:
 16630                           
 16631                           ;main.c: 302:     char i = 0;
 16632  1664  01D5               	clrf	val2group@i
 16633                           
 16634                           ;main.c: 303:     for(i = 0; i < groupSize[groupID]; i++) {
 16635  1665  01D5               	clrf	val2group@i
 16636  1666  2FEB               	goto	l5023
 16637  1667                     l4959:
 16638                           
 16639                           ;main.c: 306:             State[i] = val;
 16640  1667  0851               	movf	val2group@val,w
 16641  1668  00D2               	movwf	??_val2group
 16642  1669  0855               	movf	val2group@i,w
 16643  166A  3E36               	addlw	(low (_State| 0))& (0+255)
 16644  166B  0086               	movwf	6
 16645  166C  0187               	clrf	7
 16646  166D  0852               	movf	??_val2group,w
 16647  166E  0081               	movwf	1
 16648                           
 16649                           ;main.c: 307:             break;
 16650  166F  2FE7               	goto	l5021
 16651  1670                     l4961:
 16652                           
 16653                           ;main.c: 309:             Mask[i] = val;
 16654  1670  0851               	movf	val2group@val,w
 16655  1671  00D2               	movwf	??_val2group
 16656  1672  0855               	movf	val2group@i,w
 16657  1673  3EA0               	addlw	(low (_Mask| (0+512)))& (0+255)
 16658  1674  0086               	movwf	6
 16659  1675  3002               	movlw	2	; select bank5/6
 16660  1676  0087               	movwf	7
 16661  1677  0852               	movf	??_val2group,w
 16662  1678  0081               	movwf	1
 16663                           
 16664                           ;main.c: 310:             break;
 16665  1679  2FE7               	goto	l5021
 16666  167A                     l4963:
 16667                           
 16668                           ;main.c: 312:             Core[i] = val;
 16669  167A  0851               	movf	val2group@val,w
 16670  167B  00D2               	movwf	??_val2group
 16671  167C  0855               	movf	val2group@i,w
 16672  167D  3EB0               	addlw	(low (_Core| (0+512)))& (0+255)
 16673  167E  0086               	movwf	6
 16674  167F  3002               	movlw	2	; select bank5/6
 16675  1680  0087               	movwf	7
 16676  1681  0852               	movf	??_val2group,w
 16677  1682  0081               	movwf	1
 16678                           
 16679                           ;main.c: 313:             break;
 16680  1683  2FE7               	goto	l5021
 16681  1684                     l4965:
 16682                           
 16683                           ;main.c: 315:             ShouldFL[i] = val;
 16684  1684  0851               	movf	val2group@val,w
 16685  1685  00D2               	movwf	??_val2group
 16686  1686  0855               	movf	val2group@i,w
 16687  1687  3EB4               	addlw	(low (_ShouldFL| 0))& (0+255)
 16688  1688  0086               	movwf	6
 16689  1689  0187               	clrf	7
 16690  168A  0852               	movf	??_val2group,w
 16691  168B  0081               	movwf	1
 16692                           
 16693                           ;main.c: 316:             break;
 16694  168C  2FE7               	goto	l5021
 16695  168D                     l4967:
 16696                           
 16697                           ;main.c: 318:             ShouldFR[i] = val;
 16698  168D  0851               	movf	val2group@val,w
 16699  168E  00D2               	movwf	??_val2group
 16700  168F  0855               	movf	val2group@i,w
 16701  1690  3E6B               	addlw	(low (_ShouldFR| (0+256)))& (0+255)
 16702  1691  0086               	movwf	6
 16703  1692  3001               	movlw	1	; select bank2/3
 16704  1693  0087               	movwf	7
 16705  1694  0852               	movf	??_val2group,w
 16706  1695  0081               	movwf	1
 16707                           
 16708                           ;main.c: 319:             break;
 16709  1696  2FE7               	goto	l5021
 16710  1697                     l4969:
 16711                           
 16712                           ;main.c: 321:             ShouldDL[i] = val;
 16713  1697  0851               	movf	val2group@val,w
 16714  1698  00D2               	movwf	??_val2group
 16715  1699  0855               	movf	val2group@i,w
 16716  169A  3E68               	addlw	(low (_ShouldDL| (0+256)))& (0+255)
 16717  169B  0086               	movwf	6
 16718  169C  3001               	movlw	1	; select bank2/3
 16719  169D  0087               	movwf	7
 16720  169E  0852               	movf	??_val2group,w
 16721  169F  0081               	movwf	1
 16722                           
 16723                           ;main.c: 322:             break;
 16724  16A0  2FE7               	goto	l5021
 16725  16A1                     l4971:
 16726                           
 16727                           ;main.c: 324:             ShouldDR[i] = val;
 16728  16A1  0851               	movf	val2group@val,w
 16729  16A2  00D2               	movwf	??_val2group
 16730  16A3  0855               	movf	val2group@i,w
 16731  16A4  3E65               	addlw	(low (_ShouldDR| (0+256)))& (0+255)
 16732  16A5  0086               	movwf	6
 16733  16A6  3001               	movlw	1	; select bank2/3
 16734  16A7  0087               	movwf	7
 16735  16A8  0852               	movf	??_val2group,w
 16736  16A9  0081               	movwf	1
 16737                           
 16738                           ;main.c: 325:             break;
 16739  16AA  2FE7               	goto	l5021
 16740  16AB                     l4973:
 16741                           
 16742                           ;main.c: 327:             ShouldBL[i] = val;
 16743  16AB  0851               	movf	val2group@val,w
 16744  16AC  00D2               	movwf	??_val2group
 16745  16AD  0855               	movf	val2group@i,w
 16746  16AE  3E62               	addlw	(low (_ShouldBL| (0+256)))& (0+255)
 16747  16AF  0086               	movwf	6
 16748  16B0  3001               	movlw	1	; select bank2/3
 16749  16B1  0087               	movwf	7
 16750  16B2  0852               	movf	??_val2group,w
 16751  16B3  0081               	movwf	1
 16752                           
 16753                           ;main.c: 328:             break;
 16754  16B4  2FE7               	goto	l5021
 16755  16B5                     l4975:
 16756                           
 16757                           ;main.c: 330:             ShouldBR[i] = val;
 16758  16B5  0851               	movf	val2group@val,w
 16759  16B6  00D2               	movwf	??_val2group
 16760  16B7  0855               	movf	val2group@i,w
 16761  16B8  3E5F               	addlw	(low (_ShouldBR| (0+256)))& (0+255)
 16762  16B9  0086               	movwf	6
 16763  16BA  3001               	movlw	1	; select bank2/3
 16764  16BB  0087               	movwf	7
 16765  16BC  0852               	movf	??_val2group,w
 16766  16BD  0081               	movwf	1
 16767                           
 16768                           ;main.c: 331:             break;
 16769  16BE  2FE7               	goto	l5021
 16770  16BF                     l4977:
 16771                           
 16772                           ;main.c: 333:             NeckL[i] = val;
 16773  16BF  0851               	movf	val2group@val,w
 16774  16C0  00D2               	movwf	??_val2group
 16775  16C1  0855               	movf	val2group@i,w
 16776  16C2  3E5C               	addlw	(low (_NeckL| (0+256)))& (0+255)
 16777  16C3  0086               	movwf	6
 16778  16C4  3001               	movlw	1	; select bank2/3
 16779  16C5  0087               	movwf	7
 16780  16C6  0852               	movf	??_val2group,w
 16781  16C7  0081               	movwf	1
 16782                           
 16783                           ;main.c: 334:             break;
 16784  16C8  2FE7               	goto	l5021
 16785  16C9                     l4979:
 16786                           
 16787                           ;main.c: 336:             NeckR[i] = val;
 16788  16C9  0851               	movf	val2group@val,w
 16789  16CA  00D2               	movwf	??_val2group
 16790  16CB  0855               	movf	val2group@i,w
 16791  16CC  3E59               	addlw	(low (_NeckR| (0+256)))& (0+255)
 16792  16CD  0086               	movwf	6
 16793  16CE  3001               	movlw	1	; select bank2/3
 16794  16CF  0087               	movwf	7
 16795  16D0  0852               	movf	??_val2group,w
 16796  16D1  0081               	movwf	1
 16797                           
 16798                           ;main.c: 337:             break;
 16799  16D2  2FE7               	goto	l5021
 16800  16D3                     l4981:
 16801                           
 16802                           ;main.c: 339:             NeckBL[i] = val;
 16803  16D3  0851               	movf	val2group@val,w
 16804  16D4  00D2               	movwf	??_val2group
 16805  16D5  0855               	movf	val2group@i,w
 16806  16D6  3EC2               	addlw	(low (_NeckBL| (0+256)))& (0+255)
 16807  16D7  0086               	movwf	6
 16808  16D8  3001               	movlw	1	; select bank3/4
 16809  16D9  0087               	movwf	7
 16810  16DA  0852               	movf	??_val2group,w
 16811  16DB  0081               	movwf	1
 16812                           
 16813                           ;main.c: 340:             break;
 16814  16DC  2FE7               	goto	l5021
 16815  16DD                     l4983:
 16816                           
 16817                           ;main.c: 342:             NeckBR[i] = val;
 16818  16DD  0851               	movf	val2group@val,w
 16819  16DE  00D2               	movwf	??_val2group
 16820  16DF  0855               	movf	val2group@i,w
 16821  16E0  3EB0               	addlw	(low (_NeckBR| 0))& (0+255)
 16822  16E1  0086               	movwf	6
 16823  16E2  0187               	clrf	7
 16824  16E3  0852               	movf	??_val2group,w
 16825  16E4  0081               	movwf	1
 16826                           
 16827                           ;main.c: 343:             break;
 16828  16E5  2FE7               	goto	l5021
 16829  16E6                     l4985:
 16830                           
 16831                           ;main.c: 345:             AbsUL[i] = val;
 16832  16E6  0851               	movf	val2group@val,w
 16833  16E7  00D2               	movwf	??_val2group
 16834  16E8  0855               	movf	val2group@i,w
 16835  16E9  3EBE               	addlw	(low (_AbsUL| (0+256)))& (0+255)
 16836  16EA  0086               	movwf	6
 16837  16EB  3001               	movlw	1	; select bank3/4
 16838  16EC  0087               	movwf	7
 16839  16ED  0852               	movf	??_val2group,w
 16840  16EE  0081               	movwf	1
 16841                           
 16842                           ;main.c: 346:             break;
 16843  16EF  2FE7               	goto	l5021
 16844  16F0                     l4987:
 16845                           
 16846                           ;main.c: 348:             AbsUR[i] = val;
 16847  16F0  0851               	movf	val2group@val,w
 16848  16F1  00D2               	movwf	??_val2group
 16849  16F2  0855               	movf	val2group@i,w
 16850  16F3  3EBA               	addlw	(low (_AbsUR| (0+256)))& (0+255)
 16851  16F4  0086               	movwf	6
 16852  16F5  3001               	movlw	1	; select bank3/4
 16853  16F6  0087               	movwf	7
 16854  16F7  0852               	movf	??_val2group,w
 16855  16F8  0081               	movwf	1
 16856                           
 16857                           ;main.c: 349:             break;
 16858  16F9  2FE7               	goto	l5021
 16859  16FA                     l4989:
 16860                           
 16861                           ;main.c: 351:             AbsML[i] = val;
 16862  16FA  0851               	movf	val2group@val,w
 16863  16FB  00D2               	movwf	??_val2group
 16864  16FC  0855               	movf	val2group@i,w
 16865  16FD  3E56               	addlw	(low (_AbsML| (0+256)))& (0+255)
 16866  16FE  0086               	movwf	6
 16867  16FF  3001               	movlw	1	; select bank2/3
 16868  1700  0087               	movwf	7
 16869  1701  0852               	movf	??_val2group,w
 16870  1702  0081               	movwf	1
 16871                           
 16872                           ;main.c: 352:             break;
 16873  1703  2FE7               	goto	l5021
 16874  1704                     l4991:
 16875                           
 16876                           ;main.c: 354:             AbsMR[i] = val;
 16877  1704  0851               	movf	val2group@val,w
 16878  1705  00D2               	movwf	??_val2group
 16879  1706  0855               	movf	val2group@i,w
 16880  1707  3EDC               	addlw	(low (_AbsMR| (0+256)))& (0+255)
 16881  1708  0086               	movwf	6
 16882  1709  3001               	movlw	1	; select bank3/4
 16883  170A  0087               	movwf	7
 16884  170B  0852               	movf	??_val2group,w
 16885  170C  0081               	movwf	1
 16886                           
 16887                           ;main.c: 355:             break;
 16888  170D  2FE7               	goto	l5021
 16889  170E                     l4993:
 16890                           
 16891                           ;main.c: 357:             AbsDL[i] = val;
 16892  170E  0851               	movf	val2group@val,w
 16893  170F  00D2               	movwf	??_val2group
 16894  1710  0855               	movf	val2group@i,w
 16895  1711  3ED9               	addlw	(low (_AbsDL| (0+256)))& (0+255)
 16896  1712  0086               	movwf	6
 16897  1713  3001               	movlw	1	; select bank3/4
 16898  1714  0087               	movwf	7
 16899  1715  0852               	movf	??_val2group,w
 16900  1716  0081               	movwf	1
 16901                           
 16902                           ;main.c: 358:             break;
 16903  1717  2FE7               	goto	l5021
 16904  1718                     l4995:
 16905                           
 16906                           ;main.c: 360:             AbsDR[i] = val;
 16907  1718  0851               	movf	val2group@val,w
 16908  1719  00D2               	movwf	??_val2group
 16909  171A  0855               	movf	val2group@i,w
 16910  171B  3ED6               	addlw	(low (_AbsDR| (0+256)))& (0+255)
 16911  171C  0086               	movwf	6
 16912  171D  3001               	movlw	1	; select bank3/4
 16913  171E  0087               	movwf	7
 16914  171F  0852               	movf	??_val2group,w
 16915  1720  0081               	movwf	1
 16916                           
 16917                           ;main.c: 361:             break;
 16918  1721  2FE7               	goto	l5021
 16919  1722                     l4997:
 16920                           
 16921                           ;main.c: 363:             BackUL[i] = val;
 16922  1722  0851               	movf	val2group@val,w
 16923  1723  00D2               	movwf	??_val2group
 16924  1724  0855               	movf	val2group@i,w
 16925  1725  3ED3               	addlw	(low (_BackUL| (0+256)))& (0+255)
 16926  1726  0086               	movwf	6
 16927  1727  3001               	movlw	1	; select bank3/4
 16928  1728  0087               	movwf	7
 16929  1729  0852               	movf	??_val2group,w
 16930  172A  0081               	movwf	1
 16931                           
 16932                           ;main.c: 364:             break;
 16933  172B  2FE7               	goto	l5021
 16934  172C                     l4999:
 16935                           
 16936                           ;main.c: 366:             BackUR[i] = val;
 16937  172C  0851               	movf	val2group@val,w
 16938  172D  00D2               	movwf	??_val2group
 16939  172E  0855               	movf	val2group@i,w
 16940  172F  3ED0               	addlw	(low (_BackUR| (0+256)))& (0+255)
 16941  1730  0086               	movwf	6
 16942  1731  3001               	movlw	1	; select bank3/4
 16943  1732  0087               	movwf	7
 16944  1733  0852               	movf	??_val2group,w
 16945  1734  0081               	movwf	1
 16946                           
 16947                           ;main.c: 367:             break;
 16948  1735  2FE7               	goto	l5021
 16949  1736                     l5001:
 16950                           
 16951                           ;main.c: 369:             BackUM[i] = val;
 16952  1736  0851               	movf	val2group@val,w
 16953  1737  00D2               	movwf	??_val2group
 16954  1738  0855               	movf	val2group@i,w
 16955  1739  3ECD               	addlw	(low (_BackUM| (0+256)))& (0+255)
 16956  173A  0086               	movwf	6
 16957  173B  3001               	movlw	1	; select bank3/4
 16958  173C  0087               	movwf	7
 16959  173D  0852               	movf	??_val2group,w
 16960  173E  0081               	movwf	1
 16961                           
 16962                           ;main.c: 370:             break;
 16963  173F  2FE7               	goto	l5021
 16964  1740                     l5003:
 16965                           
 16966                           ;main.c: 372:             BackD[i] = val;
 16967  1740  0851               	movf	val2group@val,w
 16968  1741  00D2               	movwf	??_val2group
 16969  1742  0855               	movf	val2group@i,w
 16970  1743  3ECA               	addlw	(low (_BackD| (0+256)))& (0+255)
 16971  1744  0086               	movwf	6
 16972  1745  3001               	movlw	1	; select bank3/4
 16973  1746  0087               	movwf	7
 16974  1747  0852               	movf	??_val2group,w
 16975  1748  0081               	movwf	1
 16976                           
 16977                           ;main.c: 373:             break;
 16978  1749  2FE7               	goto	l5021
 16979  174A                     l5005:
 16980                           
 16981                           ;main.c: 375:             LegUL[i] = val;
 16982  174A  0851               	movf	val2group@val,w
 16983  174B  00D2               	movwf	??_val2group
 16984  174C  0855               	movf	val2group@i,w
 16985  174D  3E66               	addlw	(low (_LegUL| (0+512)))& (0+255)
 16986  174E  0086               	movwf	6
 16987  174F  3002               	movlw	2	; select bank4/5
 16988  1750  0087               	movwf	7
 16989  1751  0852               	movf	??_val2group,w
 16990  1752  0081               	movwf	1
 16991                           
 16992                           ;main.c: 376:             break;
 16993  1753  2FE7               	goto	l5021
 16994  1754                     l5007:
 16995                           
 16996                           ;main.c: 378:             LegUR[i] = val;
 16997  1754  0851               	movf	val2group@val,w
 16998  1755  00D2               	movwf	??_val2group
 16999  1756  0855               	movf	val2group@i,w
 17000  1757  3E60               	addlw	(low (_LegUR| (0+512)))& (0+255)
 17001  1758  0086               	movwf	6
 17002  1759  3002               	movlw	2	; select bank4/5
 17003  175A  0087               	movwf	7
 17004  175B  0852               	movf	??_val2group,w
 17005  175C  0081               	movwf	1
 17006                           
 17007                           ;main.c: 379:             break;
 17008  175D  2FE7               	goto	l5021
 17009  175E                     l5009:
 17010                           
 17011                           ;main.c: 381:             LegDL[i] = val;
 17012  175E  0851               	movf	val2group@val,w
 17013  175F  00D2               	movwf	??_val2group
 17014  1760  0855               	movf	val2group@i,w
 17015  1761  3E5A               	addlw	(low (_LegDL| (0+512)))& (0+255)
 17016  1762  0086               	movwf	6
 17017  1763  3002               	movlw	2	; select bank4/5
 17018  1764  0087               	movwf	7
 17019  1765  0852               	movf	??_val2group,w
 17020  1766  0081               	movwf	1
 17021                           
 17022                           ;main.c: 382:             break;
 17023  1767  2FE7               	goto	l5021
 17024  1768                     l5011:
 17025                           
 17026                           ;main.c: 384:             LegDR[i] = val;
 17027  1768  0851               	movf	val2group@val,w
 17028  1769  00D2               	movwf	??_val2group
 17029  176A  0855               	movf	val2group@i,w
 17030  176B  3E54               	addlw	(low (_LegDR| (0+512)))& (0+255)
 17031  176C  0086               	movwf	6
 17032  176D  3002               	movlw	2	; select bank4/5
 17033  176E  0087               	movwf	7
 17034  176F  0852               	movf	??_val2group,w
 17035  1770  0081               	movwf	1
 17036                           
 17037                           ;main.c: 385:             break;
 17038  1771  2FE7               	goto	l5021
 17039  1772                     l5013:
 17040                           
 17041                           ;main.c: 387:             ShoeL[i] = val;
 17042  1772  0851               	movf	val2group@val,w
 17043  1773  00D2               	movwf	??_val2group
 17044  1774  0855               	movf	val2group@i,w
 17045  1775  3EC3               	addlw	(low (_ShoeL| (0+512)))& (0+255)
 17046  1776  0086               	movwf	6
 17047  1777  3002               	movlw	2	; select bank5/6
 17048  1778  0087               	movwf	7
 17049  1779  0852               	movf	??_val2group,w
 17050  177A  0081               	movwf	1
 17051                           
 17052                           ;main.c: 388:             break;
 17053  177B  2FE7               	goto	l5021
 17054  177C                     l5015:
 17055                           
 17056                           ;main.c: 390:             ShoeR[i] = val;
 17057  177C  0851               	movf	val2group@val,w
 17058  177D  00D2               	movwf	??_val2group
 17059  177E  0855               	movf	val2group@i,w
 17060  177F  3EBB               	addlw	(low (_ShoeR| (0+512)))& (0+255)
 17061  1780  0086               	movwf	6
 17062  1781  3002               	movlw	2	; select bank5/6
 17063  1782  0087               	movwf	7
 17064  1783  0852               	movf	??_val2group,w
 17065  1784  0081               	movwf	1
 17066                           
 17067                           ;main.c: 391:             break;
 17068  1785  2FE7               	goto	l5021
 17069  1786                     l5019:
 17070  1786  0854               	movf	val2group@groupID,w
 17071  1787  00D2               	movwf	??_val2group
 17072  1788  01D3               	clrf	??_val2group+1
 17073                           
 17074                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17075                           ; Switch size 1, requested type "simple"
 17076                           ; Number of cases is 1, Range of values is 0 to 0
 17077                           ; switch strategies available:
 17078                           ; Name         Instructions Cycles
 17079                           ; simple_byte            4     3 (average)
 17080                           ; direct_byte            8     6 (fixed)
 17081                           ; jumptable            260     6 (fixed)
 17082                           ;	Chosen strategy is simple_byte
 17083  1789  0853               	movf	??_val2group+1,w
 17084  178A  3A00               	xorlw	0	; case 0
 17085  178B  1903               	skipnz
 17086  178C  2F8E               	goto	l7951
 17087  178D  2FE7               	goto	l5021
 17088  178E                     l7951:
 17089                           
 17090                           ; Switch size 1, requested type "simple"
 17091                           ; Number of cases is 29, Range of values is 0 to 28
 17092                           ; switch strategies available:
 17093                           ; Name         Instructions Cycles
 17094                           ; direct_byte           64     6 (fixed)
 17095                           ; simple_byte           88    45 (average)
 17096                           ; jumptable            260     6 (fixed)
 17097                           ;	Chosen strategy is simple_byte
 17098  178E  0852               	movf	??_val2group,w
 17099  178F  3A00               	xorlw	0	; case 0
 17100  1790  1903               	skipnz
 17101  1791  2E67               	goto	l4959
 17102  1792  3A01               	xorlw	1	; case 1
 17103  1793  1903               	skipnz
 17104  1794  2E70               	goto	l4961
 17105  1795  3A03               	xorlw	3	; case 2
 17106  1796  1903               	skipnz
 17107  1797  2E7A               	goto	l4963
 17108  1798  3A01               	xorlw	1	; case 3
 17109  1799  1903               	skipnz
 17110  179A  2E84               	goto	l4965
 17111  179B  3A07               	xorlw	7	; case 4
 17112  179C  1903               	skipnz
 17113  179D  2E8D               	goto	l4967
 17114  179E  3A01               	xorlw	1	; case 5
 17115  179F  1903               	skipnz
 17116  17A0  2E97               	goto	l4969
 17117  17A1  3A03               	xorlw	3	; case 6
 17118  17A2  1903               	skipnz
 17119  17A3  2EA1               	goto	l4971
 17120  17A4  3A01               	xorlw	1	; case 7
 17121  17A5  1903               	skipnz
 17122  17A6  2EAB               	goto	l4973
 17123  17A7  3A0F               	xorlw	15	; case 8
 17124  17A8  1903               	skipnz
 17125  17A9  2EB5               	goto	l4975
 17126  17AA  3A01               	xorlw	1	; case 9
 17127  17AB  1903               	skipnz
 17128  17AC  2EBF               	goto	l4977
 17129  17AD  3A03               	xorlw	3	; case 10
 17130  17AE  1903               	skipnz
 17131  17AF  2EC9               	goto	l4979
 17132  17B0  3A01               	xorlw	1	; case 11
 17133  17B1  1903               	skipnz
 17134  17B2  2ED3               	goto	l4981
 17135  17B3  3A07               	xorlw	7	; case 12
 17136  17B4  1903               	skipnz
 17137  17B5  2EDD               	goto	l4983
 17138  17B6  3A01               	xorlw	1	; case 13
 17139  17B7  1903               	skipnz
 17140  17B8  2EE6               	goto	l4985
 17141  17B9  3A03               	xorlw	3	; case 14
 17142  17BA  1903               	skipnz
 17143  17BB  2EF0               	goto	l4987
 17144  17BC  3A01               	xorlw	1	; case 15
 17145  17BD  1903               	skipnz
 17146  17BE  2EFA               	goto	l4989
 17147  17BF  3A1F               	xorlw	31	; case 16
 17148  17C0  1903               	skipnz
 17149  17C1  2F04               	goto	l4991
 17150  17C2  3A01               	xorlw	1	; case 17
 17151  17C3  1903               	skipnz
 17152  17C4  2F0E               	goto	l4993
 17153  17C5  3A03               	xorlw	3	; case 18
 17154  17C6  1903               	skipnz
 17155  17C7  2F18               	goto	l4995
 17156  17C8  3A01               	xorlw	1	; case 19
 17157  17C9  1903               	skipnz
 17158  17CA  2F22               	goto	l4997
 17159  17CB  3A07               	xorlw	7	; case 20
 17160  17CC  1903               	skipnz
 17161  17CD  2F2C               	goto	l4999
 17162  17CE  3A01               	xorlw	1	; case 21
 17163  17CF  1903               	skipnz
 17164  17D0  2F36               	goto	l5001
 17165  17D1  3A03               	xorlw	3	; case 22
 17166  17D2  1903               	skipnz
 17167  17D3  2F40               	goto	l5003
 17168  17D4  3A01               	xorlw	1	; case 23
 17169  17D5  1903               	skipnz
 17170  17D6  2F4A               	goto	l5005
 17171  17D7  3A0F               	xorlw	15	; case 24
 17172  17D8  1903               	skipnz
 17173  17D9  2F54               	goto	l5007
 17174  17DA  3A01               	xorlw	1	; case 25
 17175  17DB  1903               	skipnz
 17176  17DC  2F5E               	goto	l5009
 17177  17DD  3A03               	xorlw	3	; case 26
 17178  17DE  1903               	skipnz
 17179  17DF  2F68               	goto	l5011
 17180  17E0  3A01               	xorlw	1	; case 27
 17181  17E1  1903               	skipnz
 17182  17E2  2F72               	goto	l5013
 17183  17E3  3A07               	xorlw	7	; case 28
 17184  17E4  1903               	skipnz
 17185  17E5  2F7C               	goto	l5015
 17186  17E6  2FE7               	goto	l5021
 17187  17E7                     l5021:
 17188                           
 17189                           ;main.c: 393:     }
 17190  17E7  3001               	movlw	1
 17191  17E8  00D2               	movwf	??_val2group
 17192  17E9  0852               	movf	??_val2group,w
 17193  17EA  07D5               	addwf	val2group@i,f
 17194  17EB                     l5023:
 17195  17EB  0854               	movf	val2group@groupID,w
 17196  17EC  3E20               	addlw	(low (_groupSize| (0+768)))& (0+255)
 17197  17ED  0086               	movwf	6
 17198  17EE  3003               	movlw	3	; select bank6/7
 17199  17EF  0087               	movwf	7
 17200  17F0  0801               	movf	1,w
 17201  17F1  0255               	subwf	val2group@i,w
 17202  17F2  1C03               	skipc
 17203  17F3  2FF5               	goto	u3301
 17204  17F4  2FF6               	goto	u3300
 17205  17F5                     u3301:
 17206  17F5  2F86               	goto	l5019
 17207  17F6                     u3300:
 17208  17F6                     l5025:
 17209                           
 17210                           ;main.c: 394:     groupValue[groupID] = val;
 17211  17F6  0851               	movf	val2group@val,w
 17212  17F7  00D2               	movwf	??_val2group
 17213  17F8  0854               	movf	val2group@groupID,w
 17214  17F9  3EBD               	addlw	(low (_groupValue| (0+768)))& (0+255)
 17215  17FA  0086               	movwf	6
 17216  17FB  3003               	movlw	3	; select bank7/8
 17217  17FC  0087               	movwf	7
 17218  17FD  0852               	movf	??_val2group,w
 17219  17FE  0081               	movwf	1
 17220  17FF                     l907:
 17221  17FF  0008               	return
 17222  1800                     __end_of_val2group:
 17223                           
 17224                           	psect	text53
 17225  20EE                     __ptext53:	
 17226 ;; *************** function _putch *****************
 17227 ;; Defined at:
 17228 ;;		line 1567 in file "main.c"
 17229 ;; Parameters:    Size  Location     Type
 17230 ;;  val             1    wreg     unsigned char 
 17231 ;; Auto vars:     Size  Location     Type
 17232 ;;  val             1    5[BANK0 ] unsigned char 
 17233 ;; Return value:  Size  Location     Type
 17234 ;;                  1    wreg      void 
 17235 ;; Registers used:
 17236 ;;		wreg, status,2, status,0, pclath, cstack
 17237 ;; Tracked objects:
 17238 ;;		On entry : 0/0
 17239 ;;		On exit  : 0/0
 17240 ;;		Unchanged: 0/0
 17241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17243 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17245 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17246 ;;Total ram usage:        1 bytes
 17247 ;; Hardware stack levels used: 1
 17248 ;; Hardware stack levels required when called: 12
 17249 ;; This function calls:
 17250 ;;		_EUSART_Write
 17251 ;; This function is called by:
 17252 ;;		_demoEfectOn
 17253 ;;		_musik
 17254 ;;		_SeqPresOn
 17255 ;;		_SeqPresOff
 17256 ;;		_butt3Pres
 17257 ;; This function uses a non-reentrant model
 17258 ;;
 17259                           
 17260                           
 17261                           ;psect for function _putch
 17262  20EE                     _putch:
 17263                           
 17264                           ;incstack = 0
 17265                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
 17266                           ;putch@val stored from wreg
 17267  20EE  0020               	movlb	0	; select bank0
 17268  20EF  00D2               	movwf	putch@val
 17269  20F0                     l5787:
 17270                           
 17271                           ;main.c: 1568:     EUSART_Write(val);
 17272  20F0  0852               	movf	putch@val,w
 17273  20F1  31A1  21A9  31A0   	fcall	_EUSART_Write
 17274  20F4                     l1436:
 17275  20F4  0008               	return
 17276  20F5                     __end_of_putch:
 17277                           
 17278                           	psect	text54
 17279  21A9                     __ptext54:	
 17280 ;; *************** function _EUSART_Write *****************
 17281 ;; Defined at:
 17282 ;;		line 162 in file "mcc_generated_files/eusart.c"
 17283 ;; Parameters:    Size  Location     Type
 17284 ;;  txData          1    wreg     unsigned char 
 17285 ;; Auto vars:     Size  Location     Type
 17286 ;;  txData          1    4[BANK0 ] unsigned char 
 17287 ;; Return value:  Size  Location     Type
 17288 ;;                  1    wreg      void 
 17289 ;; Registers used:
 17290 ;;		wreg
 17291 ;; Tracked objects:
 17292 ;;		On entry : 0/0
 17293 ;;		On exit  : 0/0
 17294 ;;		Unchanged: 0/0
 17295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17297 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17299 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17300 ;;Total ram usage:        1 bytes
 17301 ;; Hardware stack levels used: 1
 17302 ;; Hardware stack levels required when called: 11
 17303 ;; This function calls:
 17304 ;;		Nothing
 17305 ;; This function is called by:
 17306 ;;		_putch
 17307 ;; This function uses a non-reentrant model
 17308 ;;
 17309                           
 17310                           
 17311                           ;psect for function _EUSART_Write
 17312  21A9                     _EUSART_Write:
 17313                           
 17314                           ;incstack = 0
 17315                           ; Regs used in _EUSART_Write: [wreg]
 17316                           ;EUSART_Write@txData stored from wreg
 17317  21A9  0020               	movlb	0	; select bank0
 17318  21AA  00D1               	movwf	EUSART_Write@txData
 17319  21AB                     l5323:
 17320  21AB                     l318:	
 17321                           ;mcc_generated_files/eusart.c: 165:     {;mcc_generated_files/eusart.c: 166:     }
 17322                           
 17323                           
 17324                           ;mcc_generated_files/eusart.c: 164:     while(0 == PIR1bits.TXIF)
 17325  21AB  1E11               	btfss	17,4	;volatile
 17326  21AC  29AE               	goto	u3501
 17327  21AD  29AF               	goto	u3500
 17328  21AE                     u3501:
 17329  21AE  29AB               	goto	l318
 17330  21AF                     u3500:
 17331  21AF                     l5325:
 17332                           
 17333                           ;mcc_generated_files/eusart.c: 168:     TX1REG = txData;
 17334  21AF  0851               	movf	EUSART_Write@txData,w
 17335  21B0  0023               	movlb	3	; select bank3
 17336  21B1  009A               	movwf	26	;volatile
 17337  21B2                     l321:
 17338  21B2  0008               	return
 17339  21B3                     __end_of_EUSART_Write:
 17340                           
 17341                           	psect	text55
 17342  2455                     __ptext55:	
 17343 ;; *************** function _SYSTEM_Initialize *****************
 17344 ;; Defined at:
 17345 ;;		line 50 in file "mcc_generated_files/mcc.c"
 17346 ;; Parameters:    Size  Location     Type
 17347 ;;		None
 17348 ;; Auto vars:     Size  Location     Type
 17349 ;;		None
 17350 ;; Return value:  Size  Location     Type
 17351 ;;                  1    wreg      void 
 17352 ;; Registers used:
 17353 ;;		wreg, status,2, status,0, pclath, cstack
 17354 ;; Tracked objects:
 17355 ;;		On entry : 0/0
 17356 ;;		On exit  : 0/0
 17357 ;;		Unchanged: 0/0
 17358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17363 ;;Total ram usage:        0 bytes
 17364 ;; Hardware stack levels used: 1
 17365 ;; Hardware stack levels required when called: 13
 17366 ;; This function calls:
 17367 ;;		_EUSART_Initialize
 17368 ;;		_OSCILLATOR_Initialize
 17369 ;;		_PIN_MANAGER_Initialize
 17370 ;;		_PMD_Initialize
 17371 ;;		_SPI2_Initialize
 17372 ;;		_TMR1_Initialize
 17373 ;;		_TMR2_Initialize
 17374 ;;		_WDT_Initialize
 17375 ;; This function is called by:
 17376 ;;		_main
 17377 ;; This function uses a non-reentrant model
 17378 ;;
 17379                           
 17380                           
 17381                           ;psect for function _SYSTEM_Initialize
 17382  2455                     _SYSTEM_Initialize:
 17383  2455                     l6809:	
 17384                           ;incstack = 0
 17385                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17386                           
 17387                           
 17388                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 17389  2455  31A1  2105  31A4   	fcall	_PMD_Initialize
 17390  2458                     l6811:
 17391                           
 17392                           ;mcc_generated_files/mcc.c: 54:     SPI2_Initialize();
 17393  2458  31A3  2387  31A4   	fcall	_SPI2_Initialize
 17394  245B                     l6813:
 17395                           
 17396                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 17397  245B  3198  20CE  31A4   	fcall	_PIN_MANAGER_Initialize
 17398  245E                     l6815:
 17399                           
 17400                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 17401  245E  31A1  21E9  31A4   	fcall	_OSCILLATOR_Initialize
 17402  2461                     l6817:
 17403                           
 17404                           ;mcc_generated_files/mcc.c: 57:     WDT_Initialize();
 17405  2461  31A0  20DC  31A4   	fcall	_WDT_Initialize
 17406  2464                     l6819:
 17407                           
 17408                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 17409  2464  31A3  2324  31A4   	fcall	_TMR2_Initialize
 17410  2467                     l6821:
 17411                           
 17412                           ;mcc_generated_files/mcc.c: 59:     TMR1_Initialize();
 17413  2467  31A4  243C  31A4   	fcall	_TMR1_Initialize
 17414  246A                     l6823:
 17415                           
 17416                           ;mcc_generated_files/mcc.c: 60:     EUSART_Initialize();
 17417  246A  3198  2002  31A4   	fcall	_EUSART_Initialize
 17418  246D                     l186:
 17419  246D  0008               	return
 17420  246E                     __end_of_SYSTEM_Initialize:
 17421                           
 17422                           	psect	text56
 17423  20DC                     __ptext56:	
 17424 ;; *************** function _WDT_Initialize *****************
 17425 ;; Defined at:
 17426 ;;		line 81 in file "mcc_generated_files/mcc.c"
 17427 ;; Parameters:    Size  Location     Type
 17428 ;;		None
 17429 ;; Auto vars:     Size  Location     Type
 17430 ;;		None
 17431 ;; Return value:  Size  Location     Type
 17432 ;;                  1    wreg      void 
 17433 ;; Registers used:
 17434 ;;		wreg
 17435 ;; Tracked objects:
 17436 ;;		On entry : 0/0
 17437 ;;		On exit  : 0/0
 17438 ;;		Unchanged: 0/0
 17439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17444 ;;Total ram usage:        0 bytes
 17445 ;; Hardware stack levels used: 1
 17446 ;; Hardware stack levels required when called: 11
 17447 ;; This function calls:
 17448 ;;		Nothing
 17449 ;; This function is called by:
 17450 ;;		_SYSTEM_Initialize
 17451 ;; This function uses a non-reentrant model
 17452 ;;
 17453                           
 17454                           
 17455                           ;psect for function _WDT_Initialize
 17456  20DC                     _WDT_Initialize:
 17457  20DC                     l5989:	
 17458                           ;incstack = 0
 17459                           ; Regs used in _WDT_Initialize: [wreg]
 17460                           
 17461                           
 17462                           ;mcc_generated_files/mcc.c: 84:     WDTCON = 0x16;
 17463  20DC  3016               	movlw	22
 17464  20DD  0021               	movlb	1	; select bank1
 17465  20DE  0097               	movwf	23	;volatile
 17466  20DF                     l195:
 17467  20DF  0008               	return
 17468  20E0                     __end_of_WDT_Initialize:
 17469                           
 17470                           	psect	text57
 17471  2324                     __ptext57:	
 17472 ;; *************** function _TMR2_Initialize *****************
 17473 ;; Defined at:
 17474 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 17475 ;; Parameters:    Size  Location     Type
 17476 ;;		None
 17477 ;; Auto vars:     Size  Location     Type
 17478 ;;		None
 17479 ;; Return value:  Size  Location     Type
 17480 ;;                  1    wreg      void 
 17481 ;; Registers used:
 17482 ;;		wreg, status,2, status,0, pclath, cstack
 17483 ;; Tracked objects:
 17484 ;;		On entry : 0/0
 17485 ;;		On exit  : 0/0
 17486 ;;		Unchanged: 0/0
 17487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17492 ;;Total ram usage:        0 bytes
 17493 ;; Hardware stack levels used: 1
 17494 ;; Hardware stack levels required when called: 12
 17495 ;; This function calls:
 17496 ;;		_TMR2_SetInterruptHandler
 17497 ;; This function is called by:
 17498 ;;		_SYSTEM_Initialize
 17499 ;; This function uses a non-reentrant model
 17500 ;;
 17501                           
 17502                           
 17503                           ;psect for function _TMR2_Initialize
 17504  2324                     _TMR2_Initialize:
 17505  2324                     l5991:	
 17506                           ;incstack = 0
 17507                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17508                           
 17509                           
 17510                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x5C;
 17511  2324  305C               	movlw	92
 17512  2325  0020               	movlb	0	; select bank0
 17513  2326  009E               	movwf	30	;volatile
 17514  2327                     l5993:
 17515                           
 17516                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
 17517  2327  019D               	clrf	29	;volatile
 17518  2328                     l5995:
 17519                           
 17520                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
 17521  2328  1091               	bcf	17,1	;volatile
 17522  2329                     l5997:
 17523                           
 17524                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
 17525  2329  0021               	movlb	1	; select bank1
 17526  232A  1491               	bsf	17,1	;volatile
 17527  232B                     l5999:
 17528                           
 17529                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 17530  232B  3003               	movlw	low _TMR2_DefaultInterruptHandler
 17531  232C  0020               	movlb	0	; select bank0
 17532  232D  00D1               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 17533  232E  3000               	movlw	high _TMR2_DefaultInterruptHandler
 17534  232F  00D2               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 17535  2330  31A1  2165  31A3   	fcall	_TMR2_SetInterruptHandler
 17536  2333                     l6001:
 17537                           
 17538                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x6F;
 17539  2333  306F               	movlw	111
 17540  2334  0020               	movlb	0	; select bank0
 17541  2335  009F               	movwf	31	;volatile
 17542  2336                     l443:
 17543  2336  0008               	return
 17544  2337                     __end_of_TMR2_Initialize:
 17545                           
 17546                           	psect	text58
 17547  2165                     __ptext58:	
 17548 ;; *************** function _TMR2_SetInterruptHandler *****************
 17549 ;; Defined at:
 17550 ;;		line 132 in file "mcc_generated_files/tmr2.c"
 17551 ;; Parameters:    Size  Location     Type
 17552 ;;  InterruptHan    2    4[BANK0 ] PTR FTN()void 
 17553 ;;		 -> pTMR2_ISR(1), TMR2_DefaultInterruptHandler(1), 
 17554 ;; Auto vars:     Size  Location     Type
 17555 ;;		None
 17556 ;; Return value:  Size  Location     Type
 17557 ;;                  1    wreg      void 
 17558 ;; Registers used:
 17559 ;;		wreg
 17560 ;; Tracked objects:
 17561 ;;		On entry : 0/0
 17562 ;;		On exit  : 0/0
 17563 ;;		Unchanged: 0/0
 17564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17565 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17568 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17569 ;;Total ram usage:        2 bytes
 17570 ;; Hardware stack levels used: 1
 17571 ;; Hardware stack levels required when called: 11
 17572 ;; This function calls:
 17573 ;;		Nothing
 17574 ;; This function is called by:
 17575 ;;		_TMR2_Initialize
 17576 ;;		_main
 17577 ;; This function uses a non-reentrant model
 17578 ;;
 17579                           
 17580                           
 17581                           ;psect for function _TMR2_SetInterruptHandler
 17582  2165                     _TMR2_SetInterruptHandler:
 17583  2165                     l5541:	
 17584                           ;incstack = 0
 17585                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 17586                           
 17587                           
 17588                           ;mcc_generated_files/tmr2.c: 133:     TMR2_InterruptHandler = InterruptHandler;
 17589  2165  0020               	movlb	0	; select bank0
 17590  2166  0852               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 17591  2167  0021               	movlb	1	; select bank1
 17592  2168  00CA               	movwf	(_TMR2_InterruptHandler+1)^(0+128)
 17593  2169  0020               	movlb	0	; select bank0
 17594  216A  0851               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 17595  216B  0021               	movlb	1	; select bank1
 17596  216C  00C9               	movwf	_TMR2_InterruptHandler^(0+128)
 17597  216D                     l465:
 17598  216D  0008               	return
 17599  216E                     __end_of_TMR2_SetInterruptHandler:
 17600                           
 17601                           	psect	text59
 17602  243C                     __ptext59:	
 17603 ;; *************** function _TMR1_Initialize *****************
 17604 ;; Defined at:
 17605 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 17606 ;; Parameters:    Size  Location     Type
 17607 ;;		None
 17608 ;; Auto vars:     Size  Location     Type
 17609 ;;		None
 17610 ;; Return value:  Size  Location     Type
 17611 ;;                  1    wreg      void 
 17612 ;; Registers used:
 17613 ;;		wreg, status,2, status,0, pclath, cstack
 17614 ;; Tracked objects:
 17615 ;;		On entry : 0/0
 17616 ;;		On exit  : 0/0
 17617 ;;		Unchanged: 0/0
 17618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17623 ;;Total ram usage:        0 bytes
 17624 ;; Hardware stack levels used: 1
 17625 ;; Hardware stack levels required when called: 12
 17626 ;; This function calls:
 17627 ;;		_TMR1_SetInterruptHandler
 17628 ;; This function is called by:
 17629 ;;		_SYSTEM_Initialize
 17630 ;; This function uses a non-reentrant model
 17631 ;;
 17632                           
 17633                           
 17634                           ;psect for function _TMR1_Initialize
 17635  243C                     _TMR1_Initialize:
 17636  243C                     l6003:	
 17637                           ;incstack = 0
 17638                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17639                           
 17640                           
 17641                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 17642  243C  0020               	movlb	0	; select bank0
 17643  243D  019C               	clrf	28	;volatile
 17644  243E                     l6005:
 17645                           
 17646                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xFD;
 17647  243E  30FD               	movlw	253
 17648  243F  009A               	movwf	26	;volatile
 17649  2440                     l6007:
 17650                           
 17651                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x94;
 17652  2440  3094               	movlw	148
 17653  2441  0099               	movwf	25	;volatile
 17654  2442                     l6009:
 17655                           
 17656                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
 17657  2442  1011               	bcf	17,0	;volatile
 17658  2443                     l6011:
 17659                           
 17660                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 17661  2443  081A               	movf	26,w	;volatile
 17662  2444  00B3               	movwf	_timer1ReloadVal+1	;volatile
 17663  2445  0819               	movf	25,w	;volatile
 17664  2446  00B2               	movwf	_timer1ReloadVal	;volatile
 17665  2447                     l6013:
 17666                           
 17667                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
 17668  2447  0021               	movlb	1	; select bank1
 17669  2448  1411               	bsf	17,0	;volatile
 17670  2449                     l6015:
 17671                           
 17672                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 17673  2449  3002               	movlw	low _TMR1_DefaultInterruptHandler
 17674  244A  0020               	movlb	0	; select bank0
 17675  244B  00D1               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 17676  244C  3000               	movlw	high _TMR1_DefaultInterruptHandler
 17677  244D  00D2               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 17678  244E  31A1  215C  31A4   	fcall	_TMR1_SetInterruptHandler
 17679  2451                     l6017:
 17680                           
 17681                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0xC5;
 17682  2451  30C5               	movlw	197
 17683  2452  0020               	movlb	0	; select bank0
 17684  2453  009B               	movwf	27	;volatile
 17685  2454                     l495:
 17686  2454  0008               	return
 17687  2455                     __end_of_TMR1_Initialize:
 17688                           
 17689                           	psect	text60
 17690  215C                     __ptext60:	
 17691 ;; *************** function _TMR1_SetInterruptHandler *****************
 17692 ;; Defined at:
 17693 ;;		line 171 in file "mcc_generated_files/tmr1.c"
 17694 ;; Parameters:    Size  Location     Type
 17695 ;;  InterruptHan    2    4[BANK0 ] PTR FTN()void 
 17696 ;;		 -> pTMR1_ISR(1), TMR1_DefaultInterruptHandler(1), 
 17697 ;; Auto vars:     Size  Location     Type
 17698 ;;		None
 17699 ;; Return value:  Size  Location     Type
 17700 ;;                  1    wreg      void 
 17701 ;; Registers used:
 17702 ;;		wreg
 17703 ;; Tracked objects:
 17704 ;;		On entry : 0/0
 17705 ;;		On exit  : 0/0
 17706 ;;		Unchanged: 0/0
 17707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17708 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17711 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17712 ;;Total ram usage:        2 bytes
 17713 ;; Hardware stack levels used: 1
 17714 ;; Hardware stack levels required when called: 11
 17715 ;; This function calls:
 17716 ;;		Nothing
 17717 ;; This function is called by:
 17718 ;;		_TMR1_Initialize
 17719 ;;		_main
 17720 ;; This function uses a non-reentrant model
 17721 ;;
 17722                           
 17723                           
 17724                           ;psect for function _TMR1_SetInterruptHandler
 17725  215C                     _TMR1_SetInterruptHandler:
 17726  215C                     l5543:	
 17727                           ;incstack = 0
 17728                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 17729                           
 17730                           
 17731                           ;mcc_generated_files/tmr1.c: 172:     TMR1_InterruptHandler = InterruptHandler;
 17732  215C  0020               	movlb	0	; select bank0
 17733  215D  0852               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 17734  215E  0021               	movlb	1	; select bank1
 17735  215F  00C8               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 17736  2160  0020               	movlb	0	; select bank0
 17737  2161  0851               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 17738  2162  0021               	movlb	1	; select bank1
 17739  2163  00C7               	movwf	_TMR1_InterruptHandler^(0+128)
 17740  2164                     l525:
 17741  2164  0008               	return
 17742  2165                     __end_of_TMR1_SetInterruptHandler:
 17743                           
 17744                           	psect	text61
 17745  2387                     __ptext61:	
 17746 ;; *************** function _SPI2_Initialize *****************
 17747 ;; Defined at:
 17748 ;;		line 63 in file "mcc_generated_files/spi2.c"
 17749 ;; Parameters:    Size  Location     Type
 17750 ;;		None
 17751 ;; Auto vars:     Size  Location     Type
 17752 ;;		None
 17753 ;; Return value:  Size  Location     Type
 17754 ;;                  1    wreg      void 
 17755 ;; Registers used:
 17756 ;;		wreg, status,2
 17757 ;; Tracked objects:
 17758 ;;		On entry : 0/0
 17759 ;;		On exit  : 0/0
 17760 ;;		Unchanged: 0/0
 17761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17766 ;;Total ram usage:        0 bytes
 17767 ;; Hardware stack levels used: 1
 17768 ;; Hardware stack levels required when called: 11
 17769 ;; This function calls:
 17770 ;;		Nothing
 17771 ;; This function is called by:
 17772 ;;		_SYSTEM_Initialize
 17773 ;; This function uses a non-reentrant model
 17774 ;;
 17775                           
 17776                           
 17777                           ;psect for function _SPI2_Initialize
 17778  2387                     _SPI2_Initialize:
 17779  2387                     l5973:	
 17780                           ;incstack = 0
 17781                           ; Regs used in _SPI2_Initialize: [wreg+status,2]
 17782                           
 17783                           
 17784                           ;mcc_generated_files/spi2.c: 66:     SSP2CLKPPS = 5;
 17785  2387  3005               	movlw	5
 17786  2388  003C               	movlb	28	; select bank28
 17787  2389  009D               	movwf	29	;volatile
 17788                           
 17789                           ;mcc_generated_files/spi2.c: 67:     SSP2DATPPS = 18;
 17790  238A  3012               	movlw	18
 17791  238B  009E               	movwf	30	;volatile
 17792                           
 17793                           ;mcc_generated_files/spi2.c: 68:     RA5PPS = 26;
 17794  238C  301A               	movlw	26
 17795  238D  003D               	movlb	29	; select bank29
 17796  238E  0095               	movwf	21	;volatile
 17797                           
 17798                           ;mcc_generated_files/spi2.c: 69:     RA4PPS = 27;
 17799  238F  301B               	movlw	27
 17800  2390  0094               	movwf	20	;volatile
 17801                           
 17802                           ;mcc_generated_files/spi2.c: 71:     SSP2STAT = 0x40;
 17803  2391  3040               	movlw	64
 17804  2392  0024               	movlb	4	; select bank4
 17805  2393  009C               	movwf	28	;volatile
 17806  2394                     l5975:
 17807                           
 17808                           ;mcc_generated_files/spi2.c: 72:     SSP2CON1 = 0x00;
 17809  2394  019D               	clrf	29	;volatile
 17810  2395                     l5977:
 17811                           
 17812                           ;mcc_generated_files/spi2.c: 73:     SSP2ADD = 0x01;
 17813  2395  3001               	movlw	1
 17814  2396  009A               	movwf	26	;volatile
 17815  2397                     l5979:
 17816                           
 17817                           ;mcc_generated_files/spi2.c: 74:     TRISAbits.TRISA5 = 0;
 17818  2397  0021               	movlb	1	; select bank1
 17819  2398  128C               	bcf	12,5	;volatile
 17820  2399                     l5981:
 17821                           
 17822                           ;mcc_generated_files/spi2.c: 75:     SSP2CON1bits.SSPEN = 0;
 17823  2399  0024               	movlb	4	; select bank4
 17824  239A  129D               	bcf	29,5	;volatile
 17825  239B                     l382:
 17826  239B  0008               	return
 17827  239C                     __end_of_SPI2_Initialize:
 17828                           
 17829                           	psect	text62
 17830  2105                     __ptext62:	
 17831 ;; *************** function _PMD_Initialize *****************
 17832 ;; Defined at:
 17833 ;;		line 87 in file "mcc_generated_files/mcc.c"
 17834 ;; Parameters:    Size  Location     Type
 17835 ;;		None
 17836 ;; Auto vars:     Size  Location     Type
 17837 ;;		None
 17838 ;; Return value:  Size  Location     Type
 17839 ;;                  1    wreg      void 
 17840 ;; Registers used:
 17841 ;;		status,2
 17842 ;; Tracked objects:
 17843 ;;		On entry : 0/0
 17844 ;;		On exit  : 0/0
 17845 ;;		Unchanged: 0/0
 17846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17851 ;;Total ram usage:        0 bytes
 17852 ;; Hardware stack levels used: 1
 17853 ;; Hardware stack levels required when called: 11
 17854 ;; This function calls:
 17855 ;;		Nothing
 17856 ;; This function is called by:
 17857 ;;		_SYSTEM_Initialize
 17858 ;; This function uses a non-reentrant model
 17859 ;;
 17860                           
 17861                           
 17862                           ;psect for function _PMD_Initialize
 17863  2105                     _PMD_Initialize:
 17864  2105                     l5971:	
 17865                           ;incstack = 0
 17866                           ; Regs used in _PMD_Initialize: [status,2]
 17867                           
 17868                           
 17869                           ;mcc_generated_files/mcc.c: 90:     PMD0 = 0x00;
 17870  2105  0032               	movlb	18	; select bank18
 17871  2106  0191               	clrf	17	;volatile
 17872                           
 17873                           ;mcc_generated_files/mcc.c: 92:     PMD1 = 0x00;
 17874  2107  0192               	clrf	18	;volatile
 17875                           
 17876                           ;mcc_generated_files/mcc.c: 94:     PMD2 = 0x00;
 17877  2108  0193               	clrf	19	;volatile
 17878                           
 17879                           ;mcc_generated_files/mcc.c: 96:     PMD3 = 0x00;
 17880  2109  0194               	clrf	20	;volatile
 17881                           
 17882                           ;mcc_generated_files/mcc.c: 98:     PMD4 = 0x00;
 17883  210A  0195               	clrf	21	;volatile
 17884                           
 17885                           ;mcc_generated_files/mcc.c: 100:     PMD5 = 0x00;
 17886  210B  0196               	clrf	22	;volatile
 17887  210C                     l198:
 17888  210C  0008               	return
 17889  210D                     __end_of_PMD_Initialize:
 17890                           
 17891                           	psect	text63
 17892  18CE                     __ptext63:	
 17893 ;; *************** function _PIN_MANAGER_Initialize *****************
 17894 ;; Defined at:
 17895 ;;		line 59 in file "mcc_generated_files/pin_manager.c"
 17896 ;; Parameters:    Size  Location     Type
 17897 ;;		None
 17898 ;; Auto vars:     Size  Location     Type
 17899 ;;		None
 17900 ;; Return value:  Size  Location     Type
 17901 ;;                  1    wreg      void 
 17902 ;; Registers used:
 17903 ;;		wreg, status,2, status,0, pclath, cstack
 17904 ;; Tracked objects:
 17905 ;;		On entry : 0/0
 17906 ;;		On exit  : 0/0
 17907 ;;		Unchanged: 0/0
 17908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17913 ;;Total ram usage:        0 bytes
 17914 ;; Hardware stack levels used: 1
 17915 ;; Hardware stack levels required when called: 12
 17916 ;; This function calls:
 17917 ;;		_IOCCF1_SetInterruptHandler
 17918 ;;		_IOCCF2_SetInterruptHandler
 17919 ;;		_IOCCF3_SetInterruptHandler
 17920 ;; This function is called by:
 17921 ;;		_SYSTEM_Initialize
 17922 ;; This function uses a non-reentrant model
 17923 ;;
 17924                           
 17925                           
 17926                           ;psect for function _PIN_MANAGER_Initialize
 17927  18CE                     _PIN_MANAGER_Initialize:
 17928  18CE                     l5895:	
 17929                           ;incstack = 0
 17930                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17931                           
 17932                           
 17933                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 17934  18CE  0022               	movlb	2	; select bank2
 17935  18CF  018C               	clrf	12	;volatile
 17936                           
 17937                           ;mcc_generated_files/pin_manager.c: 65:     LATC = 0x00;
 17938  18D0  018E               	clrf	14	;volatile
 17939  18D1                     l5897:
 17940                           
 17941                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x07;
 17942  18D1  3007               	movlw	7
 17943  18D2  0021               	movlb	1	; select bank1
 17944  18D3  008C               	movwf	12	;volatile
 17945  18D4                     l5899:
 17946                           
 17947                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0x2F;
 17948  18D4  302F               	movlw	47
 17949  18D5  008E               	movwf	14	;volatile
 17950                           
 17951                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0x00;
 17952  18D6  0023               	movlb	3	; select bank3
 17953  18D7  018E               	clrf	14	;volatile
 17954                           
 17955                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x00;
 17956  18D8  018C               	clrf	12	;volatile
 17957                           
 17958                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
 17959  18D9  0024               	movlb	4	; select bank4
 17960  18DA  018C               	clrf	12	;volatile
 17961  18DB                     l5901:
 17962                           
 17963                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x0E;
 17964  18DB  300E               	movlw	14
 17965  18DC  008E               	movwf	14	;volatile
 17966  18DD                     l5903:
 17967                           
 17968                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
 17969  18DD  0025               	movlb	5	; select bank5
 17970  18DE  018C               	clrf	12	;volatile
 17971  18DF                     l5905:
 17972                           
 17973                           ;mcc_generated_files/pin_manager.c: 89:     ODCONC = 0x00;
 17974  18DF  018E               	clrf	14	;volatile
 17975  18E0                     l5907:
 17976                           
 17977                           ;mcc_generated_files/pin_manager.c: 94:     SLRCONA = 0x37;
 17978  18E0  3037               	movlw	55
 17979  18E1  0026               	movlb	6	; select bank6
 17980  18E2  008C               	movwf	12	;volatile
 17981  18E3                     l5909:
 17982                           
 17983                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONC = 0x3F;
 17984  18E3  303F               	movlw	63
 17985  18E4  008E               	movwf	14	;volatile
 17986  18E5                     l5911:
 17987                           
 17988                           ;mcc_generated_files/pin_manager.c: 100:     INLVLA = 0x3F;
 17989  18E5  303F               	movlw	63
 17990  18E6  0027               	movlb	7	; select bank7
 17991  18E7  008C               	movwf	12	;volatile
 17992  18E8                     l5913:
 17993                           
 17994                           ;mcc_generated_files/pin_manager.c: 101:     INLVLC = 0x3F;
 17995  18E8  303F               	movlw	63
 17996  18E9  008E               	movwf	14	;volatile
 17997  18EA                     l5915:
 17998                           
 17999                           ;mcc_generated_files/pin_manager.c: 108:     IOCCFbits.IOCCF1 = 0;
 18000  18EA  1099               	bcf	25,1	;volatile
 18001  18EB                     l5917:
 18002                           
 18003                           ;mcc_generated_files/pin_manager.c: 110:     IOCCFbits.IOCCF2 = 0;
 18004  18EB  1119               	bcf	25,2	;volatile
 18005  18EC                     l5919:
 18006                           
 18007                           ;mcc_generated_files/pin_manager.c: 112:     IOCCFbits.IOCCF3 = 0;
 18008  18EC  1199               	bcf	25,3	;volatile
 18009  18ED                     l5921:
 18010                           
 18011                           ;mcc_generated_files/pin_manager.c: 114:     IOCCNbits.IOCCN1 = 1;
 18012  18ED  1498               	bsf	24,1	;volatile
 18013  18EE                     l5923:
 18014                           
 18015                           ;mcc_generated_files/pin_manager.c: 116:     IOCCNbits.IOCCN2 = 1;
 18016  18EE  1518               	bsf	24,2	;volatile
 18017  18EF                     l5925:
 18018                           
 18019                           ;mcc_generated_files/pin_manager.c: 118:     IOCCNbits.IOCCN3 = 1;
 18020  18EF  1598               	bsf	24,3	;volatile
 18021  18F0                     l5927:
 18022                           
 18023                           ;mcc_generated_files/pin_manager.c: 120:     IOCCPbits.IOCCP1 = 0;
 18024  18F0  1097               	bcf	23,1	;volatile
 18025  18F1                     l5929:
 18026                           
 18027                           ;mcc_generated_files/pin_manager.c: 122:     IOCCPbits.IOCCP2 = 1;
 18028  18F1  1517               	bsf	23,2	;volatile
 18029  18F2                     l5931:
 18030                           
 18031                           ;mcc_generated_files/pin_manager.c: 124:     IOCCPbits.IOCCP3 = 0;
 18032  18F2  1197               	bcf	23,3	;volatile
 18033  18F3                     l5933:
 18034                           
 18035                           ;mcc_generated_files/pin_manager.c: 129:     IOCCF1_SetInterruptHandler(IOCCF1_DefaultIn
      +                          terruptHandler);
 18036  18F3  3001               	movlw	low _IOCCF1_DefaultInterruptHandler
 18037  18F4  0020               	movlb	0	; select bank0
 18038  18F5  00D1               	movwf	IOCCF1_SetInterruptHandler@InterruptHandler
 18039  18F6  3018               	movlw	high _IOCCF1_DefaultInterruptHandler
 18040  18F7  00D2               	movwf	IOCCF1_SetInterruptHandler@InterruptHandler+1
 18041  18F8  31A1  2141  3198   	fcall	_IOCCF1_SetInterruptHandler
 18042  18FB                     l5935:
 18043                           
 18044                           ;mcc_generated_files/pin_manager.c: 130:     IOCCF2_SetInterruptHandler(IOCCF2_DefaultIn
      +                          terruptHandler);
 18045  18FB  3000               	movlw	low _IOCCF2_DefaultInterruptHandler
 18046  18FC  0020               	movlb	0	; select bank0
 18047  18FD  00D1               	movwf	IOCCF2_SetInterruptHandler@InterruptHandler
 18048  18FE  3008               	movlw	high _IOCCF2_DefaultInterruptHandler
 18049  18FF  00D2               	movwf	IOCCF2_SetInterruptHandler@InterruptHandler+1
 18050  1900  31A1  214A  3198   	fcall	_IOCCF2_SetInterruptHandler
 18051  1903                     l5937:
 18052                           
 18053                           ;mcc_generated_files/pin_manager.c: 131:     IOCCF3_SetInterruptHandler(IOCCF3_DefaultIn
      +                          terruptHandler);
 18054  1903  3001               	movlw	low _IOCCF3_DefaultInterruptHandler
 18055  1904  0020               	movlb	0	; select bank0
 18056  1905  00D1               	movwf	IOCCF3_SetInterruptHandler@InterruptHandler
 18057  1906  3008               	movlw	high _IOCCF3_DefaultInterruptHandler
 18058  1907  00D2               	movwf	IOCCF3_SetInterruptHandler@InterruptHandler+1
 18059  1908  31A1  2153  3198   	fcall	_IOCCF3_SetInterruptHandler
 18060  190B                     l5939:
 18061                           
 18062                           ;mcc_generated_files/pin_manager.c: 134:     PIE0bits.IOCIE = 1;
 18063  190B  0021               	movlb	1	; select bank1
 18064  190C  1610               	bsf	16,4	;volatile
 18065  190D                     l5941:
 18066                           
 18067                           ;mcc_generated_files/pin_manager.c: 137:     RXPPS = 0x15;
 18068  190D  3015               	movlw	21
 18069  190E  003C               	movlb	28	; select bank28
 18070  190F  00A4               	movwf	36	;volatile
 18071  1910                     l5943:
 18072                           
 18073                           ;mcc_generated_files/pin_manager.c: 138:     SSP2DATPPS = 0x12;
 18074  1910  3012               	movlw	18
 18075  1911  009E               	movwf	30	;volatile
 18076  1912                     l5945:
 18077                           
 18078                           ;mcc_generated_files/pin_manager.c: 139:     RA4PPS = 0x1B;
 18079  1912  301B               	movlw	27
 18080  1913  003D               	movlb	29	; select bank29
 18081  1914  0094               	movwf	20	;volatile
 18082  1915                     l5947:
 18083                           
 18084                           ;mcc_generated_files/pin_manager.c: 140:     RC4PPS = 0x14;
 18085  1915  3014               	movlw	20
 18086  1916  00A4               	movwf	36	;volatile
 18087  1917                     l5949:
 18088                           
 18089                           ;mcc_generated_files/pin_manager.c: 141:     RA5PPS = 0x1A;
 18090  1917  301A               	movlw	26
 18091  1918  0095               	movwf	21	;volatile
 18092  1919                     l5951:
 18093                           
 18094                           ;mcc_generated_files/pin_manager.c: 142:     SSP2CLKPPS = 0x05;
 18095  1919  3005               	movlw	5
 18096  191A  003C               	movlb	28	; select bank28
 18097  191B  009D               	movwf	29	;volatile
 18098  191C                     l105:
 18099  191C  0008               	return
 18100  191D                     __end_of_PIN_MANAGER_Initialize:
 18101                           
 18102                           	psect	text64
 18103  2153                     __ptext64:	
 18104 ;; *************** function _IOCCF3_SetInterruptHandler *****************
 18105 ;; Defined at:
 18106 ;;		line 242 in file "mcc_generated_files/pin_manager.c"
 18107 ;; Parameters:    Size  Location     Type
 18108 ;;  InterruptHan    2    4[BANK0 ] PTR FTN()void 
 18109 ;;		 -> IOC_AN1_ISR(1), IOCCF3_DefaultInterruptHandler(1), 
 18110 ;; Auto vars:     Size  Location     Type
 18111 ;;		None
 18112 ;; Return value:  Size  Location     Type
 18113 ;;                  1    wreg      void 
 18114 ;; Registers used:
 18115 ;;		wreg
 18116 ;; Tracked objects:
 18117 ;;		On entry : 0/0
 18118 ;;		On exit  : 0/0
 18119 ;;		Unchanged: 0/0
 18120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18121 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18124 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18125 ;;Total ram usage:        2 bytes
 18126 ;; Hardware stack levels used: 1
 18127 ;; Hardware stack levels required when called: 11
 18128 ;; This function calls:
 18129 ;;		Nothing
 18130 ;; This function is called by:
 18131 ;;		_PIN_MANAGER_Initialize
 18132 ;;		_main
 18133 ;; This function uses a non-reentrant model
 18134 ;;
 18135                           
 18136                           
 18137                           ;psect for function _IOCCF3_SetInterruptHandler
 18138  2153                     _IOCCF3_SetInterruptHandler:
 18139  2153                     l5521:	
 18140                           ;incstack = 0
 18141                           ; Regs used in _IOCCF3_SetInterruptHandler: [wreg]
 18142                           
 18143                           
 18144                           ;mcc_generated_files/pin_manager.c: 243:     IOCCF3_InterruptHandler = InterruptHandler;
 18145  2153  0020               	movlb	0	; select bank0
 18146  2154  0852               	movf	IOCCF3_SetInterruptHandler@InterruptHandler+1,w
 18147  2155  0023               	movlb	3	; select bank3
 18148  2156  00E4               	movwf	(_IOCCF3_InterruptHandler+1)^(0+384)
 18149  2157  0020               	movlb	0	; select bank0
 18150  2158  0851               	movf	IOCCF3_SetInterruptHandler@InterruptHandler,w
 18151  2159  0023               	movlb	3	; select bank3
 18152  215A  00E3               	movwf	_IOCCF3_InterruptHandler^(0+384)
 18153  215B                     l138:
 18154  215B  0008               	return
 18155  215C                     __end_of_IOCCF3_SetInterruptHandler:
 18156                           
 18157                           	psect	text65
 18158  214A                     __ptext65:	
 18159 ;; *************** function _IOCCF2_SetInterruptHandler *****************
 18160 ;; Defined at:
 18161 ;;		line 212 in file "mcc_generated_files/pin_manager.c"
 18162 ;; Parameters:    Size  Location     Type
 18163 ;;  InterruptHan    2    4[BANK0 ] PTR FTN()void 
 18164 ;;		 -> IOC_AN2_ISR(1), IOCCF2_DefaultInterruptHandler(1), 
 18165 ;; Auto vars:     Size  Location     Type
 18166 ;;		None
 18167 ;; Return value:  Size  Location     Type
 18168 ;;                  1    wreg      void 
 18169 ;; Registers used:
 18170 ;;		wreg
 18171 ;; Tracked objects:
 18172 ;;		On entry : 0/0
 18173 ;;		On exit  : 0/0
 18174 ;;		Unchanged: 0/0
 18175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18176 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18179 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18180 ;;Total ram usage:        2 bytes
 18181 ;; Hardware stack levels used: 1
 18182 ;; Hardware stack levels required when called: 11
 18183 ;; This function calls:
 18184 ;;		Nothing
 18185 ;; This function is called by:
 18186 ;;		_PIN_MANAGER_Initialize
 18187 ;;		_main
 18188 ;; This function uses a non-reentrant model
 18189 ;;
 18190                           
 18191                           
 18192                           ;psect for function _IOCCF2_SetInterruptHandler
 18193  214A                     _IOCCF2_SetInterruptHandler:
 18194  214A                     l5519:	
 18195                           ;incstack = 0
 18196                           ; Regs used in _IOCCF2_SetInterruptHandler: [wreg]
 18197                           
 18198                           
 18199                           ;mcc_generated_files/pin_manager.c: 213:     IOCCF2_InterruptHandler = InterruptHandler;
 18200  214A  0020               	movlb	0	; select bank0
 18201  214B  0852               	movf	IOCCF2_SetInterruptHandler@InterruptHandler+1,w
 18202  214C  0023               	movlb	3	; select bank3
 18203  214D  00E6               	movwf	(_IOCCF2_InterruptHandler+1)^(0+384)
 18204  214E  0020               	movlb	0	; select bank0
 18205  214F  0851               	movf	IOCCF2_SetInterruptHandler@InterruptHandler,w
 18206  2150  0023               	movlb	3	; select bank3
 18207  2151  00E5               	movwf	_IOCCF2_InterruptHandler^(0+384)
 18208  2152                     l128:
 18209  2152  0008               	return
 18210  2153                     __end_of_IOCCF2_SetInterruptHandler:
 18211                           
 18212                           	psect	text66
 18213  2141                     __ptext66:	
 18214 ;; *************** function _IOCCF1_SetInterruptHandler *****************
 18215 ;; Defined at:
 18216 ;;		line 182 in file "mcc_generated_files/pin_manager.c"
 18217 ;; Parameters:    Size  Location     Type
 18218 ;;  InterruptHan    2    4[BANK0 ] PTR FTN()void 
 18219 ;;		 -> IOC_DI1_ISR(1), IOCCF1_DefaultInterruptHandler(1), 
 18220 ;; Auto vars:     Size  Location     Type
 18221 ;;		None
 18222 ;; Return value:  Size  Location     Type
 18223 ;;                  1    wreg      void 
 18224 ;; Registers used:
 18225 ;;		wreg
 18226 ;; Tracked objects:
 18227 ;;		On entry : 0/0
 18228 ;;		On exit  : 0/0
 18229 ;;		Unchanged: 0/0
 18230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18231 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18234 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18235 ;;Total ram usage:        2 bytes
 18236 ;; Hardware stack levels used: 1
 18237 ;; Hardware stack levels required when called: 11
 18238 ;; This function calls:
 18239 ;;		Nothing
 18240 ;; This function is called by:
 18241 ;;		_PIN_MANAGER_Initialize
 18242 ;;		_main
 18243 ;; This function uses a non-reentrant model
 18244 ;;
 18245                           
 18246                           
 18247                           ;psect for function _IOCCF1_SetInterruptHandler
 18248  2141                     _IOCCF1_SetInterruptHandler:
 18249  2141                     l5517:	
 18250                           ;incstack = 0
 18251                           ; Regs used in _IOCCF1_SetInterruptHandler: [wreg]
 18252                           
 18253                           
 18254                           ;mcc_generated_files/pin_manager.c: 183:     IOCCF1_InterruptHandler = InterruptHandler;
 18255  2141  0020               	movlb	0	; select bank0
 18256  2142  0852               	movf	IOCCF1_SetInterruptHandler@InterruptHandler+1,w
 18257  2143  0023               	movlb	3	; select bank3
 18258  2144  00E8               	movwf	(_IOCCF1_InterruptHandler+1)^(0+384)
 18259  2145  0020               	movlb	0	; select bank0
 18260  2146  0851               	movf	IOCCF1_SetInterruptHandler@InterruptHandler,w
 18261  2147  0023               	movlb	3	; select bank3
 18262  2148  00E7               	movwf	_IOCCF1_InterruptHandler^(0+384)
 18263  2149                     l118:
 18264  2149  0008               	return
 18265  214A                     __end_of_IOCCF1_SetInterruptHandler:
 18266                           
 18267                           	psect	text67
 18268  21E9                     __ptext67:	
 18269 ;; *************** function _OSCILLATOR_Initialize *****************
 18270 ;; Defined at:
 18271 ;;		line 63 in file "mcc_generated_files/mcc.c"
 18272 ;; Parameters:    Size  Location     Type
 18273 ;;		None
 18274 ;; Auto vars:     Size  Location     Type
 18275 ;;		None
 18276 ;; Return value:  Size  Location     Type
 18277 ;;                  1    wreg      void 
 18278 ;; Registers used:
 18279 ;;		wreg, status,2
 18280 ;; Tracked objects:
 18281 ;;		On entry : 0/0
 18282 ;;		On exit  : 0/0
 18283 ;;		Unchanged: 0/0
 18284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18289 ;;Total ram usage:        0 bytes
 18290 ;; Hardware stack levels used: 1
 18291 ;; Hardware stack levels required when called: 11
 18292 ;; This function calls:
 18293 ;;		Nothing
 18294 ;; This function is called by:
 18295 ;;		_SYSTEM_Initialize
 18296 ;; This function uses a non-reentrant model
 18297 ;;
 18298                           
 18299                           
 18300                           ;psect for function _OSCILLATOR_Initialize
 18301  21E9                     _OSCILLATOR_Initialize:
 18302  21E9                     l5983:	
 18303                           ;incstack = 0
 18304                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 18305                           
 18306                           
 18307                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x00;
 18308  21E9  0032               	movlb	18	; select bank18
 18309  21EA  0199               	clrf	25	;volatile
 18310                           
 18311                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
 18312  21EB  019B               	clrf	27	;volatile
 18313                           
 18314                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
 18315  21EC  019D               	clrf	29	;volatile
 18316  21ED                     l5985:
 18317                           
 18318                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x06;
 18319  21ED  3006               	movlw	6
 18320  21EE  009F               	movwf	31	;volatile
 18321  21EF                     l5987:
 18322                           
 18323                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 18324  21EF  019E               	clrf	30	;volatile
 18325  21F0                     l189:	
 18326                           ;mcc_generated_files/mcc.c: 77:     {;mcc_generated_files/mcc.c: 78:     }
 18327                           
 18328                           
 18329                           ;mcc_generated_files/mcc.c: 76:     while(PLLR == 0)
 18330  21F0  1C1C               	btfss	28,0	;volatile
 18331  21F1  29F3               	goto	u4041
 18332  21F2  29F4               	goto	u4040
 18333  21F3                     u4041:
 18334  21F3  29F0               	goto	l189
 18335  21F4                     u4040:
 18336  21F4                     l192:
 18337  21F4  0008               	return
 18338  21F5                     __end_of_OSCILLATOR_Initialize:
 18339                           
 18340                           	psect	text68
 18341  1802                     __ptext68:	
 18342 ;; *************** function _EUSART_Initialize *****************
 18343 ;; Defined at:
 18344 ;;		line 83 in file "mcc_generated_files/eusart.c"
 18345 ;; Parameters:    Size  Location     Type
 18346 ;;		None
 18347 ;; Auto vars:     Size  Location     Type
 18348 ;;		None
 18349 ;; Return value:  Size  Location     Type
 18350 ;;                  1    wreg      void 
 18351 ;; Registers used:
 18352 ;;		wreg, status,2, status,0, pclath, cstack
 18353 ;; Tracked objects:
 18354 ;;		On entry : 0/0
 18355 ;;		On exit  : 0/0
 18356 ;;		Unchanged: 0/0
 18357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18362 ;;Total ram usage:        0 bytes
 18363 ;; Hardware stack levels used: 1
 18364 ;; Hardware stack levels required when called: 12
 18365 ;; This function calls:
 18366 ;;		_EUSART_SetErrorHandler
 18367 ;;		_EUSART_SetFramingErrorHandler
 18368 ;;		_EUSART_SetOverrunErrorHandler
 18369 ;;		_EUSART_SetRxInterruptHandler
 18370 ;; This function is called by:
 18371 ;;		_SYSTEM_Initialize
 18372 ;; This function uses a non-reentrant model
 18373 ;;
 18374                           
 18375                           
 18376                           ;psect for function _EUSART_Initialize
 18377  1802                     _EUSART_Initialize:
 18378  1802                     l6019:	
 18379                           ;incstack = 0
 18380                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 18381                           
 18382                           
 18383                           ;mcc_generated_files/eusart.c: 86:     PIE1bits.RCIE = 0;
 18384  1802  0021               	movlb	1	; select bank1
 18385  1803  1291               	bcf	17,5	;volatile
 18386  1804                     l6021:
 18387                           
 18388                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
 18389  1804  30EC               	movlw	low _EUSART_Receive_ISR
 18390  1805  0020               	movlb	0	; select bank0
 18391  1806  00D1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
 18392  1807  3026               	movlw	high _EUSART_Receive_ISR
 18393  1808  00D2               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
 18394  1809  31A1  2138  3198   	fcall	_EUSART_SetRxInterruptHandler
 18395  180C                     l6023:
 18396                           
 18397                           ;mcc_generated_files/eusart.c: 91:     BAUD1CON = 0x08;
 18398  180C  3008               	movlw	8
 18399  180D  0023               	movlb	3	; select bank3
 18400  180E  009F               	movwf	31	;volatile
 18401  180F                     l6025:
 18402                           
 18403                           ;mcc_generated_files/eusart.c: 94:     RC1STA = 0x90;
 18404  180F  3090               	movlw	144
 18405  1810  009D               	movwf	29	;volatile
 18406  1811                     l6027:
 18407                           
 18408                           ;mcc_generated_files/eusart.c: 97:     TX1STA = 0x24;
 18409  1811  3024               	movlw	36
 18410  1812  009E               	movwf	30	;volatile
 18411  1813                     l6029:
 18412                           
 18413                           ;mcc_generated_files/eusart.c: 100:     SP1BRGL = 0x40;
 18414  1813  3040               	movlw	64
 18415  1814  009B               	movwf	27	;volatile
 18416  1815                     l6031:
 18417                           
 18418                           ;mcc_generated_files/eusart.c: 103:     SP1BRGH = 0x03;
 18419  1815  3003               	movlw	3
 18420  1816  009C               	movwf	28	;volatile
 18421  1817                     l6033:
 18422                           
 18423                           ;mcc_generated_files/eusart.c: 106:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
 18424  1817  3000               	movlw	low _EUSART_DefaultFramingErrorHandler
 18425  1818  0020               	movlb	0	; select bank0
 18426  1819  00D1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
 18427  181A  3018               	movlw	high _EUSART_DefaultFramingErrorHandler
 18428  181B  00D2               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
 18429  181C  31A1  2126  3198   	fcall	_EUSART_SetFramingErrorHandler
 18430  181F                     l6035:
 18431                           
 18432                           ;mcc_generated_files/eusart.c: 107:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
 18433  181F  30D0               	movlw	low _EUSART_DefaultOverrunErrorHandler
 18434  1820  0020               	movlb	0	; select bank0
 18435  1821  00D1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
 18436  1822  3020               	movlw	high _EUSART_DefaultOverrunErrorHandler
 18437  1823  00D2               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
 18438  1824  31A1  212F  3198   	fcall	_EUSART_SetOverrunErrorHandler
 18439  1827                     l6037:
 18440                           
 18441                           ;mcc_generated_files/eusart.c: 108:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
 18442  1827  30CC               	movlw	low _EUSART_DefaultErrorHandler
 18443  1828  0020               	movlb	0	; select bank0
 18444  1829  00D1               	movwf	EUSART_SetErrorHandler@interruptHandler
 18445  182A  3020               	movlw	high _EUSART_DefaultErrorHandler
 18446  182B  00D2               	movwf	EUSART_SetErrorHandler@interruptHandler+1
 18447  182C  31A1  211D  3198   	fcall	_EUSART_SetErrorHandler
 18448  182F                     l6039:
 18449                           
 18450                           ;mcc_generated_files/eusart.c: 110:     eusartRxLastError.status = 0;
 18451  182F  0021               	movlb	1	; select bank1
 18452  1830  01E7               	clrf	_eusartRxLastError^(0+128)	;volatile
 18453  1831                     l6041:
 18454                           
 18455                           ;mcc_generated_files/eusart.c: 113:     eusartRxHead = 0;
 18456  1831  0020               	movlb	0	; select bank0
 18457  1832  01CC               	clrf	_eusartRxHead	;volatile
 18458  1833                     l6043:
 18459                           
 18460                           ;mcc_generated_files/eusart.c: 114:     eusartRxTail = 0;
 18461  1833  01CB               	clrf	_eusartRxTail	;volatile
 18462  1834                     l6045:
 18463                           
 18464                           ;mcc_generated_files/eusart.c: 115:     eusartRxCount = 0;
 18465  1834  01CA               	clrf	_eusartRxCount	;volatile
 18466  1835                     l6047:
 18467                           
 18468                           ;mcc_generated_files/eusart.c: 118:     PIE1bits.RCIE = 1;
 18469  1835  0021               	movlb	1	; select bank1
 18470  1836  1691               	bsf	17,5	;volatile
 18471  1837                     l294:
 18472  1837  0008               	return
 18473  1838                     __end_of_EUSART_Initialize:
 18474                           
 18475                           	psect	text69
 18476  2138                     __ptext69:	
 18477 ;; *************** function _EUSART_SetRxInterruptHandler *****************
 18478 ;; Defined at:
 18479 ;;		line 234 in file "mcc_generated_files/eusart.c"
 18480 ;; Parameters:    Size  Location     Type
 18481 ;;  interruptHan    2    4[BANK0 ] PTR FTN()void 
 18482 ;;		 -> pRC1_ISR(1), EUSART_Receive_ISR(1), 
 18483 ;; Auto vars:     Size  Location     Type
 18484 ;;		None
 18485 ;; Return value:  Size  Location     Type
 18486 ;;                  1    wreg      void 
 18487 ;; Registers used:
 18488 ;;		wreg
 18489 ;; Tracked objects:
 18490 ;;		On entry : 0/0
 18491 ;;		On exit  : 0/0
 18492 ;;		Unchanged: 0/0
 18493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18494 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18497 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18498 ;;Total ram usage:        2 bytes
 18499 ;; Hardware stack levels used: 1
 18500 ;; Hardware stack levels required when called: 11
 18501 ;; This function calls:
 18502 ;;		Nothing
 18503 ;; This function is called by:
 18504 ;;		_EUSART_Initialize
 18505 ;;		_main
 18506 ;; This function uses a non-reentrant model
 18507 ;;
 18508                           
 18509                           
 18510                           ;psect for function _EUSART_SetRxInterruptHandler
 18511  2138                     _EUSART_SetRxInterruptHandler:
 18512  2138                     l5523:	
 18513                           ;incstack = 0
 18514                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
 18515                           
 18516                           
 18517                           ;mcc_generated_files/eusart.c: 235:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
 18518  2138  0020               	movlb	0	; select bank0
 18519  2139  0852               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
 18520  213A  0021               	movlb	1	; select bank1
 18521  213B  00D2               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
 18522  213C  0020               	movlb	0	; select bank0
 18523  213D  0851               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
 18524  213E  0021               	movlb	1	; select bank1
 18525  213F  00D1               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
 18526  2140                     l353:
 18527  2140  0008               	return
 18528  2141                     __end_of_EUSART_SetRxInterruptHandler:
 18529                           
 18530                           	psect	text70
 18531  212F                     __ptext70:	
 18532 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
 18533 ;; Defined at:
 18534 ;;		line 225 in file "mcc_generated_files/eusart.c"
 18535 ;; Parameters:    Size  Location     Type
 18536 ;;  interruptHan    2    4[BANK0 ] PTR FTN()void 
 18537 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
 18538 ;; Auto vars:     Size  Location     Type
 18539 ;;		None
 18540 ;; Return value:  Size  Location     Type
 18541 ;;                  1    wreg      void 
 18542 ;; Registers used:
 18543 ;;		wreg
 18544 ;; Tracked objects:
 18545 ;;		On entry : 0/0
 18546 ;;		On exit  : 0/0
 18547 ;;		Unchanged: 0/0
 18548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18549 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18552 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18553 ;;Total ram usage:        2 bytes
 18554 ;; Hardware stack levels used: 1
 18555 ;; Hardware stack levels required when called: 11
 18556 ;; This function calls:
 18557 ;;		Nothing
 18558 ;; This function is called by:
 18559 ;;		_EUSART_Initialize
 18560 ;; This function uses a non-reentrant model
 18561 ;;
 18562                           
 18563                           
 18564                           ;psect for function _EUSART_SetOverrunErrorHandler
 18565  212F                     _EUSART_SetOverrunErrorHandler:
 18566  212F                     l5527:	
 18567                           ;incstack = 0
 18568                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
 18569                           
 18570                           
 18571                           ;mcc_generated_files/eusart.c: 226:     EUSART_OverrunErrorHandler = interruptHandler;
 18572  212F  0020               	movlb	0	; select bank0
 18573  2130  0852               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
 18574  2131  0021               	movlb	1	; select bank1
 18575  2132  00CE               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
 18576  2133  0020               	movlb	0	; select bank0
 18577  2134  0851               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
 18578  2135  0021               	movlb	1	; select bank1
 18579  2136  00CD               	movwf	_EUSART_OverrunErrorHandler^(0+128)
 18580  2137                     l347:
 18581  2137  0008               	return
 18582  2138                     __end_of_EUSART_SetOverrunErrorHandler:
 18583                           
 18584                           	psect	text71
 18585  2126                     __ptext71:	
 18586 ;; *************** function _EUSART_SetFramingErrorHandler *****************
 18587 ;; Defined at:
 18588 ;;		line 221 in file "mcc_generated_files/eusart.c"
 18589 ;; Parameters:    Size  Location     Type
 18590 ;;  interruptHan    2    4[BANK0 ] PTR FTN()void 
 18591 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
 18592 ;; Auto vars:     Size  Location     Type
 18593 ;;		None
 18594 ;; Return value:  Size  Location     Type
 18595 ;;                  1    wreg      void 
 18596 ;; Registers used:
 18597 ;;		wreg
 18598 ;; Tracked objects:
 18599 ;;		On entry : 0/0
 18600 ;;		On exit  : 0/0
 18601 ;;		Unchanged: 0/0
 18602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18603 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18606 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18607 ;;Total ram usage:        2 bytes
 18608 ;; Hardware stack levels used: 1
 18609 ;; Hardware stack levels required when called: 11
 18610 ;; This function calls:
 18611 ;;		Nothing
 18612 ;; This function is called by:
 18613 ;;		_EUSART_Initialize
 18614 ;; This function uses a non-reentrant model
 18615 ;;
 18616                           
 18617                           
 18618                           ;psect for function _EUSART_SetFramingErrorHandler
 18619  2126                     _EUSART_SetFramingErrorHandler:
 18620  2126                     l5525:	
 18621                           ;incstack = 0
 18622                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
 18623                           
 18624                           
 18625                           ;mcc_generated_files/eusart.c: 222:     EUSART_FramingErrorHandler = interruptHandler;
 18626  2126  0020               	movlb	0	; select bank0
 18627  2127  0852               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
 18628  2128  0021               	movlb	1	; select bank1
 18629  2129  00D0               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
 18630  212A  0020               	movlb	0	; select bank0
 18631  212B  0851               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
 18632  212C  0021               	movlb	1	; select bank1
 18633  212D  00CF               	movwf	_EUSART_FramingErrorHandler^(0+128)
 18634  212E                     l344:
 18635  212E  0008               	return
 18636  212F                     __end_of_EUSART_SetFramingErrorHandler:
 18637                           
 18638                           	psect	text72
 18639  211D                     __ptext72:	
 18640 ;; *************** function _EUSART_SetErrorHandler *****************
 18641 ;; Defined at:
 18642 ;;		line 229 in file "mcc_generated_files/eusart.c"
 18643 ;; Parameters:    Size  Location     Type
 18644 ;;  interruptHan    2    4[BANK0 ] PTR FTN()void 
 18645 ;;		 -> EUSART_DefaultErrorHandler(1), 
 18646 ;; Auto vars:     Size  Location     Type
 18647 ;;		None
 18648 ;; Return value:  Size  Location     Type
 18649 ;;                  1    wreg      void 
 18650 ;; Registers used:
 18651 ;;		wreg
 18652 ;; Tracked objects:
 18653 ;;		On entry : 0/0
 18654 ;;		On exit  : 0/0
 18655 ;;		Unchanged: 0/0
 18656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18657 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18660 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18661 ;;Total ram usage:        2 bytes
 18662 ;; Hardware stack levels used: 1
 18663 ;; Hardware stack levels required when called: 11
 18664 ;; This function calls:
 18665 ;;		Nothing
 18666 ;; This function is called by:
 18667 ;;		_EUSART_Initialize
 18668 ;; This function uses a non-reentrant model
 18669 ;;
 18670                           
 18671                           
 18672                           ;psect for function _EUSART_SetErrorHandler
 18673  211D                     _EUSART_SetErrorHandler:
 18674  211D                     l5529:	
 18675                           ;incstack = 0
 18676                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
 18677                           
 18678                           
 18679                           ;mcc_generated_files/eusart.c: 230:     EUSART_ErrorHandler = interruptHandler;
 18680  211D  0020               	movlb	0	; select bank0
 18681  211E  0852               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
 18682  211F  0021               	movlb	1	; select bank1
 18683  2120  00CC               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
 18684  2121  0020               	movlb	0	; select bank0
 18685  2122  0851               	movf	EUSART_SetErrorHandler@interruptHandler,w
 18686  2123  0021               	movlb	1	; select bank1
 18687  2124  00CB               	movwf	_EUSART_ErrorHandler^(0+128)
 18688  2125                     l350:
 18689  2125  0008               	return
 18690  2126                     __end_of_EUSART_SetErrorHandler:
 18691                           
 18692                           	psect	text73
 18693  1B73                     __ptext73:	
 18694 ;; *************** function _SPI2_Open *****************
 18695 ;; Defined at:
 18696 ;;		line 78 in file "mcc_generated_files/spi2.c"
 18697 ;; Parameters:    Size  Location     Type
 18698 ;;  spi2UniqueCo    1    wreg     enum E355
 18699 ;; Auto vars:     Size  Location     Type
 18700 ;;  spi2UniqueCo    1    7[BANK0 ] enum E355
 18701 ;; Return value:  Size  Location     Type
 18702 ;;                  1    wreg      _Bool 
 18703 ;; Registers used:
 18704 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 18705 ;; Tracked objects:
 18706 ;;		On entry : 0/0
 18707 ;;		On exit  : 0/0
 18708 ;;		Unchanged: 0/0
 18709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18711 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18712 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18713 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18714 ;;Total ram usage:        4 bytes
 18715 ;; Hardware stack levels used: 1
 18716 ;; Hardware stack levels required when called: 11
 18717 ;; This function calls:
 18718 ;;		Nothing
 18719 ;; This function is called by:
 18720 ;;		_main
 18721 ;;		_MASTER0_open
 18722 ;; This function uses a non-reentrant model
 18723 ;;
 18724                           
 18725                           
 18726                           ;psect for function _SPI2_Open
 18727  1B73                     _SPI2_Open:
 18728                           
 18729                           ;incstack = 0
 18730                           ; Regs used in _SPI2_Open: [wreg-fsr0h+status,2+status,0+pclath]
 18731                           ;SPI2_Open@spi2UniqueConfiguration stored from wreg
 18732  1B73  0020               	movlb	0	; select bank0
 18733  1B74  00D4               	movwf	SPI2_Open@spi2UniqueConfiguration
 18734  1B75                     l6777:
 18735                           
 18736                           ;mcc_generated_files/spi2.c: 78: _Bool SPI2_Open(spi2_modes_t spi2UniqueConfiguration);m
      +                          cc_generated_files/spi2.c: 79: {;mcc_generated_files/spi2.c: 80:     if(!SSP2CON1bits.SS
      +                          PEN)
 18737  1B75  0024               	movlb	4	; select bank4
 18738  1B76  1A9D               	btfsc	29,5	;volatile
 18739  1B77  2B79               	goto	u5521
 18740  1B78  2B7A               	goto	u5520
 18741  1B79                     u5521:
 18742  1B79  2BCC               	goto	l6793
 18743  1B7A                     u5520:
 18744  1B7A                     l6779:
 18745                           
 18746                           ;mcc_generated_files/spi2.c: 81:     {;mcc_generated_files/spi2.c: 82:         SSP2STAT 
      +                          = spi2_configuration[spi2UniqueConfiguration].stat;
 18747  1B7A  0020               	movlb	0	; select bank0
 18748  1B7B  0854               	movf	SPI2_Open@spi2UniqueConfiguration,w
 18749  1B7C  00D1               	movwf	??_SPI2_Open
 18750  1B7D  01D2               	clrf	??_SPI2_Open+1
 18751  1B7E  35D1               	lslf	??_SPI2_Open,f
 18752  1B7F  0DD2               	rlf	??_SPI2_Open+1,f
 18753  1B80  35D1               	lslf	??_SPI2_Open,f
 18754  1B81  0DD2               	rlf	??_SPI2_Open+1,f
 18755  1B82  3015               	movlw	low ((_spi2_configuration+1)| (0+32768))
 18756  1B83  0751               	addwf	??_SPI2_Open,w
 18757  1B84  0084               	movwf	4
 18758  1B85  30A8               	movlw	high ((_spi2_configuration+1)| (0+32768))
 18759  1B86  3D52               	addwfc	??_SPI2_Open+1,w
 18760  1B87  0085               	movwf	5
 18761  1B88  0800               	movf	0,w	;code access
 18762  1B89  0024               	movlb	4	; select bank4
 18763  1B8A  009C               	movwf	28	;volatile
 18764                           
 18765                           ;mcc_generated_files/spi2.c: 83:         SSP2CON1 = spi2_configuration[spi2UniqueConfigu
      +                          ration].con1;
 18766  1B8B  0020               	movlb	0	; select bank0
 18767  1B8C  0854               	movf	SPI2_Open@spi2UniqueConfiguration,w
 18768  1B8D  00D1               	movwf	??_SPI2_Open
 18769  1B8E  01D2               	clrf	??_SPI2_Open+1
 18770  1B8F  35D1               	lslf	??_SPI2_Open,f
 18771  1B90  0DD2               	rlf	??_SPI2_Open+1,f
 18772  1B91  35D1               	lslf	??_SPI2_Open,f
 18773  1B92  0DD2               	rlf	??_SPI2_Open+1,f
 18774  1B93  3014               	movlw	low (_spi2_configuration| (0+32768))
 18775  1B94  0751               	addwf	??_SPI2_Open,w
 18776  1B95  0084               	movwf	4
 18777  1B96  30A8               	movlw	high (_spi2_configuration| (0+32768))
 18778  1B97  3D52               	addwfc	??_SPI2_Open+1,w
 18779  1B98  0085               	movwf	5
 18780  1B99  0800               	movf	0,w	;code access
 18781  1B9A  0024               	movlb	4	; select bank4
 18782  1B9B  009D               	movwf	29	;volatile
 18783  1B9C                     l6781:
 18784                           
 18785                           ;mcc_generated_files/spi2.c: 84:         SSP2CON2 = 0x00;
 18786  1B9C  019E               	clrf	30	;volatile
 18787  1B9D                     l6783:
 18788                           
 18789                           ;mcc_generated_files/spi2.c: 85:         SSP2ADD = spi2_configuration[spi2UniqueConfigur
      +                          ation].add;
 18790  1B9D  0020               	movlb	0	; select bank0
 18791  1B9E  0854               	movf	SPI2_Open@spi2UniqueConfiguration,w
 18792  1B9F  00D1               	movwf	??_SPI2_Open
 18793  1BA0  01D2               	clrf	??_SPI2_Open+1
 18794  1BA1  35D1               	lslf	??_SPI2_Open,f
 18795  1BA2  0DD2               	rlf	??_SPI2_Open+1,f
 18796  1BA3  35D1               	lslf	??_SPI2_Open,f
 18797  1BA4  0DD2               	rlf	??_SPI2_Open+1,f
 18798  1BA5  3016               	movlw	low ((_spi2_configuration+2)| (0+32768))
 18799  1BA6  0751               	addwf	??_SPI2_Open,w
 18800  1BA7  0084               	movwf	4
 18801  1BA8  30A8               	movlw	high ((_spi2_configuration+2)| (0+32768))
 18802  1BA9  3D52               	addwfc	??_SPI2_Open+1,w
 18803  1BAA  0085               	movwf	5
 18804  1BAB  0800               	movf	0,w	;code access
 18805  1BAC  0024               	movlb	4	; select bank4
 18806  1BAD  009A               	movwf	26	;volatile
 18807  1BAE                     l6785:
 18808                           
 18809                           ;mcc_generated_files/spi2.c: 86:         TRISAbits.TRISA5 = spi2_configuration[spi2Uniqu
      +                          eConfiguration].operation;
 18810  1BAE  0020               	movlb	0	; select bank0
 18811  1BAF  0854               	movf	SPI2_Open@spi2UniqueConfiguration,w
 18812  1BB0  00D1               	movwf	??_SPI2_Open
 18813  1BB1  01D2               	clrf	??_SPI2_Open+1
 18814  1BB2  35D1               	lslf	??_SPI2_Open,f
 18815  1BB3  0DD2               	rlf	??_SPI2_Open+1,f
 18816  1BB4  35D1               	lslf	??_SPI2_Open,f
 18817  1BB5  0DD2               	rlf	??_SPI2_Open+1,f
 18818  1BB6  3017               	movlw	low ((_spi2_configuration+3)| (0+32768))
 18819  1BB7  0751               	addwf	??_SPI2_Open,w
 18820  1BB8  0084               	movwf	4
 18821  1BB9  30A8               	movlw	high ((_spi2_configuration+3)| (0+32768))
 18822  1BBA  3D52               	addwfc	??_SPI2_Open+1,w
 18823  1BBB  0085               	movwf	5
 18824  1BBC  0800               	movf	0,w	;code access
 18825  1BBD  00D3               	movwf	??_SPI2_Open+2
 18826  1BBE  0ED3               	swapf	??_SPI2_Open+2,f
 18827  1BBF  0DD3               	rlf	??_SPI2_Open+2,f
 18828  1BC0  0021               	movlb	1	; select bank1
 18829  1BC1  080C               	movf	12,w	;volatile
 18830  1BC2  0020               	movlb	0	; select bank0
 18831  1BC3  0653               	xorwf	??_SPI2_Open+2,w
 18832  1BC4  39DF               	andlw	-33
 18833  1BC5  0653               	xorwf	??_SPI2_Open+2,w
 18834  1BC6  0021               	movlb	1	; select bank1
 18835  1BC7  008C               	movwf	12	;volatile
 18836  1BC8                     l6787:
 18837                           
 18838                           ;mcc_generated_files/spi2.c: 87:         SSP2CON1bits.SSPEN = 1;
 18839  1BC8  0024               	movlb	4	; select bank4
 18840  1BC9  169D               	bsf	29,5	;volatile
 18841  1BCA                     l6789:
 18842                           
 18843                           ;mcc_generated_files/spi2.c: 88:         return 1;
 18844  1BCA  3001               	movlw	1
 18845  1BCB  2BCD               	goto	l386
 18846  1BCC                     l6793:
 18847                           
 18848                           ;mcc_generated_files/spi2.c: 90:     return 0;
 18849  1BCC  3000               	movlw	0
 18850  1BCD                     l386:
 18851  1BCD  0008               	return
 18852  1BCE                     __end_of_SPI2_Open:
 18853                           
 18854                           	psect	intentry
 18855  0004                     __pintentry:	
 18856 ;; *************** function _INTERRUPT_InterruptManager *****************
 18857 ;; Defined at:
 18858 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 18859 ;; Parameters:    Size  Location     Type
 18860 ;;		None
 18861 ;; Auto vars:     Size  Location     Type
 18862 ;;		None
 18863 ;; Return value:  Size  Location     Type
 18864 ;;                  1    wreg      void 
 18865 ;; Registers used:
 18866 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18867 ;; Tracked objects:
 18868 ;;		On entry : 0/0
 18869 ;;		On exit  : 0/0
 18870 ;;		Unchanged: 0/0
 18871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18876 ;;Total ram usage:        0 bytes
 18877 ;; Hardware stack levels used: 1
 18878 ;; Hardware stack levels required when called: 10
 18879 ;; This function calls:
 18880 ;;		Absolute function
 18881 ;;		_EUSART_Receive_ISR
 18882 ;;		_PIN_MANAGER_IOC
 18883 ;;		_TMR1_ISR
 18884 ;;		_TMR2_ISR
 18885 ;;		_pRC1_ISR
 18886 ;; This function is called by:
 18887 ;;		Interrupt level 1
 18888 ;; This function uses a non-reentrant model
 18889 ;;
 18890                           
 18891  0004                     _INTERRUPT_InterruptManager:
 18892                           
 18893                           ;incstack = 0
 18894 ;; hardware stack exceeded
 18895  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 18896                           
 18897                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18898  0005  3180               	pagesel	$
 18899  0006                     i1l7063:
 18900                           
 18901                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.IOCIE == 1 && PIR0bits.IOC
      +                          IF == 1)
 18902  0006  0021               	movlb	1	; select bank1
 18903  0007  1E10               	btfss	16,4	;volatile
 18904  0008  280A               	goto	u592_21
 18905  0009  280B               	goto	u592_20
 18906  000A                     u592_21:
 18907  000A  2814               	goto	i1l221
 18908  000B                     u592_20:
 18909  000B                     i1l7065:
 18910  000B  0020               	movlb	0	; select bank0
 18911  000C  1E10               	btfss	16,4	;volatile
 18912  000D  280F               	goto	u593_21
 18913  000E  2810               	goto	u593_20
 18914  000F                     u593_21:
 18915  000F  2814               	goto	i1l221
 18916  0010                     u593_20:
 18917  0010                     i1l7067:
 18918                           
 18919                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
 18920  0010  31A4  2423  3180   	fcall	_PIN_MANAGER_IOC
 18921                           
 18922                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 18923  0013  2845               	goto	i1l231
 18924  0014                     i1l221:	
 18925                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 18926                           
 18927  0014  1F0B               	btfss	11,6	;volatile
 18928  0015  2817               	goto	u594_21
 18929  0016  2818               	goto	u594_20
 18930  0017                     u594_21:
 18931  0017  2845               	goto	i1l231
 18932  0018                     u594_20:
 18933  0018                     i1l7069:
 18934                           
 18935                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
 18936  0018  0021               	movlb	1	; select bank1
 18937  0019  1C91               	btfss	17,1	;volatile
 18938  001A  281C               	goto	u595_21
 18939  001B  281D               	goto	u595_20
 18940  001C                     u595_21:
 18941  001C  2826               	goto	i1l224
 18942  001D                     u595_20:
 18943  001D                     i1l7071:
 18944  001D  0020               	movlb	0	; select bank0
 18945  001E  1C91               	btfss	17,1	;volatile
 18946  001F  2821               	goto	u596_21
 18947  0020  2822               	goto	u596_20
 18948  0021                     u596_21:
 18949  0021  2826               	goto	i1l224
 18950  0022                     u596_20:
 18951  0022                     i1l7073:
 18952                           
 18953                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR2_ISR();
 18954  0022  31A2  229C  3180   	fcall	_TMR2_ISR
 18955                           
 18956                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 18957  0025  2845               	goto	i1l231
 18958  0026                     i1l224:	
 18959                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.TMR1IE == 1 && PI
      +                          R1bits.TMR1IF == 1)
 18960                           
 18961  0026  0021               	movlb	1	; select bank1
 18962  0027  1C11               	btfss	17,0	;volatile
 18963  0028  282A               	goto	u597_21
 18964  0029  282B               	goto	u597_20
 18965  002A                     u597_21:
 18966  002A  2834               	goto	i1l226
 18967  002B                     u597_20:
 18968  002B                     i1l7075:
 18969  002B  0020               	movlb	0	; select bank0
 18970  002C  1C11               	btfss	17,0	;volatile
 18971  002D  282F               	goto	u598_21
 18972  002E  2830               	goto	u598_20
 18973  002F                     u598_21:
 18974  002F  2834               	goto	i1l226
 18975  0030                     u598_20:
 18976  0030                     i1l7077:
 18977                           
 18978                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR1_ISR();
 18979  0030  31A3  23B1  3180   	fcall	_TMR1_ISR
 18980                           
 18981                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 18982  0033  2845               	goto	i1l231
 18983  0034                     i1l226:	
 18984                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
 18985                           
 18986  0034  0021               	movlb	1	; select bank1
 18987  0035  1E91               	btfss	17,5	;volatile
 18988  0036  2838               	goto	u599_21
 18989  0037  2839               	goto	u599_20
 18990  0038                     u599_21:
 18991  0038  2845               	goto	i1l225
 18992  0039                     u599_20:
 18993  0039                     i1l7079:
 18994  0039  0020               	movlb	0	; select bank0
 18995  003A  1E91               	btfss	17,5	;volatile
 18996  003B  283D               	goto	u600_21
 18997  003C  283E               	goto	u600_20
 18998  003D                     u600_21:
 18999  003D  2845               	goto	i1l225
 19000  003E                     u600_20:
 19001  003E                     i1l7081:
 19002                           
 19003                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART_RxDefaultInterruptHandler();
 19004  003E  0021               	movlb	1	; select bank1
 19005  003F  0852               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
 19006  0040  008A               	movwf	10
 19007  0041  0851               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
 19008  0042  000A               	callw
 19009  0043  3180               	pagesel	$
 19010                           
 19011                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 19012  0044  2845               	goto	i1l231
 19013  0045                     i1l225:
 19014  0045                     i1l231:	
 19015                           ;mcc_generated_files/interrupt_manager.c: 77:     }
 19016                           
 19017  0045  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 19018  0046  0009               	retfie
 19019  0047                     __end_of_INTERRUPT_InterruptManager:
 19020                           
 19021                           	psect	text75
 19022  26EC                     __ptext75:	
 19023 ;; *************** function _EUSART_Receive_ISR *****************
 19024 ;; Defined at:
 19025 ;;		line 173 in file "mcc_generated_files/eusart.c"
 19026 ;; Parameters:    Size  Location     Type
 19027 ;;		None
 19028 ;; Auto vars:     Size  Location     Type
 19029 ;;		None
 19030 ;; Return value:  Size  Location     Type
 19031 ;;                  1    wreg      void 
 19032 ;; Registers used:
 19033 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19034 ;; Tracked objects:
 19035 ;;		On entry : 0/0
 19036 ;;		On exit  : 0/0
 19037 ;;		Unchanged: 0/0
 19038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19043 ;;Total ram usage:        0 bytes
 19044 ;; Hardware stack levels used: 1
 19045 ;; Hardware stack levels required when called: 2
 19046 ;; This function calls:
 19047 ;;		Absolute function
 19048 ;;		_EUSART_DefaultErrorHandler
 19049 ;;		_EUSART_DefaultFramingErrorHandler
 19050 ;;		_EUSART_DefaultOverrunErrorHandler
 19051 ;;		_EUSART_RxDataHandler
 19052 ;; This function is called by:
 19053 ;;		_EUSART_Initialize
 19054 ;;		_INTERRUPT_InterruptManager
 19055 ;; This function uses a non-reentrant model
 19056 ;;
 19057                           
 19058                           
 19059                           ;psect for function _EUSART_Receive_ISR
 19060  26EC                     _EUSART_Receive_ISR:
 19061  26EC                     i1l6839:	
 19062                           ;incstack = 0
 19063                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19064                           
 19065                           
 19066                           ;mcc_generated_files/eusart.c: 176:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 19067  26EC  0020               	movlb	0	; select bank0
 19068  26ED  084C               	movf	_eusartRxHead,w	;volatile
 19069  26EE  3EB2               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 19070  26EF  0086               	movwf	6
 19071  26F0  3001               	movlw	1	; select bank3/4
 19072  26F1  0087               	movwf	7
 19073  26F2  0181               	clrf	1
 19074  26F3                     i1l6841:
 19075                           
 19076                           ;mcc_generated_files/eusart.c: 178:     if(RC1STAbits.FERR){
 19077  26F3  0023               	movlb	3	; select bank3
 19078  26F4  1D1D               	btfss	29,2	;volatile
 19079  26F5  2EF7               	goto	u558_21
 19080  26F6  2EF8               	goto	u558_20
 19081  26F7                     u558_21:
 19082  26F7  2F05               	goto	i1l6847
 19083  26F8                     u558_20:
 19084  26F8                     i1l6843:
 19085                           
 19086                           ;mcc_generated_files/eusart.c: 179:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 19087  26F8  0020               	movlb	0	; select bank0
 19088  26F9  084C               	movf	_eusartRxHead,w	;volatile
 19089  26FA  3EB2               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 19090  26FB  0086               	movwf	6
 19091  26FC  3001               	movlw	1	; select bank3/4
 19092  26FD  0087               	movwf	7
 19093  26FE  1481               	bsf	1,1
 19094  26FF                     i1l6845:
 19095                           
 19096                           ;mcc_generated_files/eusart.c: 180:         EUSART_FramingErrorHandler();
 19097  26FF  0021               	movlb	1	; select bank1
 19098  2700  0850               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
 19099  2701  008A               	movwf	10
 19100  2702  084F               	movf	_EUSART_FramingErrorHandler^(0+128),w
 19101  2703  000A               	callw
 19102  2704  31A6               	pagesel	$
 19103  2705                     i1l6847:
 19104                           
 19105                           ;mcc_generated_files/eusart.c: 183:     if(RC1STAbits.OERR){
 19106  2705  0023               	movlb	3	; select bank3
 19107  2706  1C9D               	btfss	29,1	;volatile
 19108  2707  2F09               	goto	u559_21
 19109  2708  2F0A               	goto	u559_20
 19110  2709                     u559_21:
 19111  2709  2F17               	goto	i1l6853
 19112  270A                     u559_20:
 19113  270A                     i1l6849:
 19114                           
 19115                           ;mcc_generated_files/eusart.c: 184:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 19116  270A  0020               	movlb	0	; select bank0
 19117  270B  084C               	movf	_eusartRxHead,w	;volatile
 19118  270C  3EB2               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 19119  270D  0086               	movwf	6
 19120  270E  3001               	movlw	1	; select bank3/4
 19121  270F  0087               	movwf	7
 19122  2710  1501               	bsf	1,2
 19123  2711                     i1l6851:
 19124                           
 19125                           ;mcc_generated_files/eusart.c: 185:         EUSART_OverrunErrorHandler();
 19126  2711  0021               	movlb	1	; select bank1
 19127  2712  084E               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
 19128  2713  008A               	movwf	10
 19129  2714  084D               	movf	_EUSART_OverrunErrorHandler^(0+128),w
 19130  2715  000A               	callw
 19131  2716  31A6               	pagesel	$
 19132  2717                     i1l6853:
 19133                           
 19134                           ;mcc_generated_files/eusart.c: 188:     if(eusartRxStatusBuffer[eusartRxHead].status){
 19135  2717  0020               	movlb	0	; select bank0
 19136  2718  084C               	movf	_eusartRxHead,w	;volatile
 19137  2719  3EB2               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 19138  271A  0086               	movwf	6
 19139  271B  3001               	movlw	1	; select bank3/4
 19140  271C  0087               	movwf	7
 19141  271D  0801               	movf	1,w
 19142  271E  1903               	btfsc	3,2
 19143  271F  2F21               	goto	u560_21
 19144  2720  2F22               	goto	u560_20
 19145  2721                     u560_21:
 19146  2721  2F29               	goto	i1l6857
 19147  2722                     u560_20:
 19148  2722                     i1l6855:
 19149                           
 19150                           ;mcc_generated_files/eusart.c: 189:         EUSART_ErrorHandler();
 19151  2722  0021               	movlb	1	; select bank1
 19152  2723  084C               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
 19153  2724  008A               	movwf	10
 19154  2725  084B               	movf	_EUSART_ErrorHandler^(0+128),w
 19155  2726  000A               	callw
 19156  2727  31A6               	pagesel	$
 19157                           
 19158                           ;mcc_generated_files/eusart.c: 190:     } else {
 19159  2728  2F2C               	goto	i1l328
 19160  2729                     i1l6857:
 19161                           
 19162                           ;mcc_generated_files/eusart.c: 191:         EUSART_RxDataHandler();
 19163  2729  31A4  246E  31A6   	fcall	_EUSART_RxDataHandler
 19164  272C                     i1l328:
 19165  272C  0008               	return
 19166  272D                     __end_of_EUSART_Receive_ISR:
 19167                           
 19168                           	psect	text76
 19169  1E88                     __ptext76:	
 19170 ;; *************** function _pRC1_ISR *****************
 19171 ;; Defined at:
 19172 ;;		line 1470 in file "main.c"
 19173 ;; Parameters:    Size  Location     Type
 19174 ;;		None
 19175 ;; Auto vars:     Size  Location     Type
 19176 ;;  cha             1    3[BANK0 ] unsigned char 
 19177 ;; Return value:  Size  Location     Type
 19178 ;;                  1    wreg      void 
 19179 ;; Registers used:
 19180 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19181 ;; Tracked objects:
 19182 ;;		On entry : 0/0
 19183 ;;		On exit  : 0/0
 19184 ;;		Unchanged: 0/0
 19185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19187 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19188 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19189 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19190 ;;Total ram usage:        2 bytes
 19191 ;; Hardware stack levels used: 1
 19192 ;; Hardware stack levels required when called: 6
 19193 ;; This function calls:
 19194 ;;		_butt1Pres
 19195 ;;		_butt2Pres
 19196 ;;		_protRCV
 19197 ;;		i1_allBodyVal
 19198 ;;		i1_butt3Pres
 19199 ;;		i1_rstDragon
 19200 ;;		i1_rstRefri
 19201 ;; This function is called by:
 19202 ;;		_main
 19203 ;;		_INTERRUPT_InterruptManager
 19204 ;; This function uses a non-reentrant model
 19205 ;;
 19206                           
 19207                           
 19208                           ;psect for function _pRC1_ISR
 19209  1E88                     _pRC1_ISR:
 19210  1E88                     i1l6973:	
 19211                           ;incstack = 0
 19212                           ; Regs used in _pRC1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19213                           
 19214                           
 19215                           ;main.c: 1471:     char cha = RC1REG;
 19216  1E88  0023               	movlb	3	; select bank3
 19217  1E89  0819               	movf	25,w	;volatile
 19218  1E8A  0020               	movlb	0	; select bank0
 19219  1E8B  00CF               	movwf	??_pRC1_ISR
 19220  1E8C  084F               	movf	??_pRC1_ISR,w
 19221  1E8D  00D0               	movwf	pRC1_ISR@cha
 19222  1E8E                     i1l6975:
 19223                           
 19224                           ;main.c: 1472:     if(cha == 'o')
 19225  1E8E  306F               	movlw	111
 19226  1E8F  0650               	xorwf	pRC1_ISR@cha,w
 19227  1E90  1D03               	btfss	3,2
 19228  1E91  2E93               	goto	u579_21
 19229  1E92  2E94               	goto	u579_20
 19230  1E93                     u579_21:
 19231  1E93  2E99               	goto	i1l6979
 19232  1E94                     u579_20:
 19233  1E94                     i1l6977:
 19234                           
 19235                           ;main.c: 1473:         butt3Pres(1);
 19236  1E94  3001               	movlw	1
 19237  1E95  31A5  25D3  319E   	fcall	i1_butt3Pres
 19238  1E98  2F38               	goto	i1l7035
 19239  1E99                     i1l6979:
 19240  1E99  3064               	movlw	100
 19241  1E9A  0650               	xorwf	pRC1_ISR@cha,w
 19242  1E9B  1D03               	btfss	3,2
 19243  1E9C  2E9E               	goto	u580_21
 19244  1E9D  2E9F               	goto	u580_20
 19245  1E9E                     u580_21:
 19246  1E9E  2EA4               	goto	i1l6983
 19247  1E9F                     u580_20:
 19248  1E9F                     i1l6981:
 19249                           
 19250                           ;main.c: 1475:         butt3Pres(0);
 19251  1E9F  3000               	movlw	0
 19252  1EA0  31A5  25D3  319E   	fcall	i1_butt3Pres
 19253  1EA3  2F38               	goto	i1l7035
 19254  1EA4                     i1l6983:
 19255  1EA4  3061               	movlw	97
 19256  1EA5  0650               	xorwf	pRC1_ISR@cha,w
 19257  1EA6  1D03               	btfss	3,2
 19258  1EA7  2EA9               	goto	u581_21
 19259  1EA8  2EAA               	goto	u581_20
 19260  1EA9                     u581_21:
 19261  1EA9  2EAF               	goto	i1l6987
 19262  1EAA                     u581_20:
 19263  1EAA                     i1l6985:
 19264                           
 19265                           ;main.c: 1477:         butt1Pres(0);
 19266  1EAA  3000               	movlw	0
 19267  1EAB  31A0  20F5  319E   	fcall	_butt1Pres
 19268  1EAE  2F38               	goto	i1l7035
 19269  1EAF                     i1l6987:
 19270  1EAF  3062               	movlw	98
 19271  1EB0  0650               	xorwf	pRC1_ISR@cha,w
 19272  1EB1  1D03               	btfss	3,2
 19273  1EB2  2EB4               	goto	u582_21
 19274  1EB3  2EB5               	goto	u582_20
 19275  1EB4                     u582_21:
 19276  1EB4  2EBA               	goto	i1l6991
 19277  1EB5                     u582_20:
 19278  1EB5                     i1l6989:
 19279                           
 19280                           ;main.c: 1479:         butt2Pres(0);
 19281  1EB5  3000               	movlw	0
 19282  1EB6  31A0  20D8  319E   	fcall	_butt2Pres
 19283  1EB9  2F38               	goto	i1l7035
 19284  1EBA                     i1l6991:
 19285  1EBA  3067               	movlw	103
 19286  1EBB  0650               	xorwf	pRC1_ISR@cha,w
 19287  1EBC  1D03               	btfss	3,2
 19288  1EBD  2EBF               	goto	u583_21
 19289  1EBE  2EC0               	goto	u583_20
 19290  1EBF                     u583_21:
 19291  1EBF  2EC5               	goto	i1l6995
 19292  1EC0                     u583_20:
 19293  1EC0                     i1l6993:
 19294                           
 19295                           ;main.c: 1481:         rstDragon(1);
 19296  1EC0  3001               	movlw	1
 19297  1EC1  31A5  2574  319E   	fcall	i1_rstDragon
 19298  1EC4  2F38               	goto	i1l7035
 19299  1EC5                     i1l6995:
 19300  1EC5  3072               	movlw	114
 19301  1EC6  0650               	xorwf	pRC1_ISR@cha,w
 19302  1EC7  1D03               	btfss	3,2
 19303  1EC8  2ECA               	goto	u584_21
 19304  1EC9  2ECB               	goto	u584_20
 19305  1ECA                     u584_21:
 19306  1ECA  2ED0               	goto	i1l6999
 19307  1ECB                     u584_20:
 19308  1ECB                     i1l6997:
 19309                           
 19310                           ;main.c: 1483:         rstRefri(1);
 19311  1ECB  3001               	movlw	1
 19312  1ECC  31A3  2311  319E   	fcall	i1_rstRefri
 19313  1ECF  2F38               	goto	i1l7035
 19314  1ED0                     i1l6999:
 19315  1ED0  3052               	movlw	82
 19316  1ED1  0650               	xorwf	pRC1_ISR@cha,w
 19317  1ED2  1D03               	btfss	3,2
 19318  1ED3  2ED5               	goto	u585_21
 19319  1ED4  2ED6               	goto	u585_20
 19320  1ED5                     u585_21:
 19321  1ED5  2EDF               	goto	i1l7005
 19322  1ED6                     u585_20:
 19323  1ED6                     i1l7001:
 19324                           
 19325                           ;main.c: 1485:         genVal = 1;
 19326  1ED6  01B5               	clrf	_genVal
 19327  1ED7  0AB5               	incf	_genVal,f
 19328  1ED8                     i1l7003:
 19329                           
 19330                           ;main.c: 1486:         allBodyVal(255, 1);
 19331  1ED8  01F9               	clrf	i1allBodyVal@color
 19332  1ED9  0AF9               	incf	i1allBodyVal@color,f
 19333  1EDA  30FF               	movlw	255
 19334  1EDB  31A4  2489  319E   	fcall	i1_allBodyVal
 19335                           
 19336                           ;main.c: 1487:     }else if(cha == 'G') {
 19337  1EDE  2F38               	goto	i1l7035
 19338  1EDF                     i1l7005:
 19339  1EDF  3047               	movlw	71
 19340  1EE0  0650               	xorwf	pRC1_ISR@cha,w
 19341  1EE1  1D03               	btfss	3,2
 19342  1EE2  2EE4               	goto	u586_21
 19343  1EE3  2EE5               	goto	u586_20
 19344  1EE4                     u586_21:
 19345  1EE4  2EEC               	goto	i1l7011
 19346  1EE5                     u586_20:
 19347  1EE5                     i1l7007:
 19348                           
 19349                           ;main.c: 1488:         genVal = 0;
 19350  1EE5  01B5               	clrf	_genVal
 19351  1EE6                     i1l7009:
 19352                           
 19353                           ;main.c: 1489:         allBodyVal(255, 0);
 19354  1EE6  01F9               	clrf	i1allBodyVal@color
 19355  1EE7  30FF               	movlw	255
 19356  1EE8  31A4  2489  319E   	fcall	i1_allBodyVal
 19357                           
 19358                           ;main.c: 1490:     }else if(cha == 'B') {
 19359  1EEB  2F38               	goto	i1l7035
 19360  1EEC                     i1l7011:
 19361  1EEC  3042               	movlw	66
 19362  1EED  0650               	xorwf	pRC1_ISR@cha,w
 19363  1EEE  1D03               	btfss	3,2
 19364  1EEF  2EF1               	goto	u587_21
 19365  1EF0  2EF2               	goto	u587_20
 19366  1EF1                     u587_21:
 19367  1EF1  2EFF               	goto	i1l7017
 19368  1EF2                     u587_20:
 19369  1EF2                     i1l7013:
 19370                           
 19371                           ;main.c: 1491:         genVal = 2;
 19372  1EF2  3002               	movlw	2
 19373  1EF3  00CF               	movwf	??_pRC1_ISR
 19374  1EF4  084F               	movf	??_pRC1_ISR,w
 19375  1EF5  00B5               	movwf	_genVal
 19376  1EF6                     i1l7015:
 19377                           
 19378                           ;main.c: 1492:         allBodyVal(255, 2);
 19379  1EF6  3002               	movlw	2
 19380  1EF7  00CF               	movwf	??_pRC1_ISR
 19381  1EF8  084F               	movf	??_pRC1_ISR,w
 19382  1EF9  00F9               	movwf	i1allBodyVal@color
 19383  1EFA  30FF               	movlw	255
 19384  1EFB  31A4  2489  319E   	fcall	i1_allBodyVal
 19385                           
 19386                           ;main.c: 1493:     }else if(cha == 'P') {
 19387  1EFE  2F38               	goto	i1l7035
 19388  1EFF                     i1l7017:
 19389  1EFF  3050               	movlw	80
 19390  1F00  0650               	xorwf	pRC1_ISR@cha,w
 19391  1F01  1D03               	btfss	3,2
 19392  1F02  2F04               	goto	u588_21
 19393  1F03  2F05               	goto	u588_20
 19394  1F04                     u588_21:
 19395  1F04  2F12               	goto	i1l7023
 19396  1F05                     u588_20:
 19397  1F05                     i1l7019:
 19398                           
 19399                           ;main.c: 1494:         genVal = 4;
 19400  1F05  3004               	movlw	4
 19401  1F06  00CF               	movwf	??_pRC1_ISR
 19402  1F07  084F               	movf	??_pRC1_ISR,w
 19403  1F08  00B5               	movwf	_genVal
 19404  1F09                     i1l7021:
 19405                           
 19406                           ;main.c: 1495:         allBodyVal(255, 4);
 19407  1F09  3004               	movlw	4
 19408  1F0A  00CF               	movwf	??_pRC1_ISR
 19409  1F0B  084F               	movf	??_pRC1_ISR,w
 19410  1F0C  00F9               	movwf	i1allBodyVal@color
 19411  1F0D  30FF               	movlw	255
 19412  1F0E  31A4  2489  319E   	fcall	i1_allBodyVal
 19413                           
 19414                           ;main.c: 1496:     }else if(cha == 'Y') {
 19415  1F11  2F38               	goto	i1l7035
 19416  1F12                     i1l7023:
 19417  1F12  3059               	movlw	89
 19418  1F13  0650               	xorwf	pRC1_ISR@cha,w
 19419  1F14  1D03               	btfss	3,2
 19420  1F15  2F17               	goto	u589_21
 19421  1F16  2F18               	goto	u589_20
 19422  1F17                     u589_21:
 19423  1F17  2F25               	goto	i1l7029
 19424  1F18                     u589_20:
 19425  1F18                     i1l7025:
 19426                           
 19427                           ;main.c: 1497:         genVal = 3;
 19428  1F18  3003               	movlw	3
 19429  1F19  00CF               	movwf	??_pRC1_ISR
 19430  1F1A  084F               	movf	??_pRC1_ISR,w
 19431  1F1B  00B5               	movwf	_genVal
 19432  1F1C                     i1l7027:
 19433                           
 19434                           ;main.c: 1498:         allBodyVal(255, 3);
 19435  1F1C  3003               	movlw	3
 19436  1F1D  00CF               	movwf	??_pRC1_ISR
 19437  1F1E  084F               	movf	??_pRC1_ISR,w
 19438  1F1F  00F9               	movwf	i1allBodyVal@color
 19439  1F20  30FF               	movlw	255
 19440  1F21  31A4  2489  319E   	fcall	i1_allBodyVal
 19441                           
 19442                           ;main.c: 1499:     }else if(cha == 'C') {
 19443  1F24  2F38               	goto	i1l7035
 19444  1F25                     i1l7029:
 19445  1F25  3043               	movlw	67
 19446  1F26  0650               	xorwf	pRC1_ISR@cha,w
 19447  1F27  1D03               	btfss	3,2
 19448  1F28  2F2A               	goto	u590_21
 19449  1F29  2F2B               	goto	u590_20
 19450  1F2A                     u590_21:
 19451  1F2A  2F38               	goto	i1l1396
 19452  1F2B                     u590_20:
 19453  1F2B                     i1l7031:
 19454                           
 19455                           ;main.c: 1500:         genVal = 8;
 19456  1F2B  3008               	movlw	8
 19457  1F2C  00CF               	movwf	??_pRC1_ISR
 19458  1F2D  084F               	movf	??_pRC1_ISR,w
 19459  1F2E  00B5               	movwf	_genVal
 19460  1F2F                     i1l7033:
 19461                           
 19462                           ;main.c: 1501:         allBodyVal(255, 8);
 19463  1F2F  3008               	movlw	8
 19464  1F30  00CF               	movwf	??_pRC1_ISR
 19465  1F31  084F               	movf	??_pRC1_ISR,w
 19466  1F32  00F9               	movwf	i1allBodyVal@color
 19467  1F33  30FF               	movlw	255
 19468  1F34  31A4  2489  319E   	fcall	i1_allBodyVal
 19469  1F37  2F38               	goto	i1l7035
 19470  1F38                     i1l1396:
 19471  1F38                     i1l7035:
 19472                           
 19473                           ;main.c: 1503:     protRCV(cha);
 19474  1F38  0020               	movlb	0	; select bank0
 19475  1F39  0850               	movf	pRC1_ISR@cha,w
 19476  1F3A  3198  2082  319E   	fcall	_protRCV
 19477  1F3D                     i1l7037:
 19478                           
 19479                           ;main.c: 1504:     PIR1bits.RCIF = 0;
 19480  1F3D  0020               	movlb	0	; select bank0
 19481  1F3E  1291               	bcf	17,5	;volatile
 19482  1F3F                     i1l1402:
 19483  1F3F  0008               	return
 19484  1F40                     __end_of_pRC1_ISR:
 19485                           
 19486                           	psect	text77
 19487  2311                     __ptext77:	
 19488 ;; *************** function i1_rstRefri *****************
 19489 ;; Defined at:
 19490 ;;		line 796 in file "main.c"
 19491 ;; Parameters:    Size  Location     Type
 19492 ;;  start           1    wreg     unsigned char 
 19493 ;; Auto vars:     Size  Location     Type
 19494 ;;  start           1    0[BANK0 ] unsigned char 
 19495 ;; Return value:  Size  Location     Type
 19496 ;;                  1    wreg      void 
 19497 ;; Registers used:
 19498 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19499 ;; Tracked objects:
 19500 ;;		On entry : 0/0
 19501 ;;		On exit  : 0/0
 19502 ;;		Unchanged: 0/0
 19503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19505 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19506 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19507 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19508 ;;Total ram usage:        2 bytes
 19509 ;; Hardware stack levels used: 1
 19510 ;; Hardware stack levels required when called: 3
 19511 ;; This function calls:
 19512 ;;		i1_refriShoulderTool
 19513 ;; This function is called by:
 19514 ;;		_pRC1_ISR
 19515 ;; This function uses a non-reentrant model
 19516 ;;
 19517                           
 19518                           
 19519                           ;psect for function i1_rstRefri
 19520  2311                     i1_rstRefri:
 19521                           
 19522                           ;incstack = 0
 19523                           ; Regs used in i1_rstRefri: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19524                           ;i1rstRefri@start stored from wreg
 19525  2311  0020               	movlb	0	; select bank0
 19526  2312  00CD               	movwf	i1rstRefri@start
 19527  2313                     i1l6767:
 19528                           
 19529                           ;main.c: 797:     intensityRefri = 0;
 19530  2313  01BB               	clrf	_intensityRefri
 19531                           
 19532                           ;main.c: 798:     indexRefri = 0;
 19533  2314  0021               	movlb	1	; select bank1
 19534  2315  01D9               	clrf	_indexRefri^(0+128)
 19535                           
 19536                           ;main.c: 799:     contRefri = 0;
 19537  2316  0020               	movlb	0	; select bank0
 19538  2317  01A6               	clrf	_contRefri
 19539  2318  01A7               	clrf	_contRefri+1
 19540  2319                     i1l6769:
 19541                           
 19542                           ;main.c: 800:     refriShoulderTool(start);
 19543  2319  084D               	movf	i1rstRefri@start,w
 19544  231A  3199  21BD  31A3   	fcall	i1_refriShoulderTool
 19545  231D                     i1l6771:
 19546                           
 19547                           ;main.c: 801:     runRefri = start;
 19548  231D  0020               	movlb	0	; select bank0
 19549  231E  084D               	movf	i1rstRefri@start,w
 19550  231F  00FD               	movwf	??i1_rstRefri
 19551  2320  087D               	movf	??i1_rstRefri,w
 19552  2321  0021               	movlb	1	; select bank1
 19553  2322  00DA               	movwf	_runRefri^(0+128)
 19554  2323                     i1l1088:
 19555  2323  0008               	return
 19556  2324                     __end_ofi1_rstRefri:
 19557                           
 19558                           	psect	text78
 19559  19BD                     __ptext78:	
 19560 ;; *************** function i1_refriShoulderTool *****************
 19561 ;; Defined at:
 19562 ;;		line 784 in file "main.c"
 19563 ;; Parameters:    Size  Location     Type
 19564 ;;  on              1    wreg     unsigned char 
 19565 ;; Auto vars:     Size  Location     Type
 19566 ;;  on              1   11[COMMON] unsigned char 
 19567 ;;  col             1   12[COMMON] unsigned char 
 19568 ;; Return value:  Size  Location     Type
 19569 ;;                  1    wreg      void 
 19570 ;; Registers used:
 19571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19572 ;; Tracked objects:
 19573 ;;		On entry : 0/0
 19574 ;;		On exit  : 0/0
 19575 ;;		Unchanged: 0/0
 19576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19578 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19579 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19580 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19581 ;;Total ram usage:        4 bytes
 19582 ;; Hardware stack levels used: 1
 19583 ;; Hardware stack levels required when called: 2
 19584 ;; This function calls:
 19585 ;;		i1_applyColor
 19586 ;; This function is called by:
 19587 ;;		i1_rstRefri
 19588 ;; This function uses a non-reentrant model
 19589 ;;
 19590                           
 19591                           
 19592                           ;psect for function i1_refriShoulderTool
 19593  19BD                     i1_refriShoulderTool:
 19594                           
 19595                           ;incstack = 0
 19596                           ; Regs used in i1_refriShoulderTool: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19597                           ;i1refriShoulderTool@on stored from wreg
 19598  19BD  00FB               	movwf	i1refriShoulderTool@on
 19599  19BE                     i1l5877:
 19600                           
 19601                           ;main.c: 785:     char col = 0;
 19602  19BE  01FC               	clrf	i1refriShoulderTool@col
 19603  19BF                     i1l5879:
 19604                           
 19605                           ;main.c: 786:     if(on)
 19606  19BF  087B               	movf	i1refriShoulderTool@on,w
 19607  19C0  1903               	btfsc	3,2
 19608  19C1  29C3               	goto	u400_21
 19609  19C2  29C4               	goto	u400_20
 19610  19C3                     u400_21:
 19611  19C3  29C8               	goto	i1l5883
 19612  19C4                     u400_20:
 19613  19C4                     i1l5881:
 19614                           
 19615                           ;main.c: 787:         col = 22;
 19616  19C4  3016               	movlw	22
 19617  19C5  00F9               	movwf	??i1_refriShoulderTool
 19618  19C6  0879               	movf	??i1_refriShoulderTool,w
 19619  19C7  00FC               	movwf	i1refriShoulderTool@col
 19620  19C8                     i1l5883:
 19621                           
 19622                           ;main.c: 788:     applyColor(7, col, 255);
 19623  19C8  087C               	movf	i1refriShoulderTool@col,w
 19624  19C9  00F9               	movwf	??i1_refriShoulderTool
 19625  19CA  0879               	movf	??i1_refriShoulderTool,w
 19626  19CB  00F5               	movwf	i1applyColor@color
 19627  19CC  30FF               	movlw	255
 19628  19CD  00FA               	movwf	??i1_refriShoulderTool+1
 19629  19CE  087A               	movf	??i1_refriShoulderTool+1,w
 19630  19CF  00F6               	movwf	i1applyColor@intensity
 19631  19D0  3007               	movlw	7
 19632  19D1  31A2  22FE  3199   	fcall	i1_applyColor
 19633  19D4                     i1l5885:
 19634                           
 19635                           ;main.c: 789:     applyColor(8, col, 255);
 19636  19D4  087C               	movf	i1refriShoulderTool@col,w
 19637  19D5  00F9               	movwf	??i1_refriShoulderTool
 19638  19D6  0879               	movf	??i1_refriShoulderTool,w
 19639  19D7  00F5               	movwf	i1applyColor@color
 19640  19D8  30FF               	movlw	255
 19641  19D9  00FA               	movwf	??i1_refriShoulderTool+1
 19642  19DA  087A               	movf	??i1_refriShoulderTool+1,w
 19643  19DB  00F6               	movwf	i1applyColor@intensity
 19644  19DC  3008               	movlw	8
 19645  19DD  31A2  22FE  3199   	fcall	i1_applyColor
 19646  19E0                     i1l5887:
 19647                           
 19648                           ;main.c: 790:     applyColor(5, col, 255);
 19649  19E0  087C               	movf	i1refriShoulderTool@col,w
 19650  19E1  00F9               	movwf	??i1_refriShoulderTool
 19651  19E2  0879               	movf	??i1_refriShoulderTool,w
 19652  19E3  00F5               	movwf	i1applyColor@color
 19653  19E4  30FF               	movlw	255
 19654  19E5  00FA               	movwf	??i1_refriShoulderTool+1
 19655  19E6  087A               	movf	??i1_refriShoulderTool+1,w
 19656  19E7  00F6               	movwf	i1applyColor@intensity
 19657  19E8  3005               	movlw	5
 19658  19E9  31A2  22FE  3199   	fcall	i1_applyColor
 19659  19EC                     i1l5889:
 19660                           
 19661                           ;main.c: 791:     applyColor(6, col, 255);
 19662  19EC  087C               	movf	i1refriShoulderTool@col,w
 19663  19ED  00F9               	movwf	??i1_refriShoulderTool
 19664  19EE  0879               	movf	??i1_refriShoulderTool,w
 19665  19EF  00F5               	movwf	i1applyColor@color
 19666  19F0  30FF               	movlw	255
 19667  19F1  00FA               	movwf	??i1_refriShoulderTool+1
 19668  19F2  087A               	movf	??i1_refriShoulderTool+1,w
 19669  19F3  00F6               	movwf	i1applyColor@intensity
 19670  19F4  3006               	movlw	6
 19671  19F5  31A2  22FE  3199   	fcall	i1_applyColor
 19672  19F8                     i1l5891:
 19673                           
 19674                           ;main.c: 792:     applyColor(3, col, 255);
 19675  19F8  087C               	movf	i1refriShoulderTool@col,w
 19676  19F9  00F9               	movwf	??i1_refriShoulderTool
 19677  19FA  0879               	movf	??i1_refriShoulderTool,w
 19678  19FB  00F5               	movwf	i1applyColor@color
 19679  19FC  30FF               	movlw	255
 19680  19FD  00FA               	movwf	??i1_refriShoulderTool+1
 19681  19FE  087A               	movf	??i1_refriShoulderTool+1,w
 19682  19FF  00F6               	movwf	i1applyColor@intensity
 19683  1A00  3003               	movlw	3
 19684  1A01  31A2  22FE  3199   	fcall	i1_applyColor
 19685  1A04                     i1l5893:
 19686                           
 19687                           ;main.c: 793:     applyColor(4, col, 255);
 19688  1A04  087C               	movf	i1refriShoulderTool@col,w
 19689  1A05  00F9               	movwf	??i1_refriShoulderTool
 19690  1A06  0879               	movf	??i1_refriShoulderTool,w
 19691  1A07  00F5               	movwf	i1applyColor@color
 19692  1A08  30FF               	movlw	255
 19693  1A09  00FA               	movwf	??i1_refriShoulderTool+1
 19694  1A0A  087A               	movf	??i1_refriShoulderTool+1,w
 19695  1A0B  00F6               	movwf	i1applyColor@intensity
 19696  1A0C  3004               	movlw	4
 19697  1A0D  31A2  22FE  3199   	fcall	i1_applyColor
 19698  1A10                     i1l1085:
 19699  1A10  0008               	return
 19700  1A11                     __end_ofi1_refriShoulderTool:
 19701                           
 19702                           	psect	text79
 19703  1882                     __ptext79:	
 19704 ;; *************** function _protRCV *****************
 19705 ;; Defined at:
 19706 ;;		line 1387 in file "main.c"
 19707 ;; Parameters:    Size  Location     Type
 19708 ;;  rcv             1    wreg     unsigned char 
 19709 ;; Auto vars:     Size  Location     Type
 19710 ;;  rcv             1    1[COMMON] unsigned char 
 19711 ;; Return value:  Size  Location     Type
 19712 ;;                  1    wreg      void 
 19713 ;; Registers used:
 19714 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19715 ;; Tracked objects:
 19716 ;;		On entry : 0/0
 19717 ;;		On exit  : 0/0
 19718 ;;		Unchanged: 0/0
 19719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19721 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19722 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19723 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19724 ;;Total ram usage:        2 bytes
 19725 ;; Hardware stack levels used: 1
 19726 ;; This function calls:
 19727 ;;		Nothing
 19728 ;; This function is called by:
 19729 ;;		_pRC1_ISR
 19730 ;; This function uses a non-reentrant model
 19731 ;;
 19732                           
 19733                           
 19734                           ;psect for function _protRCV
 19735  1882                     _protRCV:
 19736                           
 19737                           ;incstack = 0
 19738                           ; Regs used in _protRCV: [wreg+fsr1l+fsr1h+status,2+status,0]
 19739                           ;protRCV@rcv stored from wreg
 19740  1882  00F1               	movwf	protRCV@rcv
 19741  1883                     i1l6691:
 19742                           
 19743                           ;main.c: 1388:     if(!pInit) {
 19744  1883  0021               	movlb	1	; select bank1
 19745  1884  0855               	movf	_pInit^(0+128),w
 19746  1885  1D03               	btfss	3,2
 19747  1886  2888               	goto	u539_21
 19748  1887  2889               	goto	u539_20
 19749  1888                     u539_21:
 19750  1888  2899               	goto	i1l6701
 19751  1889                     u539_20:
 19752  1889                     i1l6693:
 19753                           
 19754                           ;main.c: 1389:         if(rcv == 13){
 19755  1889  300D               	movlw	13
 19756  188A  0671               	xorwf	protRCV@rcv,w
 19757  188B  1D03               	btfss	3,2
 19758  188C  288E               	goto	u540_21
 19759  188D  288F               	goto	u540_20
 19760  188E                     u540_21:
 19761  188E  28CD               	goto	i1l1347
 19762  188F                     u540_20:
 19763  188F                     i1l6695:
 19764                           
 19765                           ;main.c: 1390:             pCont = 0;
 19766  188F  0020               	movlb	0	; select bank0
 19767  1890  01B4               	clrf	_pCont
 19768  1891                     i1l6697:
 19769                           
 19770                           ;main.c: 1391:             pInit = 1;
 19771  1891  0021               	movlb	1	; select bank1
 19772  1892  01D5               	clrf	_pInit^(0+128)
 19773  1893  0AD5               	incf	_pInit^(0+128),f
 19774  1894                     i1l6699:
 19775                           
 19776                           ;main.c: 1392:             pTot = 6;
 19777  1894  3006               	movlw	6
 19778  1895  00F0               	movwf	??_protRCV
 19779  1896  0870               	movf	??_protRCV,w
 19780  1897  00EE               	movwf	_pTot^(0+128)
 19781  1898  28CD               	goto	i1l1347
 19782  1899                     i1l6701:
 19783  1899  086E               	movf	_pTot^(0+128),w
 19784  189A  0020               	movlb	0	; select bank0
 19785  189B  0234               	subwf	_pCont,w
 19786  189C  1803               	skipnc
 19787  189D  289F               	goto	u541_21
 19788  189E  28A0               	goto	u541_20
 19789  189F                     u541_21:
 19790  189F  28C3               	goto	i1l6711
 19791  18A0                     u541_20:
 19792  18A0                     i1l6703:
 19793                           
 19794                           ;main.c: 1395:         if(pCont == 0 && rcv < 4)
 19795  18A0  0834               	movf	_pCont,w
 19796  18A1  1D03               	btfss	3,2
 19797  18A2  28A4               	goto	u542_21
 19798  18A3  28A5               	goto	u542_20
 19799  18A4                     u542_21:
 19800  18A4  28B4               	goto	i1l1344
 19801  18A5                     u542_20:
 19802  18A5                     i1l6705:
 19803  18A5  3004               	movlw	4
 19804  18A6  0271               	subwf	protRCV@rcv,w
 19805  18A7  1803               	skipnc
 19806  18A8  28AA               	goto	u543_21
 19807  18A9  28AB               	goto	u543_20
 19808  18AA                     u543_21:
 19809  18AA  28B4               	goto	i1l1344
 19810  18AB                     u543_20:
 19811  18AB                     i1l6707:
 19812                           
 19813                           ;main.c: 1396:             pTot = packTotals[rcv];
 19814  18AB  0871               	movf	protRCV@rcv,w
 19815  18AC  3EEB               	addlw	(low (_packTotals| 0))& (0+255)
 19816  18AD  0086               	movwf	6
 19817  18AE  0187               	clrf	7
 19818  18AF  0801               	movf	1,w
 19819  18B0  00F0               	movwf	??_protRCV
 19820  18B1  0870               	movf	??_protRCV,w
 19821  18B2  0021               	movlb	1	; select bank1
 19822  18B3  00EE               	movwf	_pTot^(0+128)
 19823  18B4                     i1l1344:
 19824                           
 19825                           ;main.c: 1397:         pVals[pCont] = rcv;
 19826  18B4  0871               	movf	protRCV@rcv,w
 19827  18B5  00F0               	movwf	??_protRCV
 19828  18B6  0020               	movlb	0	; select bank0
 19829  18B7  0834               	movf	_pCont,w
 19830  18B8  3E4A               	addlw	(low (_pVals| (0+512)))& (0+255)
 19831  18B9  0086               	movwf	6
 19832  18BA  3002               	movlw	2	; select bank4/5
 19833  18BB  0087               	movwf	7
 19834  18BC  0870               	movf	??_protRCV,w
 19835  18BD  0081               	movwf	1
 19836  18BE                     i1l6709:
 19837                           
 19838                           ;main.c: 1398:         pCont++;
 19839  18BE  3001               	movlw	1
 19840  18BF  00F0               	movwf	??_protRCV
 19841  18C0  0870               	movf	??_protRCV,w
 19842  18C1  07B4               	addwf	_pCont,f
 19843                           
 19844                           ;main.c: 1399:     }else if(rcv == 10) {
 19845  18C2  28CD               	goto	i1l1347
 19846  18C3                     i1l6711:
 19847  18C3  300A               	movlw	10
 19848  18C4  0671               	xorwf	protRCV@rcv,w
 19849  18C5  1D03               	btfss	3,2
 19850  18C6  28C8               	goto	u544_21
 19851  18C7  28C9               	goto	u544_20
 19852  18C8                     u544_21:
 19853  18C8  28CD               	goto	i1l1347
 19854  18C9                     u544_20:
 19855  18C9                     i1l6713:
 19856                           
 19857                           ;main.c: 1400:         pInit = 0;
 19858  18C9  0021               	movlb	1	; select bank1
 19859  18CA  01D5               	clrf	_pInit^(0+128)
 19860  18CB                     i1l6715:
 19861                           
 19862                           ;main.c: 1401:         execChan = 1;
 19863  18CB  01D3               	clrf	_execChan^(0+128)
 19864  18CC  0AD3               	incf	_execChan^(0+128),f
 19865  18CD                     i1l1347:
 19866  18CD  0008               	return
 19867  18CE                     __end_of_protRCV:
 19868                           
 19869                           	psect	text80
 19870  229C                     __ptext80:	
 19871 ;; *************** function _TMR2_ISR *****************
 19872 ;; Defined at:
 19873 ;;		line 119 in file "mcc_generated_files/tmr2.c"
 19874 ;; Parameters:    Size  Location     Type
 19875 ;;		None
 19876 ;; Auto vars:     Size  Location     Type
 19877 ;;		None
 19878 ;; Return value:  Size  Location     Type
 19879 ;;                  1    wreg      void 
 19880 ;; Registers used:
 19881 ;;		wreg, status,2, status,0, pclath, cstack
 19882 ;; Tracked objects:
 19883 ;;		On entry : 0/0
 19884 ;;		On exit  : 0/0
 19885 ;;		Unchanged: 0/0
 19886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19891 ;;Total ram usage:        0 bytes
 19892 ;; Hardware stack levels used: 1
 19893 ;; Hardware stack levels required when called: 1
 19894 ;; This function calls:
 19895 ;;		Absolute function
 19896 ;;		_TMR2_DefaultInterruptHandler
 19897 ;;		_pTMR2_ISR
 19898 ;; This function is called by:
 19899 ;;		_INTERRUPT_InterruptManager
 19900 ;; This function uses a non-reentrant model
 19901 ;;
 19902                           
 19903                           
 19904                           ;psect for function _TMR2_ISR
 19905  229C                     _TMR2_ISR:
 19906  229C                     i1l6825:	
 19907                           ;incstack = 0
 19908                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 19909                           
 19910                           
 19911                           ;mcc_generated_files/tmr2.c: 123:     PIR1bits.TMR2IF = 0;
 19912  229C  0020               	movlb	0	; select bank0
 19913  229D  1091               	bcf	17,1	;volatile
 19914  229E                     i1l6827:
 19915                           
 19916                           ;mcc_generated_files/tmr2.c: 125:     if(TMR2_InterruptHandler)
 19917  229E  0021               	movlb	1	; select bank1
 19918  229F  0849               	movf	_TMR2_InterruptHandler^(0+128),w
 19919  22A0  044A               	iorwf	(_TMR2_InterruptHandler+1)^(0+128),w
 19920  22A1  1903               	btfsc	3,2
 19921  22A2  2AA4               	goto	u556_21
 19922  22A3  2AA5               	goto	u556_20
 19923  22A4                     u556_21:
 19924  22A4  2AAA               	goto	i1l462
 19925  22A5                     u556_20:
 19926  22A5                     i1l6829:
 19927                           
 19928                           ;mcc_generated_files/tmr2.c: 126:     {;mcc_generated_files/tmr2.c: 127:         TMR2_In
      +                          terruptHandler();
 19929  22A5  084A               	movf	(_TMR2_InterruptHandler+1)^(0+128),w
 19930  22A6  008A               	movwf	10
 19931  22A7  0849               	movf	_TMR2_InterruptHandler^(0+128),w
 19932  22A8  000A               	callw
 19933  22A9  31A2               	pagesel	$
 19934  22AA                     i1l462:
 19935  22AA  0008               	return
 19936  22AB                     __end_of_TMR2_ISR:
 19937                           
 19938                           	psect	text81
 19939  0003                     __ptext81:	
 19940 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 19941 ;; Defined at:
 19942 ;;		line 136 in file "mcc_generated_files/tmr2.c"
 19943 ;; Parameters:    Size  Location     Type
 19944 ;;		None
 19945 ;; Auto vars:     Size  Location     Type
 19946 ;;		None
 19947 ;; Return value:  Size  Location     Type
 19948 ;;                  1    wreg      void 
 19949 ;; Registers used:
 19950 ;;		None
 19951 ;; Tracked objects:
 19952 ;;		On entry : 0/0
 19953 ;;		On exit  : 0/0
 19954 ;;		Unchanged: 0/0
 19955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19960 ;;Total ram usage:        0 bytes
 19961 ;; Hardware stack levels used: 1
 19962 ;; This function calls:
 19963 ;;		Nothing
 19964 ;; This function is called by:
 19965 ;;		_TMR2_Initialize
 19966 ;;		_TMR2_ISR
 19967 ;; This function uses a non-reentrant model
 19968 ;;
 19969                           
 19970                           
 19971                           ;psect for function _TMR2_DefaultInterruptHandler
 19972  0003                     _TMR2_DefaultInterruptHandler:
 19973  0003                     i1l468:	
 19974                           ;incstack = 0
 19975                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 19976                           
 19977  0003  0008               	return
 19978  0004                     __end_of_TMR2_DefaultInterruptHandler:
 19979                           
 19980                           	psect	text82
 19981  2372                     __ptext82:	
 19982 ;; *************** function _pTMR2_ISR *****************
 19983 ;; Defined at:
 19984 ;;		line 1443 in file "main.c"
 19985 ;; Parameters:    Size  Location     Type
 19986 ;;		None
 19987 ;; Auto vars:     Size  Location     Type
 19988 ;;		None
 19989 ;; Return value:  Size  Location     Type
 19990 ;;                  1    wreg      void 
 19991 ;; Registers used:
 19992 ;;		wreg, status,2, status,0
 19993 ;; Tracked objects:
 19994 ;;		On entry : 0/0
 19995 ;;		On exit  : 0/0
 19996 ;;		Unchanged: 0/0
 19997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20000 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20001 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20002 ;;Total ram usage:        1 bytes
 20003 ;; Hardware stack levels used: 1
 20004 ;; This function calls:
 20005 ;;		Nothing
 20006 ;; This function is called by:
 20007 ;;		_main
 20008 ;;		_TMR2_ISR
 20009 ;; This function uses a non-reentrant model
 20010 ;;
 20011                           
 20012                           
 20013                           ;psect for function _pTMR2_ISR
 20014  2372                     _pTMR2_ISR:
 20015  2372                     i1l6717:	
 20016                           ;incstack = 0
 20017                           ; Regs used in _pTMR2_ISR: [wreg+status,2+status,0]
 20018                           
 20019                           
 20020                           ;main.c: 1444:     if(waiter < 50)
 20021  2372  3032               	movlw	50
 20022  2373  0020               	movlb	0	; select bank0
 20023  2374  0248               	subwf	_waiter,w
 20024  2375  1803               	skipnc
 20025  2376  2B78               	goto	u545_21
 20026  2377  2B79               	goto	u545_20
 20027  2378                     u545_21:
 20028  2378  2B7D               	goto	i1l6721
 20029  2379                     u545_20:
 20030  2379                     i1l6719:
 20031                           
 20032                           ;main.c: 1445:         waiter++;
 20033  2379  3001               	movlw	1
 20034  237A  00F0               	movwf	??_pTMR2_ISR
 20035  237B  0870               	movf	??_pTMR2_ISR,w
 20036  237C  07C8               	addwf	_waiter,f
 20037  237D                     i1l6721:
 20038                           
 20039                           ;main.c: 1446:     if(waiter > waitingTime)
 20040  237D  0848               	movf	_waiter,w
 20041  237E  0249               	subwf	_waitingTime,w
 20042  237F  1803               	skipnc
 20043  2380  2B82               	goto	u546_21
 20044  2381  2B83               	goto	u546_20
 20045  2382                     u546_21:
 20046  2382  2B84               	goto	i1l6725
 20047  2383                     u546_20:
 20048  2383                     i1l6723:
 20049                           
 20050                           ;main.c: 1447:         waitingTime = 0;
 20051  2383  01C9               	clrf	_waitingTime
 20052  2384                     i1l6725:
 20053                           
 20054                           ;main.c: 1448:     tick = 1;
 20055  2384  01C7               	clrf	_tick
 20056  2385  0AC7               	incf	_tick,f
 20057  2386                     i1l1371:
 20058  2386  0008               	return
 20059  2387                     __end_of_pTMR2_ISR:
 20060                           
 20061                           	psect	text83
 20062  23B1                     __ptext83:	
 20063 ;; *************** function _TMR1_ISR *****************
 20064 ;; Defined at:
 20065 ;;		line 157 in file "mcc_generated_files/tmr1.c"
 20066 ;; Parameters:    Size  Location     Type
 20067 ;;		None
 20068 ;; Auto vars:     Size  Location     Type
 20069 ;;		None
 20070 ;; Return value:  Size  Location     Type
 20071 ;;                  1    wreg      void 
 20072 ;; Registers used:
 20073 ;;		wreg, status,2, status,0, pclath, cstack
 20074 ;; Tracked objects:
 20075 ;;		On entry : 0/0
 20076 ;;		On exit  : 0/0
 20077 ;;		Unchanged: 0/0
 20078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20083 ;;Total ram usage:        0 bytes
 20084 ;; Hardware stack levels used: 1
 20085 ;; Hardware stack levels required when called: 1
 20086 ;; This function calls:
 20087 ;;		Absolute function
 20088 ;;		_TMR1_DefaultInterruptHandler
 20089 ;;		_TMR1_WriteTimer
 20090 ;;		_pTMR1_ISR
 20091 ;; This function is called by:
 20092 ;;		_INTERRUPT_InterruptManager
 20093 ;; This function uses a non-reentrant model
 20094 ;;
 20095                           
 20096                           
 20097                           ;psect for function _TMR1_ISR
 20098  23B1                     _TMR1_ISR:
 20099  23B1                     i1l6831:	
 20100                           ;incstack = 0
 20101                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 20102                           
 20103                           
 20104                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
 20105  23B1  0020               	movlb	0	; select bank0
 20106  23B2  1011               	bcf	17,0	;volatile
 20107  23B3                     i1l6833:
 20108                           
 20109                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
 20110  23B3  0833               	movf	_timer1ReloadVal+1,w	;volatile
 20111  23B4  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 20112  23B5  0832               	movf	_timer1ReloadVal,w	;volatile
 20113  23B6  00F0               	movwf	TMR1_WriteTimer@timerVal
 20114  23B7  31A2  22CA  31A3   	fcall	_TMR1_WriteTimer
 20115  23BA                     i1l6835:
 20116                           
 20117                           ;mcc_generated_files/tmr1.c: 164:     if(TMR1_InterruptHandler)
 20118  23BA  0021               	movlb	1	; select bank1
 20119  23BB  0847               	movf	_TMR1_InterruptHandler^(0+128),w
 20120  23BC  0448               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 20121  23BD  1903               	btfsc	3,2
 20122  23BE  2BC0               	goto	u557_21
 20123  23BF  2BC1               	goto	u557_20
 20124  23C0                     u557_21:
 20125  23C0  2BC6               	goto	i1l522
 20126  23C1                     u557_20:
 20127  23C1                     i1l6837:
 20128                           
 20129                           ;mcc_generated_files/tmr1.c: 165:     {;mcc_generated_files/tmr1.c: 166:         TMR1_In
      +                          terruptHandler();
 20130  23C1  0848               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 20131  23C2  008A               	movwf	10
 20132  23C3  0847               	movf	_TMR1_InterruptHandler^(0+128),w
 20133  23C4  000A               	callw
 20134  23C5  31A3               	pagesel	$
 20135  23C6                     i1l522:
 20136  23C6  0008               	return
 20137  23C7                     __end_of_TMR1_ISR:
 20138                           
 20139                           	psect	text84
 20140  0002                     __ptext84:	
 20141 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 20142 ;; Defined at:
 20143 ;;		line 175 in file "mcc_generated_files/tmr1.c"
 20144 ;; Parameters:    Size  Location     Type
 20145 ;;		None
 20146 ;; Auto vars:     Size  Location     Type
 20147 ;;		None
 20148 ;; Return value:  Size  Location     Type
 20149 ;;                  1    wreg      void 
 20150 ;; Registers used:
 20151 ;;		None
 20152 ;; Tracked objects:
 20153 ;;		On entry : 0/0
 20154 ;;		On exit  : 0/0
 20155 ;;		Unchanged: 0/0
 20156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20161 ;;Total ram usage:        0 bytes
 20162 ;; Hardware stack levels used: 1
 20163 ;; This function calls:
 20164 ;;		Nothing
 20165 ;; This function is called by:
 20166 ;;		_TMR1_Initialize
 20167 ;;		_TMR1_ISR
 20168 ;; This function uses a non-reentrant model
 20169 ;;
 20170                           
 20171                           
 20172                           ;psect for function _TMR1_DefaultInterruptHandler
 20173  0002                     _TMR1_DefaultInterruptHandler:
 20174  0002                     i1l528:	
 20175                           ;incstack = 0
 20176                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 20177                           
 20178  0002  0008               	return
 20179  0003                     __end_of_TMR1_DefaultInterruptHandler:
 20180                           
 20181                           	psect	text85
 20182  2500                     __ptext85:	
 20183 ;; *************** function _pTMR1_ISR *****************
 20184 ;; Defined at:
 20185 ;;		line 1451 in file "main.c"
 20186 ;; Parameters:    Size  Location     Type
 20187 ;;		None
 20188 ;; Auto vars:     Size  Location     Type
 20189 ;;		None
 20190 ;; Return value:  Size  Location     Type
 20191 ;;                  1    wreg      void 
 20192 ;; Registers used:
 20193 ;;		wreg, status,2, status,0
 20194 ;; Tracked objects:
 20195 ;;		On entry : 0/0
 20196 ;;		On exit  : 0/0
 20197 ;;		Unchanged: 0/0
 20198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20201 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20202 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20203 ;;Total ram usage:        1 bytes
 20204 ;; Hardware stack levels used: 1
 20205 ;; This function calls:
 20206 ;;		Nothing
 20207 ;; This function is called by:
 20208 ;;		_main
 20209 ;;		_TMR1_ISR
 20210 ;; This function uses a non-reentrant model
 20211 ;;
 20212                           
 20213                           
 20214                           ;psect for function _pTMR1_ISR
 20215  2500                     _pTMR1_ISR:
 20216  2500                     i1l6727:	
 20217                           ;incstack = 0
 20218                           ; Regs used in _pTMR1_ISR: [wreg+status,2+status,0]
 20219                           
 20220                           
 20221                           ;main.c: 1453:     if(run && modoPress_nDemo) {
 20222  2500  0020               	movlb	0	; select bank0
 20223  2501  0845               	movf	_run,w
 20224  2502  1903               	btfsc	3,2
 20225  2503  2D05               	goto	u547_21
 20226  2504  2D06               	goto	u547_20
 20227  2505                     u547_21:
 20228  2505  2D21               	goto	i1l1376
 20229  2506                     u547_20:
 20230  2506                     i1l6729:
 20231  2506  0846               	movf	_modoPress_nDemo,w
 20232  2507  1903               	btfsc	3,2
 20233  2508  2D0A               	goto	u548_21
 20234  2509  2D0B               	goto	u548_20
 20235  250A                     u548_21:
 20236  250A  2D21               	goto	i1l1376
 20237  250B                     u548_20:
 20238  250B                     i1l6731:
 20239                           
 20240                           ;main.c: 1454:         stepContPress++;
 20241  250B  3001               	movlw	1
 20242  250C  00F0               	movwf	??_pTMR1_ISR
 20243  250D  0870               	movf	??_pTMR1_ISR,w
 20244  250E  0021               	movlb	1	; select bank1
 20245  250F  07D6               	addwf	_stepContPress^(0+128),f
 20246  2510                     i1l6733:
 20247                           
 20248                           ;main.c: 1455:         if(stepContPress >= 50) {
 20249  2510  3032               	movlw	50
 20250  2511  0256               	subwf	_stepContPress^(0+128),w
 20251  2512  1C03               	skipc
 20252  2513  2D15               	goto	u549_21
 20253  2514  2D16               	goto	u549_20
 20254  2515                     u549_21:
 20255  2515  2D21               	goto	i1l1376
 20256  2516                     u549_20:
 20257  2516                     i1l6735:
 20258                           
 20259                           ;main.c: 1456:             secCont++;
 20260  2516  3001               	movlw	1
 20261  2517  0023               	movlb	3	; select bank3
 20262  2518  07C6               	addwf	_secCont^(0+384),f
 20263  2519  3000               	movlw	0
 20264  251A  3DC7               	addwfc	(_secCont+1)^(0+384),f
 20265  251B  3000               	movlw	0
 20266  251C  3DC8               	addwfc	(_secCont+2)^(0+384),f
 20267  251D  3000               	movlw	0
 20268  251E  3DC9               	addwfc	(_secCont+3)^(0+384),f
 20269  251F                     i1l6737:
 20270                           
 20271                           ;main.c: 1457:             stepContPress = 0;
 20272  251F  0021               	movlb	1	; select bank1
 20273  2520  01D6               	clrf	_stepContPress^(0+128)
 20274  2521                     i1l1376:
 20275  2521  0008               	return
 20276  2522                     __end_of_pTMR1_ISR:
 20277                           
 20278                           	psect	text86
 20279  22CA                     __ptext86:	
 20280 ;; *************** function _TMR1_WriteTimer *****************
 20281 ;; Defined at:
 20282 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 20283 ;; Parameters:    Size  Location     Type
 20284 ;;  timerVal        2    0[COMMON] unsigned short 
 20285 ;; Auto vars:     Size  Location     Type
 20286 ;;		None
 20287 ;; Return value:  Size  Location     Type
 20288 ;;                  1    wreg      void 
 20289 ;; Registers used:
 20290 ;;		wreg, status,2
 20291 ;; Tracked objects:
 20292 ;;		On entry : 0/0
 20293 ;;		On exit  : 0/0
 20294 ;;		Unchanged: 0/0
 20295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20296 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20299 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20300 ;;Total ram usage:        2 bytes
 20301 ;; Hardware stack levels used: 1
 20302 ;; This function calls:
 20303 ;;		Nothing
 20304 ;; This function is called by:
 20305 ;;		_TMR1_ISR
 20306 ;;		_TMR1_Reload
 20307 ;; This function uses a non-reentrant model
 20308 ;;
 20309                           
 20310                           
 20311                           ;psect for function _TMR1_WriteTimer
 20312  22CA                     _TMR1_WriteTimer:
 20313  22CA                     i1l6053:	
 20314                           ;incstack = 0
 20315                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 20316                           
 20317                           
 20318                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.T1SYNC == 1)
 20319  22CA  0020               	movlb	0	; select bank0
 20320  22CB  1D1B               	btfss	27,2	;volatile
 20321  22CC  2ACE               	goto	u405_21
 20322  22CD  2ACF               	goto	u405_20
 20323  22CE                     u405_21:
 20324  22CE  2AD6               	goto	i1l6063
 20325  22CF                     u405_20:
 20326  22CF                     i1l6055:
 20327                           
 20328                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
 20329  22CF  101B               	bcf	27,0	;volatile
 20330  22D0                     i1l6057:
 20331                           
 20332                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
 20333  22D0  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 20334  22D1  009A               	movwf	26	;volatile
 20335  22D2                     i1l6059:
 20336                           
 20337                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
 20338  22D2  0870               	movf	TMR1_WriteTimer@timerVal,w
 20339  22D3  0099               	movwf	25	;volatile
 20340  22D4                     i1l6061:
 20341                           
 20342                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
 20343  22D4  141B               	bsf	27,0	;volatile
 20344                           
 20345                           ;mcc_generated_files/tmr1.c: 133:     }
 20346  22D5  2ADA               	goto	i1l509
 20347  22D6                     i1l6063:
 20348                           
 20349                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 20350  22D6  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 20351  22D7  009A               	movwf	26	;volatile
 20352  22D8                     i1l6065:
 20353                           
 20354                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 20355  22D8  0870               	movf	TMR1_WriteTimer@timerVal,w
 20356  22D9  0099               	movwf	25	;volatile
 20357  22DA                     i1l509:
 20358  22DA  0008               	return
 20359  22DB                     __end_of_TMR1_WriteTimer:
 20360                           
 20361                           	psect	text87
 20362  2423                     __ptext87:	
 20363 ;; *************** function _PIN_MANAGER_IOC *****************
 20364 ;; Defined at:
 20365 ;;		line 145 in file "mcc_generated_files/pin_manager.c"
 20366 ;; Parameters:    Size  Location     Type
 20367 ;;		None
 20368 ;; Auto vars:     Size  Location     Type
 20369 ;;		None
 20370 ;; Return value:  Size  Location     Type
 20371 ;;                  1    wreg      void 
 20372 ;; Registers used:
 20373 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20374 ;; Tracked objects:
 20375 ;;		On entry : 0/0
 20376 ;;		On exit  : 0/0
 20377 ;;		Unchanged: 0/0
 20378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20383 ;;Total ram usage:        0 bytes
 20384 ;; Hardware stack levels used: 1
 20385 ;; Hardware stack levels required when called: 9
 20386 ;; This function calls:
 20387 ;;		_IOCCF1_ISR
 20388 ;;		_IOCCF2_ISR
 20389 ;;		_IOCCF3_ISR
 20390 ;; This function is called by:
 20391 ;;		_INTERRUPT_InterruptManager
 20392 ;; This function uses a non-reentrant model
 20393 ;;
 20394                           
 20395                           
 20396                           ;psect for function _PIN_MANAGER_IOC
 20397  2423                     _PIN_MANAGER_IOC:
 20398  2423                     i1l6797:	
 20399                           ;incstack = 0
 20400 ;; hardware stack exceeded
 20401                           ; Regs used in _PIN_MANAGER_IOC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20402                           
 20403                           
 20404                           ;mcc_generated_files/pin_manager.c: 148:     if(IOCCFbits.IOCCF1 == 1)
 20405  2423  0027               	movlb	7	; select bank7
 20406  2424  1C99               	btfss	25,1	;volatile
 20407  2425  2C27               	goto	u553_21
 20408  2426  2C28               	goto	u553_20
 20409  2427                     u553_21:
 20410  2427  2C2B               	goto	i1l6801
 20411  2428                     u553_20:
 20412  2428                     i1l6799:
 20413                           
 20414                           ;mcc_generated_files/pin_manager.c: 149:     {;mcc_generated_files/pin_manager.c: 150:  
      +                                 IOCCF1_ISR();
 20415  2428  31A2  2260  31A4   	fcall	_IOCCF1_ISR
 20416  242B                     i1l6801:
 20417                           
 20418                           ;mcc_generated_files/pin_manager.c: 153:     if(IOCCFbits.IOCCF2 == 1)
 20419  242B  0027               	movlb	7	; select bank7
 20420  242C  1D19               	btfss	25,2	;volatile
 20421  242D  2C2F               	goto	u554_21
 20422  242E  2C30               	goto	u554_20
 20423  242F                     u554_21:
 20424  242F  2C33               	goto	i1l6805
 20425  2430                     u554_20:
 20426  2430                     i1l6803:
 20427                           
 20428                           ;mcc_generated_files/pin_manager.c: 154:     {;mcc_generated_files/pin_manager.c: 155:  
      +                                 IOCCF2_ISR();
 20429  2430  31A2  226F  31A4   	fcall	_IOCCF2_ISR
 20430  2433                     i1l6805:
 20431                           
 20432                           ;mcc_generated_files/pin_manager.c: 158:     if(IOCCFbits.IOCCF3 == 1)
 20433  2433  0027               	movlb	7	; select bank7
 20434  2434  1D99               	btfss	25,3	;volatile
 20435  2435  2C37               	goto	u555_21
 20436  2436  2C38               	goto	u555_20
 20437  2437                     u555_21:
 20438  2437  2C3B               	goto	i1l111
 20439  2438                     u555_20:
 20440  2438                     i1l6807:
 20441                           
 20442                           ;mcc_generated_files/pin_manager.c: 159:     {;mcc_generated_files/pin_manager.c: 160:  
      +                                 IOCCF3_ISR();
 20443  2438  31A2  228D  31A4   	fcall	_IOCCF3_ISR
 20444  243B                     i1l111:
 20445  243B  0008               	return
 20446  243C                     __end_of_PIN_MANAGER_IOC:
 20447                           
 20448                           	psect	text88
 20449  228D                     __ptext88:	
 20450 ;; *************** function _IOCCF3_ISR *****************
 20451 ;; Defined at:
 20452 ;;		line 227 in file "mcc_generated_files/pin_manager.c"
 20453 ;; Parameters:    Size  Location     Type
 20454 ;;		None
 20455 ;; Auto vars:     Size  Location     Type
 20456 ;;		None
 20457 ;; Return value:  Size  Location     Type
 20458 ;;                  1    wreg      void 
 20459 ;; Registers used:
 20460 ;;		wreg, status,2, status,0, pclath, cstack
 20461 ;; Tracked objects:
 20462 ;;		On entry : 0/0
 20463 ;;		On exit  : 0/0
 20464 ;;		Unchanged: 0/0
 20465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20470 ;;Total ram usage:        0 bytes
 20471 ;; Hardware stack levels used: 1
 20472 ;; Hardware stack levels required when called: 5
 20473 ;; This function calls:
 20474 ;;		Absolute function
 20475 ;;		_IOCCF3_DefaultInterruptHandler
 20476 ;;		_IOC_AN1_ISR
 20477 ;; This function is called by:
 20478 ;;		_PIN_MANAGER_IOC
 20479 ;; This function uses a non-reentrant model
 20480 ;;
 20481                           
 20482                           
 20483                           ;psect for function _IOCCF3_ISR
 20484  228D                     _IOCCF3_ISR:
 20485  228D                     i1l5965:	
 20486                           ;incstack = 0
 20487                           ; Regs used in _IOCCF3_ISR: [wreg+status,2+status,0+pclath+cstack]
 20488                           
 20489                           
 20490                           ;mcc_generated_files/pin_manager.c: 232:     if(IOCCF3_InterruptHandler)
 20491  228D  0023               	movlb	3	; select bank3
 20492  228E  0863               	movf	_IOCCF3_InterruptHandler^(0+384),w
 20493  228F  0464               	iorwf	(_IOCCF3_InterruptHandler+1)^(0+384),w
 20494  2290  1903               	btfsc	3,2
 20495  2291  2A93               	goto	u403_21
 20496  2292  2A94               	goto	u403_20
 20497  2293                     u403_21:
 20498  2293  2A99               	goto	i1l5969
 20499  2294                     u403_20:
 20500  2294                     i1l5967:
 20501                           
 20502                           ;mcc_generated_files/pin_manager.c: 233:     {;mcc_generated_files/pin_manager.c: 234:  
      +                                 IOCCF3_InterruptHandler();
 20503  2294  0864               	movf	(_IOCCF3_InterruptHandler+1)^(0+384),w
 20504  2295  008A               	movwf	10
 20505  2296  0863               	movf	_IOCCF3_InterruptHandler^(0+384),w
 20506  2297  000A               	callw
 20507  2298  31A2               	pagesel	$
 20508  2299                     i1l5969:
 20509                           
 20510                           ;mcc_generated_files/pin_manager.c: 236:     IOCCFbits.IOCCF3 = 0;
 20511  2299  0027               	movlb	7	; select bank7
 20512  229A  1199               	bcf	25,3	;volatile
 20513  229B                     i1l135:
 20514  229B  0008               	return
 20515  229C                     __end_of_IOCCF3_ISR:
 20516                           
 20517                           	psect	text89
 20518  0801                     __ptext89:	
 20519 ;; *************** function _IOCCF3_DefaultInterruptHandler *****************
 20520 ;; Defined at:
 20521 ;;		line 249 in file "mcc_generated_files/pin_manager.c"
 20522 ;; Parameters:    Size  Location     Type
 20523 ;;		None
 20524 ;; Auto vars:     Size  Location     Type
 20525 ;;		None
 20526 ;; Return value:  Size  Location     Type
 20527 ;;                  1    wreg      void 
 20528 ;; Registers used:
 20529 ;;		None
 20530 ;; Tracked objects:
 20531 ;;		On entry : 0/0
 20532 ;;		On exit  : 0/0
 20533 ;;		Unchanged: 0/0
 20534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20539 ;;Total ram usage:        0 bytes
 20540 ;; Hardware stack levels used: 1
 20541 ;; This function calls:
 20542 ;;		Nothing
 20543 ;; This function is called by:
 20544 ;;		_PIN_MANAGER_Initialize
 20545 ;;		_IOCCF3_ISR
 20546 ;; This function uses a non-reentrant model
 20547 ;;
 20548                           
 20549                           
 20550                           ;psect for function _IOCCF3_DefaultInterruptHandler
 20551  0801                     _IOCCF3_DefaultInterruptHandler:
 20552  0801                     i1l141:	
 20553                           ;incstack = 0
 20554                           ; Regs used in _IOCCF3_DefaultInterruptHandler: []
 20555                           
 20556  0801  0008               	return
 20557  0802                     __end_of_IOCCF3_DefaultInterruptHandler:
 20558                           
 20559                           	psect	text90
 20560  227E                     __ptext90:	
 20561 ;; *************** function _IOC_AN1_ISR *****************
 20562 ;; Defined at:
 20563 ;;		line 1514 in file "main.c"
 20564 ;; Parameters:    Size  Location     Type
 20565 ;;		None
 20566 ;; Auto vars:     Size  Location     Type
 20567 ;;		None
 20568 ;; Return value:  Size  Location     Type
 20569 ;;                  1    wreg      void 
 20570 ;; Registers used:
 20571 ;;		wreg, status,2, status,0, pclath, cstack
 20572 ;; Tracked objects:
 20573 ;;		On entry : 0/0
 20574 ;;		On exit  : 0/0
 20575 ;;		Unchanged: 0/0
 20576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20581 ;;Total ram usage:        0 bytes
 20582 ;; Hardware stack levels used: 1
 20583 ;; Hardware stack levels required when called: 4
 20584 ;; This function calls:
 20585 ;;		_butt2Pres
 20586 ;;		i1_waitX0ms
 20587 ;; This function is called by:
 20588 ;;		_main
 20589 ;;		_IOCCF3_ISR
 20590 ;; This function uses a non-reentrant model
 20591 ;;
 20592                           
 20593                           
 20594                           ;psect for function _IOC_AN1_ISR
 20595  227E                     _IOC_AN1_ISR:
 20596  227E                     i1l5853:	
 20597                           ;incstack = 0
 20598                           ; Regs used in _IOC_AN1_ISR: [wreg+status,2+status,0+pclath+cstack]
 20599                           
 20600                           
 20601                           ;main.c: 1515:     if(!waitingTime) {
 20602  227E  0020               	movlb	0	; select bank0
 20603  227F  0849               	movf	_waitingTime,w
 20604  2280  1D03               	btfss	3,2
 20605  2281  2A83               	goto	u396_21
 20606  2282  2A84               	goto	u396_20
 20607  2283                     u396_21:
 20608  2283  2A8C               	goto	i1l1410
 20609  2284                     u396_20:
 20610  2284                     i1l5855:
 20611                           
 20612                           ;main.c: 1516:         butt2Pres(1);
 20613  2284  3001               	movlw	1
 20614  2285  31A0  20D8  31A2   	fcall	_butt2Pres
 20615                           
 20616                           ;main.c: 1517:         waitX0ms(5);
 20617  2288  3005               	movlw	5
 20618  2289  31A0  20FD  31A2   	fcall	i1_waitX0ms
 20619  228C                     i1l1410:
 20620  228C  0008               	return
 20621  228D                     __end_of_IOC_AN1_ISR:
 20622                           
 20623                           	psect	text91
 20624  20D8                     __ptext91:	
 20625 ;; *************** function _butt2Pres *****************
 20626 ;; Defined at:
 20627 ;;		line 1544 in file "main.c"
 20628 ;; Parameters:    Size  Location     Type
 20629 ;;  state           1    wreg     unsigned char 
 20630 ;; Auto vars:     Size  Location     Type
 20631 ;;  state           1    0[COMMON] unsigned char 
 20632 ;; Return value:  Size  Location     Type
 20633 ;;                  1    wreg      void 
 20634 ;; Registers used:
 20635 ;;		wreg, status,2, status,0, pclath, cstack
 20636 ;; Tracked objects:
 20637 ;;		On entry : 0/0
 20638 ;;		On exit  : 0/0
 20639 ;;		Unchanged: 0/0
 20640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20645 ;;Total ram usage:        0 bytes
 20646 ;; Hardware stack levels used: 1
 20647 ;; Hardware stack levels required when called: 3
 20648 ;; This function calls:
 20649 ;;		_execMask_Sword
 20650 ;; This function is called by:
 20651 ;;		_pRC1_ISR
 20652 ;;		_IOC_AN1_ISR
 20653 ;; This function uses a non-reentrant model
 20654 ;;
 20655                           
 20656                           
 20657                           ;psect for function _butt2Pres
 20658  20D8                     _butt2Pres:
 20659  20D8                     i1l5505:	
 20660                           ;incstack = 0
 20661                           ; Regs used in _butt2Pres: [wreg+status,2+status,0+pclath+cstack]
 20662                           
 20663                           
 20664                           ;main.c: 1545:     execMask_Sword();
 20665  20D8  31A4  24E0  31A0   	fcall	_execMask_Sword
 20666  20DB                     i1l1426:
 20667  20DB  0008               	return
 20668  20DC                     __end_of_butt2Pres:
 20669                           
 20670                           	psect	text92
 20671  24E0                     __ptext92:	
 20672 ;; *************** function _execMask_Sword *****************
 20673 ;; Defined at:
 20674 ;;		line 1336 in file "main.c"
 20675 ;; Parameters:    Size  Location     Type
 20676 ;;		None
 20677 ;; Auto vars:     Size  Location     Type
 20678 ;;		None
 20679 ;; Return value:  Size  Location     Type
 20680 ;;                  1    wreg      void 
 20681 ;; Registers used:
 20682 ;;		wreg, status,2, status,0, pclath, cstack
 20683 ;; Tracked objects:
 20684 ;;		On entry : 0/0
 20685 ;;		On exit  : 0/0
 20686 ;;		Unchanged: 0/0
 20687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20692 ;;Total ram usage:        0 bytes
 20693 ;; Hardware stack levels used: 1
 20694 ;; Hardware stack levels required when called: 2
 20695 ;; This function calls:
 20696 ;;		i1_putch
 20697 ;;		i1_rstMaskOff
 20698 ;;		i1_rstMaskOn
 20699 ;; This function is called by:
 20700 ;;		_butt2Pres
 20701 ;; This function uses a non-reentrant model
 20702 ;;
 20703                           
 20704                           
 20705                           ;psect for function _execMask_Sword
 20706  24E0                     _execMask_Sword:
 20707  24E0                     i1l5263:	
 20708                           ;incstack = 0
 20709                           ; Regs used in _execMask_Sword: [wreg+status,2+status,0+pclath+cstack]
 20710                           
 20711                           
 20712                           ;main.c: 1337:     if(modoPress_nDemo) {
 20713  24E0  0020               	movlb	0	; select bank0
 20714  24E1  0846               	movf	_modoPress_nDemo,w
 20715  24E2  1903               	btfsc	3,2
 20716  24E3  2CE5               	goto	u338_21
 20717  24E4  2CE6               	goto	u338_20
 20718  24E5                     u338_21:
 20719  24E5  2CFB               	goto	i1l5273
 20720  24E6                     u338_20:
 20721  24E6                     i1l5265:
 20722                           
 20723                           ;main.c: 1338:         if(lightsOn) {
 20724  24E6  0844               	movf	_lightsOn,w
 20725  24E7  1903               	btfsc	3,2
 20726  24E8  2CEA               	goto	u339_21
 20727  24E9  2CEB               	goto	u339_20
 20728  24EA                     u339_21:
 20729  24EA  2CFF               	goto	i1l1317
 20730  24EB                     u339_20:
 20731  24EB                     i1l5267:
 20732                           
 20733                           ;main.c: 1339:             if(maskIsOn)
 20734  24EB  0021               	movlb	1	; select bank1
 20735  24EC  0860               	movf	_maskIsOn^(0+128),w
 20736  24ED  1903               	btfsc	3,2
 20737  24EE  2CF0               	goto	u340_21
 20738  24EF  2CF1               	goto	u340_20
 20739  24F0                     u340_21:
 20740  24F0  2CF6               	goto	i1l5271
 20741  24F1                     u340_20:
 20742  24F1                     i1l5269:
 20743                           
 20744                           ;main.c: 1340:                 rstMaskOff(1);
 20745  24F1  3001               	movlw	1
 20746  24F2  31A1  21DD  31A4   	fcall	i1_rstMaskOff
 20747  24F5  2CFF               	goto	i1l1317
 20748  24F6                     i1l5271:
 20749                           
 20750                           ;main.c: 1342:                 rstMaskOn(1);
 20751  24F6  3001               	movlw	1
 20752  24F7  31A1  21C7  31A4   	fcall	i1_rstMaskOn
 20753  24FA  2CFF               	goto	i1l1317
 20754  24FB                     i1l5273:
 20755                           
 20756                           ;main.c: 1345:         putch('s');
 20757  24FB  3073               	movlw	115
 20758  24FC  31A0  20E8  31A4   	fcall	i1_putch
 20759  24FF                     i1l1317:
 20760  24FF  0008               	return
 20761  2500                     __end_of_execMask_Sword:
 20762                           
 20763                           	psect	text93
 20764  226F                     __ptext93:	
 20765 ;; *************** function _IOCCF2_ISR *****************
 20766 ;; Defined at:
 20767 ;;		line 197 in file "mcc_generated_files/pin_manager.c"
 20768 ;; Parameters:    Size  Location     Type
 20769 ;;		None
 20770 ;; Auto vars:     Size  Location     Type
 20771 ;;		None
 20772 ;; Return value:  Size  Location     Type
 20773 ;;                  1    wreg      void 
 20774 ;; Registers used:
 20775 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20776 ;; Tracked objects:
 20777 ;;		On entry : 0/0
 20778 ;;		On exit  : 0/0
 20779 ;;		Unchanged: 0/0
 20780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20785 ;;Total ram usage:        0 bytes
 20786 ;; Hardware stack levels used: 1
 20787 ;; Hardware stack levels required when called: 8
 20788 ;; This function calls:
 20789 ;;		Absolute function
 20790 ;;		_IOCCF2_DefaultInterruptHandler
 20791 ;;		_IOC_AN2_ISR
 20792 ;; This function is called by:
 20793 ;;		_PIN_MANAGER_IOC
 20794 ;; This function uses a non-reentrant model
 20795 ;;
 20796                           
 20797                           
 20798                           ;psect for function _IOCCF2_ISR
 20799  226F                     _IOCCF2_ISR:
 20800  226F                     i1l5959:	
 20801                           ;incstack = 0
 20802 ;; hardware stack exceeded
 20803                           ; Regs used in _IOCCF2_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20804                           
 20805                           
 20806                           ;mcc_generated_files/pin_manager.c: 202:     if(IOCCF2_InterruptHandler)
 20807  226F  0023               	movlb	3	; select bank3
 20808  2270  0865               	movf	_IOCCF2_InterruptHandler^(0+384),w
 20809  2271  0466               	iorwf	(_IOCCF2_InterruptHandler+1)^(0+384),w
 20810  2272  1903               	btfsc	3,2
 20811  2273  2A75               	goto	u402_21
 20812  2274  2A76               	goto	u402_20
 20813  2275                     u402_21:
 20814  2275  2A7B               	goto	i1l5963
 20815  2276                     u402_20:
 20816  2276                     i1l5961:
 20817                           
 20818                           ;mcc_generated_files/pin_manager.c: 203:     {;mcc_generated_files/pin_manager.c: 204:  
      +                                 IOCCF2_InterruptHandler();
 20819  2276  0866               	movf	(_IOCCF2_InterruptHandler+1)^(0+384),w
 20820  2277  008A               	movwf	10
 20821  2278  0865               	movf	_IOCCF2_InterruptHandler^(0+384),w
 20822  2279  000A               	callw
 20823  227A  31A2               	pagesel	$
 20824  227B                     i1l5963:
 20825                           
 20826                           ;mcc_generated_files/pin_manager.c: 206:     IOCCFbits.IOCCF2 = 0;
 20827  227B  0027               	movlb	7	; select bank7
 20828  227C  1119               	bcf	25,2	;volatile
 20829  227D                     i1l125:
 20830  227D  0008               	return
 20831  227E                     __end_of_IOCCF2_ISR:
 20832                           
 20833                           	psect	text94
 20834  0800                     __ptext94:	
 20835 ;; *************** function _IOCCF2_DefaultInterruptHandler *****************
 20836 ;; Defined at:
 20837 ;;		line 219 in file "mcc_generated_files/pin_manager.c"
 20838 ;; Parameters:    Size  Location     Type
 20839 ;;		None
 20840 ;; Auto vars:     Size  Location     Type
 20841 ;;		None
 20842 ;; Return value:  Size  Location     Type
 20843 ;;                  1    wreg      void 
 20844 ;; Registers used:
 20845 ;;		None
 20846 ;; Tracked objects:
 20847 ;;		On entry : 0/0
 20848 ;;		On exit  : 0/0
 20849 ;;		Unchanged: 0/0
 20850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20855 ;;Total ram usage:        0 bytes
 20856 ;; Hardware stack levels used: 1
 20857 ;; This function calls:
 20858 ;;		Nothing
 20859 ;; This function is called by:
 20860 ;;		_PIN_MANAGER_Initialize
 20861 ;;		_IOCCF2_ISR
 20862 ;; This function uses a non-reentrant model
 20863 ;;
 20864                           
 20865                           
 20866                           ;psect for function _IOCCF2_DefaultInterruptHandler
 20867  0800                     _IOCCF2_DefaultInterruptHandler:
 20868  0800                     i1l131:	
 20869                           ;incstack = 0
 20870                           ; Regs used in _IOCCF2_DefaultInterruptHandler: []
 20871                           
 20872  0800  0008               	return
 20873  0801                     __end_of_IOCCF2_DefaultInterruptHandler:
 20874                           
 20875                           	psect	text95
 20876  2235                     __ptext95:	
 20877 ;; *************** function _IOC_AN2_ISR *****************
 20878 ;; Defined at:
 20879 ;;		line 1521 in file "main.c"
 20880 ;; Parameters:    Size  Location     Type
 20881 ;;		None
 20882 ;; Auto vars:     Size  Location     Type
 20883 ;;		None
 20884 ;; Return value:  Size  Location     Type
 20885 ;;                  1    wreg      void 
 20886 ;; Registers used:
 20887 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20888 ;; Tracked objects:
 20889 ;;		On entry : 0/0
 20890 ;;		On exit  : 0/0
 20891 ;;		Unchanged: 0/0
 20892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20897 ;;Total ram usage:        0 bytes
 20898 ;; Hardware stack levels used: 1
 20899 ;; Hardware stack levels required when called: 7
 20900 ;; This function calls:
 20901 ;;		i1_changeDemoMode
 20902 ;; This function is called by:
 20903 ;;		_main
 20904 ;;		_IOCCF2_ISR
 20905 ;; This function uses a non-reentrant model
 20906 ;;
 20907                           
 20908                           
 20909                           ;psect for function _IOC_AN2_ISR
 20910  2235                     _IOC_AN2_ISR:
 20911  2235                     i1l5857:	
 20912                           ;incstack = 0
 20913 ;; hardware stack exceeded
 20914                           ; Regs used in _IOC_AN2_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20915                           
 20916                           
 20917                           ;main.c: 1522:     if(waitingTime)
 20918  2235  0020               	movlb	0	; select bank0
 20919  2236  0849               	movf	_waitingTime,w
 20920  2237  1903               	btfsc	3,2
 20921  2238  2A3A               	goto	u397_21
 20922  2239  2A3B               	goto	u397_20
 20923  223A                     u397_21:
 20924  223A  2A3F               	goto	i1l5861
 20925  223B                     u397_20:
 20926  223B                     i1l5859:
 20927                           
 20928                           ;main.c: 1523:         DemoSwitchChange = 1;
 20929  223B  0021               	movlb	1	; select bank1
 20930  223C  01E6               	clrf	_DemoSwitchChange^(0+128)
 20931  223D  0AE6               	incf	_DemoSwitchChange^(0+128),f
 20932  223E  2A42               	goto	i1l1415
 20933  223F                     i1l5861:
 20934                           
 20935                           ;main.c: 1525:         changeDemoMode();
 20936  223F  31A3  23DD  31A2   	fcall	i1_changeDemoMode
 20937  2242                     i1l1415:
 20938  2242  0008               	return
 20939  2243                     __end_of_IOC_AN2_ISR:
 20940                           
 20941                           	psect	text96
 20942  23DD                     __ptext96:	
 20943 ;; *************** function i1_changeDemoMode *****************
 20944 ;; Defined at:
 20945 ;;		line 1528 in file "main.c"
 20946 ;; Parameters:    Size  Location     Type
 20947 ;;		None
 20948 ;; Auto vars:     Size  Location     Type
 20949 ;;		None
 20950 ;; Return value:  Size  Location     Type
 20951 ;;                  1    wreg      void 
 20952 ;; Registers used:
 20953 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20954 ;; Tracked objects:
 20955 ;;		On entry : 0/0
 20956 ;;		On exit  : 0/0
 20957 ;;		Unchanged: 0/0
 20958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20963 ;;Total ram usage:        0 bytes
 20964 ;; Hardware stack levels used: 1
 20965 ;; Hardware stack levels required when called: 6
 20966 ;; This function calls:
 20967 ;;		i1_butt3Pres
 20968 ;;		i1_waitX0ms
 20969 ;; This function is called by:
 20970 ;;		_IOC_AN2_ISR
 20971 ;; This function uses a non-reentrant model
 20972 ;;
 20973                           
 20974                           
 20975                           ;psect for function i1_changeDemoMode
 20976  23DD                     i1_changeDemoMode:
 20977  23DD                     i1l5507:	
 20978                           ;incstack = 0
 20979 ;; hardware stack exceeded
 20980                           ; Regs used in i1_changeDemoMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20981                           
 20982                           
 20983                           ;main.c: 1529:     if(!PORTCbits.RC2) {
 20984  23DD  0020               	movlb	0	; select bank0
 20985  23DE  190E               	btfsc	14,2	;volatile
 20986  23DF  2BE1               	goto	u360_21
 20987  23E0  2BE2               	goto	u360_20
 20988  23E1                     u360_21:
 20989  23E1  2BEB               	goto	i1l5513
 20990  23E2                     u360_20:
 20991  23E2                     i1l5509:
 20992                           
 20993                           ;main.c: 1530:         butt3Pres(1);
 20994  23E2  3001               	movlw	1
 20995  23E3  31A5  25D3  31A3   	fcall	i1_butt3Pres
 20996  23E6                     i1l5511:
 20997                           
 20998                           ;main.c: 1531:         waitX0ms(5);
 20999  23E6  3005               	movlw	5
 21000  23E7  31A0  20FD  31A3   	fcall	i1_waitX0ms
 21001                           
 21002                           ;main.c: 1532:     }else {
 21003  23EA  2BF3               	goto	i1l1420
 21004  23EB                     i1l5513:
 21005                           
 21006                           ;main.c: 1533:         butt3Pres(0);
 21007  23EB  3000               	movlw	0
 21008  23EC  31A5  25D3  31A3   	fcall	i1_butt3Pres
 21009  23EF                     i1l5515:
 21010                           
 21011                           ;main.c: 1534:         waitX0ms(5);
 21012  23EF  3005               	movlw	5
 21013  23F0  31A0  20FD  31A3   	fcall	i1_waitX0ms
 21014  23F3                     i1l1420:
 21015  23F3  0008               	return
 21016  23F4                     __end_ofi1_changeDemoMode:
 21017                           
 21018                           	psect	text97
 21019  25D3                     __ptext97:	
 21020 ;; *************** function i1_butt3Pres *****************
 21021 ;; Defined at:
 21022 ;;		line 1548 in file "main.c"
 21023 ;; Parameters:    Size  Location     Type
 21024 ;;  state           1    wreg     unsigned char 
 21025 ;; Auto vars:     Size  Location     Type
 21026 ;;  state           1    1[BANK0 ] unsigned char 
 21027 ;; Return value:  Size  Location     Type
 21028 ;;                  1    wreg      void 
 21029 ;; Registers used:
 21030 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21031 ;; Tracked objects:
 21032 ;;		On entry : 0/0
 21033 ;;		On exit  : 0/0
 21034 ;;		Unchanged: 0/0
 21035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21037 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21039 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21040 ;;Total ram usage:        1 bytes
 21041 ;; Hardware stack levels used: 1
 21042 ;; Hardware stack levels required when called: 5
 21043 ;; This function calls:
 21044 ;;		i1_putch
 21045 ;;		i1_resetAndOff
 21046 ;;		i1_rstDemoOff
 21047 ;; This function is called by:
 21048 ;;		_pRC1_ISR
 21049 ;;		i1_changeDemoMode
 21050 ;; This function uses a non-reentrant model
 21051 ;;
 21052                           
 21053                           
 21054                           ;psect for function i1_butt3Pres
 21055  25D3                     i1_butt3Pres:
 21056                           
 21057                           ;incstack = 0
 21058                           ; Regs used in i1_butt3Pres: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21059                           ;i1butt3Pres@state stored from wreg
 21060  25D3  0020               	movlb	0	; select bank0
 21061  25D4  00CE               	movwf	i1butt3Pres@state
 21062  25D5                     i1l5295:
 21063                           
 21064                           ;main.c: 1549:     if(state) {
 21065  25D5  084E               	movf	i1butt3Pres@state,w
 21066  25D6  1903               	btfsc	3,2
 21067  25D7  2DD9               	goto	u348_21
 21068  25D8  2DDA               	goto	u348_20
 21069  25D9                     u348_21:
 21070  25D9  2DFB               	goto	i1l5313
 21071  25DA                     u348_20:
 21072  25DA                     i1l5297:
 21073                           
 21074                           ;main.c: 1550:         putch('o');
 21075  25DA  306F               	movlw	111
 21076  25DB  31A0  20E8  31A5   	fcall	i1_putch
 21077  25DE                     i1l5299:
 21078                           
 21079                           ;main.c: 1551:         modoPress_nDemo = 1;
 21080  25DE  0020               	movlb	0	; select bank0
 21081  25DF  01C6               	clrf	_modoPress_nDemo
 21082  25E0  0AC6               	incf	_modoPress_nDemo,f
 21083  25E1                     i1l5301:
 21084                           
 21085                           ;main.c: 1552:         if(lightsOn) {
 21086  25E1  0844               	movf	_lightsOn,w
 21087  25E2  1903               	btfsc	3,2
 21088  25E3  2DE5               	goto	u349_21
 21089  25E4  2DE6               	goto	u349_20
 21090  25E5                     u349_21:
 21091  25E5  2DF6               	goto	i1l5311
 21092  25E6                     u349_20:
 21093  25E6                     i1l5303:
 21094                           
 21095                           ;main.c: 1553:             resetAndOff(0);
 21096  25E6  3000               	movlw	0
 21097  25E7  3199  211D  31A5   	fcall	i1_resetAndOff
 21098  25EA                     i1l5305:
 21099                           
 21100                           ;main.c: 1554:             rstDemoOff(1);
 21101  25EA  3001               	movlw	1
 21102  25EB  31A1  219F  31A5   	fcall	i1_rstDemoOff
 21103  25EE                     i1l5307:
 21104                           
 21105                           ;main.c: 1555:             run = 1;
 21106  25EE  0020               	movlb	0	; select bank0
 21107  25EF  01C5               	clrf	_run
 21108  25F0  0AC5               	incf	_run,f
 21109  25F1                     i1l5309:
 21110                           
 21111                           ;main.c: 1556:             putch('f');
 21112  25F1  3066               	movlw	102
 21113  25F2  31A0  20E8  31A5   	fcall	i1_putch
 21114                           
 21115                           ;main.c: 1557:         }else
 21116  25F5  2E05               	goto	i1l1433
 21117  25F6                     i1l5311:
 21118                           
 21119                           ;main.c: 1558:             resetAndOff(1);
 21120  25F6  3001               	movlw	1
 21121  25F7  3199  211D  31A5   	fcall	i1_resetAndOff
 21122  25FA  2E05               	goto	i1l1433
 21123  25FB                     i1l5313:
 21124                           
 21125                           ;main.c: 1560:         putch('d');
 21126  25FB  3064               	movlw	100
 21127  25FC  31A0  20E8  31A5   	fcall	i1_putch
 21128  25FF                     i1l5315:
 21129                           
 21130                           ;main.c: 1561:         modoPress_nDemo = 0;
 21131  25FF  0020               	movlb	0	; select bank0
 21132  2600  01C6               	clrf	_modoPress_nDemo
 21133  2601                     i1l5317:
 21134                           
 21135                           ;main.c: 1562:         resetAndOff(1);
 21136  2601  3001               	movlw	1
 21137  2602  3199  211D  31A5   	fcall	i1_resetAndOff
 21138  2605                     i1l1433:
 21139  2605  0008               	return
 21140  2606                     __end_ofi1_butt3Pres:
 21141                           
 21142                           	psect	text98
 21143  191D                     __ptext98:	
 21144 ;; *************** function i1_resetAndOff *****************
 21145 ;; Defined at:
 21146 ;;		line 1305 in file "main.c"
 21147 ;; Parameters:    Size  Location     Type
 21148 ;;  light           1    wreg     unsigned char 
 21149 ;; Auto vars:     Size  Location     Type
 21150 ;;  light           1    0[BANK0 ] unsigned char 
 21151 ;; Return value:  Size  Location     Type
 21152 ;;                  1    wreg      void 
 21153 ;; Registers used:
 21154 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21155 ;; Tracked objects:
 21156 ;;		On entry : 0/0
 21157 ;;		On exit  : 0/0
 21158 ;;		Unchanged: 0/0
 21159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21161 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21163 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21164 ;;Total ram usage:        1 bytes
 21165 ;; Hardware stack levels used: 1
 21166 ;; Hardware stack levels required when called: 4
 21167 ;; This function calls:
 21168 ;;		i1_allBodyVal
 21169 ;;		i1_rstDemoOff
 21170 ;;		i1_rstDemoOn
 21171 ;;		i1_rstDragon
 21172 ;;		i1_rstMaskOff
 21173 ;;		i1_rstMaskOn
 21174 ;;		i1_rstMusik
 21175 ;;		i1_rstPressOff
 21176 ;;		i1_rstPressOn
 21177 ;;		i1_rstSeq
 21178 ;;		i1_rstShadow
 21179 ;;		i1_sendOrderX
 21180 ;; This function is called by:
 21181 ;;		i1_butt3Pres
 21182 ;; This function uses a non-reentrant model
 21183 ;;
 21184                           
 21185                           
 21186                           ;psect for function i1_resetAndOff
 21187  191D                     i1_resetAndOff:
 21188                           
 21189                           ;incstack = 0
 21190                           ; Regs used in i1_resetAndOff: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21191                           ;i1resetAndOff@light stored from wreg
 21192  191D  0020               	movlb	0	; select bank0
 21193  191E  00CD               	movwf	i1resetAndOff@light
 21194  191F                     i1l5123:
 21195                           
 21196                           ;main.c: 1306:     soundASOn = 0;
 21197  191F  0021               	movlb	1	; select bank1
 21198  1920  01E5               	clrf	_soundASOn^(0+128)
 21199                           
 21200                           ;main.c: 1307:     soundASOff = 0;
 21201  1921  01E4               	clrf	_soundASOff^(0+128)
 21202                           
 21203                           ;main.c: 1308:     maskIsOn = 0;
 21204  1922  01E0               	clrf	_maskIsOn^(0+128)
 21205                           
 21206                           ;main.c: 1309:     lightsOn = 0;
 21207  1923  0020               	movlb	0	; select bank0
 21208  1924  01C4               	clrf	_lightsOn
 21209  1925                     i1l5125:
 21210                           
 21211                           ;main.c: 1310:     rstPressOn(0);
 21212  1925  3000               	movlw	0
 21213  1926  31A1  218B  3199   	fcall	i1_rstPressOn
 21214  1929                     i1l5127:
 21215                           
 21216                           ;main.c: 1311:     rstPressOff(0);
 21217  1929  3000               	movlw	0
 21218  192A  31A1  2181  3199   	fcall	i1_rstPressOff
 21219  192D                     i1l5129:
 21220                           
 21221                           ;main.c: 1312:     rstSeq();
 21222  192D  31A3  234A  3199   	fcall	i1_rstSeq
 21223  1930                     i1l5131:
 21224                           
 21225                           ;main.c: 1313:     rstDemoOn(0);
 21226  1930  3000               	movlw	0
 21227  1931  31A1  2177  3199   	fcall	i1_rstDemoOn
 21228  1934                     i1l5133:
 21229                           
 21230                           ;main.c: 1314:     rstDemoOff(0);
 21231  1934  3000               	movlw	0
 21232  1935  31A1  219F  3199   	fcall	i1_rstDemoOff
 21233  1938                     i1l5135:
 21234                           
 21235                           ;main.c: 1315:     rstMaskOn(0);
 21236  1938  3000               	movlw	0
 21237  1939  31A1  21C7  3199   	fcall	i1_rstMaskOn
 21238  193C                     i1l5137:
 21239                           
 21240                           ;main.c: 1316:     rstMaskOff(0);
 21241  193C  3000               	movlw	0
 21242  193D  31A1  21DD  3199   	fcall	i1_rstMaskOff
 21243  1940                     i1l5139:
 21244                           
 21245                           ;main.c: 1317:     rstShadow(0);
 21246  1940  3000               	movlw	0
 21247  1941  31A2  2227  3199   	fcall	i1_rstShadow
 21248  1944                     i1l5141:
 21249                           
 21250                           ;main.c: 1318:     rstDragon(0);
 21251  1944  3000               	movlw	0
 21252  1945  31A5  2574  3199   	fcall	i1_rstDragon
 21253  1948                     i1l5143:
 21254                           
 21255                           ;main.c: 1319:     rstMusik(0);
 21256  1948  3000               	movlw	0
 21257  1949  31A2  22BA  3199   	fcall	i1_rstMusik
 21258  194C                     i1l5145:
 21259                           
 21260                           ;main.c: 1320:     secCont = 0;
 21261  194C  3000               	movlw	0
 21262  194D  0023               	movlb	3	; select bank3
 21263  194E  00C9               	movwf	(_secCont+3)^(0+384)
 21264  194F  3000               	movlw	0
 21265  1950  00C8               	movwf	(_secCont+2)^(0+384)
 21266  1951  3000               	movlw	0
 21267  1952  00C7               	movwf	(_secCont+1)^(0+384)
 21268  1953  3000               	movlw	0
 21269  1954  00C6               	movwf	_secCont^(0+384)
 21270  1955                     i1l5147:
 21271                           
 21272                           ;main.c: 1321:     stepContDemo = 0;
 21273  1955  0021               	movlb	1	; select bank1
 21274  1956  01D7               	clrf	_stepContDemo^(0+128)
 21275  1957                     i1l5149:
 21276                           
 21277                           ;main.c: 1322:     stepContPress = 0;
 21278  1957  01D6               	clrf	_stepContPress^(0+128)
 21279  1958                     i1l5151:
 21280                           
 21281                           ;main.c: 1323:     dragonCrashDone = 0;
 21282  1958  01DB               	clrf	_dragonCrashDone^(0+128)
 21283  1959                     i1l5153:
 21284                           
 21285                           ;main.c: 1324:     refriShoulderDone = 0;
 21286  1959  01D8               	clrf	_refriShoulderDone^(0+128)
 21287  195A                     i1l5155:
 21288                           
 21289                           ;main.c: 1326:     run = 0;
 21290  195A  0020               	movlb	0	; select bank0
 21291  195B  01C5               	clrf	_run
 21292  195C                     i1l5157:
 21293                           
 21294                           ;main.c: 1327:     if(light) {
 21295  195C  084D               	movf	i1resetAndOff@light,w
 21296  195D  1903               	btfsc	3,2
 21297  195E  2960               	goto	u335_21
 21298  195F  2961               	goto	u335_20
 21299  1960                     u335_21:
 21300  1960  2969               	goto	i1l5163
 21301  1961                     u335_20:
 21302  1961                     i1l5159:
 21303                           
 21304                           ;main.c: 1328:         fullBodyVal = 0;
 21305  1961  01B0               	clrf	_fullBodyVal
 21306  1962  01B1               	clrf	_fullBodyVal+1
 21307                           
 21308                           ;main.c: 1329:         genVal = 0;
 21309  1963  01B5               	clrf	_genVal
 21310  1964                     i1l5161:
 21311                           
 21312                           ;main.c: 1330:         allBodyVal(0, 0);
 21313  1964  01F9               	clrf	i1allBodyVal@color
 21314  1965  3000               	movlw	0
 21315  1966  31A4  2489  3199   	fcall	i1_allBodyVal
 21316  1969                     i1l5163:
 21317                           
 21318                           ;main.c: 1332:     sendOrderX();
 21319  1969  31A0  20D4  3199   	fcall	i1_sendOrderX
 21320  196C                     i1l1309:
 21321  196C  0008               	return
 21322  196D                     __end_ofi1_resetAndOff:
 21323                           
 21324                           	psect	text99
 21325  20D4                     __ptext99:	
 21326 ;; *************** function i1_sendOrderX *****************
 21327 ;; Defined at:
 21328 ;;		line 495 in file "main.c"
 21329 ;; Parameters:    Size  Location     Type
 21330 ;;		None
 21331 ;; Auto vars:     Size  Location     Type
 21332 ;;		None
 21333 ;; Return value:  Size  Location     Type
 21334 ;;                  1    wreg      void 
 21335 ;; Registers used:
 21336 ;;		None
 21337 ;; Tracked objects:
 21338 ;;		On entry : 0/0
 21339 ;;		On exit  : 0/0
 21340 ;;		Unchanged: 0/0
 21341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21346 ;;Total ram usage:        0 bytes
 21347 ;; Hardware stack levels used: 1
 21348 ;; This function calls:
 21349 ;;		Nothing
 21350 ;; This function is called by:
 21351 ;;		i1_resetAndOff
 21352 ;; This function uses a non-reentrant model
 21353 ;;
 21354                           
 21355                           
 21356                           ;psect for function i1_sendOrderX
 21357  20D4                     i1_sendOrderX:
 21358  20D4                     i1l5035:	
 21359                           ;incstack = 0
 21360                           ; Regs used in i1_sendOrderX: []
 21361                           
 21362                           
 21363                           ;main.c: 496:     sendOrder = 1;
 21364  20D4  0021               	movlb	1	; select bank1
 21365  20D5  01D4               	clrf	_sendOrder^(0+128)
 21366  20D6  0AD4               	incf	_sendOrder^(0+128),f
 21367  20D7                     i1l940:
 21368  20D7  0008               	return
 21369  20D8                     __end_ofi1_sendOrderX:
 21370                           
 21371                           	psect	text100
 21372  2227                     __ptext100:	
 21373 ;; *************** function i1_rstShadow *****************
 21374 ;; Defined at:
 21375 ;;		line 578 in file "main.c"
 21376 ;; Parameters:    Size  Location     Type
 21377 ;;  start           1    wreg     unsigned char 
 21378 ;; Auto vars:     Size  Location     Type
 21379 ;;  start           1    1[COMMON] unsigned char 
 21380 ;; Return value:  Size  Location     Type
 21381 ;;                  1    wreg      void 
 21382 ;; Registers used:
 21383 ;;		wreg, status,2
 21384 ;; Tracked objects:
 21385 ;;		On entry : 0/0
 21386 ;;		On exit  : 0/0
 21387 ;;		Unchanged: 0/0
 21388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21390 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21391 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21392 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21393 ;;Total ram usage:        2 bytes
 21394 ;; Hardware stack levels used: 1
 21395 ;; This function calls:
 21396 ;;		Nothing
 21397 ;; This function is called by:
 21398 ;;		i1_resetAndOff
 21399 ;; This function uses a non-reentrant model
 21400 ;;
 21401                           
 21402                           
 21403                           ;psect for function i1_rstShadow
 21404  2227                     i1_rstShadow:
 21405                           
 21406                           ;incstack = 0
 21407                           ; Regs used in i1_rstShadow: [wreg+status,2]
 21408                           ;i1rstShadow@start stored from wreg
 21409  2227  00F1               	movwf	i1rstShadow@start
 21410  2228                     i1l5037:
 21411                           
 21412                           ;main.c: 579:     subContShadow = 0;
 21413  2228  0021               	movlb	1	; select bank1
 21414  2229  01DE               	clrf	_subContShadow^(0+128)
 21415                           
 21416                           ;main.c: 580:     indexShadow = 0;
 21417  222A  0020               	movlb	0	; select bank0
 21418  222B  01BE               	clrf	_indexShadow
 21419                           
 21420                           ;main.c: 581:     contTimShadow = 0;
 21421  222C  0021               	movlb	1	; select bank1
 21422  222D  01BD               	clrf	_contTimShadow^(0+128)
 21423  222E  01BE               	clrf	(_contTimShadow+1)^(0+128)
 21424  222F                     i1l5039:
 21425                           
 21426                           ;main.c: 582:     runShadow = start;
 21427  222F  0871               	movf	i1rstShadow@start,w
 21428  2230  00F0               	movwf	??i1_rstShadow
 21429  2231  0870               	movf	??i1_rstShadow,w
 21430  2232  0020               	movlb	0	; select bank0
 21431  2233  00BF               	movwf	_runShadow
 21432  2234                     i1l1005:
 21433  2234  0008               	return
 21434  2235                     __end_ofi1_rstShadow:
 21435                           
 21436                           	psect	text101
 21437  234A                     __ptext101:	
 21438 ;; *************** function i1_rstSeq *****************
 21439 ;; Defined at:
 21440 ;;		line 1293 in file "main.c"
 21441 ;; Parameters:    Size  Location     Type
 21442 ;;		None
 21443 ;; Auto vars:     Size  Location     Type
 21444 ;;  i               1    1[COMMON] unsigned char 
 21445 ;; Return value:  Size  Location     Type
 21446 ;;                  1    wreg      void 
 21447 ;; Registers used:
 21448 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21449 ;; Tracked objects:
 21450 ;;		On entry : 0/0
 21451 ;;		On exit  : 0/0
 21452 ;;		Unchanged: 0/0
 21453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21455 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21456 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21457 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21458 ;;Total ram usage:        2 bytes
 21459 ;; Hardware stack levels used: 1
 21460 ;; This function calls:
 21461 ;;		Nothing
 21462 ;; This function is called by:
 21463 ;;		i1_resetAndOff
 21464 ;; This function uses a non-reentrant model
 21465 ;;
 21466                           
 21467                           
 21468                           ;psect for function i1_rstSeq
 21469  234A                     i1_rstSeq:
 21470  234A                     i1l5099:	
 21471                           ;incstack = 0
 21472                           ; Regs used in i1_rstSeq: [wreg+fsr1l+fsr1h+status,2+status,0]
 21473                           
 21474                           
 21475                           ;main.c: 1294:     char i = 0;
 21476  234A  01F1               	clrf	i1rstSeq@i
 21477                           
 21478                           ;main.c: 1295:     for(i = 0; i < 6; i++)
 21479  234B  01F1               	clrf	i1rstSeq@i
 21480  234C                     i1l5105:
 21481                           
 21482                           ;main.c: 1296:         SeqVals[i] = 0;
 21483  234C  3571               	lslf	i1rstSeq@i,w
 21484  234D  3EA0               	addlw	(low (_SeqVals| 0))& (0+255)
 21485  234E  0086               	movwf	6
 21486  234F  0187               	clrf	7
 21487  2350  3000               	movlw	0
 21488  2351  3FC0               	movwi [0]fsr1
 21489  2352  3FC1               	movwi [1]fsr1
 21490  2353                     i1l5107:
 21491  2353  3001               	movlw	1
 21492  2354  00F0               	movwf	??i1_rstSeq
 21493  2355  0870               	movf	??i1_rstSeq,w
 21494  2356  07F1               	addwf	i1rstSeq@i,f
 21495  2357                     i1l5109:
 21496  2357  3006               	movlw	6
 21497  2358  0271               	subwf	i1rstSeq@i,w
 21498  2359  1C03               	skipc
 21499  235A  2B5C               	goto	u333_21
 21500  235B  2B5D               	goto	u333_20
 21501  235C                     u333_21:
 21502  235C  2B4C               	goto	i1l5105
 21503  235D                     u333_20:
 21504  235D                     i1l1299:
 21505  235D  0008               	return
 21506  235E                     __end_ofi1_rstSeq:
 21507                           
 21508                           	psect	text102
 21509  22BA                     __ptext102:	
 21510 ;; *************** function i1_rstMusik *****************
 21511 ;; Defined at:
 21512 ;;		line 1014 in file "main.c"
 21513 ;; Parameters:    Size  Location     Type
 21514 ;;  start           1    wreg     unsigned char 
 21515 ;; Auto vars:     Size  Location     Type
 21516 ;;  start           1    1[COMMON] unsigned char 
 21517 ;; Return value:  Size  Location     Type
 21518 ;;                  1    wreg      void 
 21519 ;; Registers used:
 21520 ;;		wreg, status,2
 21521 ;; Tracked objects:
 21522 ;;		On entry : 0/0
 21523 ;;		On exit  : 0/0
 21524 ;;		Unchanged: 0/0
 21525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21527 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21528 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21529 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21530 ;;Total ram usage:        2 bytes
 21531 ;; Hardware stack levels used: 1
 21532 ;; This function calls:
 21533 ;;		Nothing
 21534 ;; This function is called by:
 21535 ;;		i1_resetAndOff
 21536 ;; This function uses a non-reentrant model
 21537 ;;
 21538                           
 21539                           
 21540                           ;psect for function i1_rstMusik
 21541  22BA                     i1_rstMusik:
 21542                           
 21543                           ;incstack = 0
 21544                           ; Regs used in i1_rstMusik: [wreg+status,2]
 21545                           ;i1rstMusik@start stored from wreg
 21546  22BA  00F1               	movwf	i1rstMusik@start
 21547  22BB                     i1l5077:
 21548                           
 21549                           ;main.c: 1015:     ritmCont = 0;
 21550  22BB  0021               	movlb	1	; select bank1
 21551  22BC  01B7               	clrf	_ritmCont^(0+128)
 21552  22BD  01B8               	clrf	(_ritmCont+1)^(0+128)
 21553  22BE                     i1l5079:
 21554                           
 21555                           ;main.c: 1016:     noteNum = -5;
 21556  22BE  30FB               	movlw	251
 21557  22BF  00F0               	movwf	??i1_rstMusik
 21558  22C0  0870               	movf	??i1_rstMusik,w
 21559  22C1  0020               	movlb	0	; select bank0
 21560  22C2  00B7               	movwf	_noteNum
 21561  22C3                     i1l5081:
 21562                           
 21563                           ;main.c: 1017:     stepsNote = 0;
 21564  22C3  01B9               	clrf	_stepsNote
 21565  22C4                     i1l5083:
 21566                           
 21567                           ;main.c: 1018:     noteOnTempo = 0;
 21568  22C4  01B8               	clrf	_noteOnTempo
 21569  22C5                     i1l5085:
 21570                           
 21571                           ;main.c: 1019:     musikRun = start;
 21572  22C5  0871               	movf	i1rstMusik@start,w
 21573  22C6  00F0               	movwf	??i1_rstMusik
 21574  22C7  0870               	movf	??i1_rstMusik,w
 21575  22C8  00BA               	movwf	_musikRun
 21576  22C9                     i1l1189:
 21577  22C9  0008               	return
 21578  22CA                     __end_ofi1_rstMusik:
 21579                           
 21580                           	psect	text103
 21581  21C7                     __ptext103:	
 21582 ;; *************** function i1_rstMaskOn *****************
 21583 ;; Defined at:
 21584 ;;		line 831 in file "main.c"
 21585 ;; Parameters:    Size  Location     Type
 21586 ;;  start           1    wreg     unsigned char 
 21587 ;; Auto vars:     Size  Location     Type
 21588 ;;  start           1    1[COMMON] unsigned char 
 21589 ;; Return value:  Size  Location     Type
 21590 ;;                  1    wreg      void 
 21591 ;; Registers used:
 21592 ;;		wreg, status,2
 21593 ;; Tracked objects:
 21594 ;;		On entry : 0/0
 21595 ;;		On exit  : 0/0
 21596 ;;		Unchanged: 0/0
 21597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21599 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21600 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21601 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21602 ;;Total ram usage:        2 bytes
 21603 ;; Hardware stack levels used: 1
 21604 ;; This function calls:
 21605 ;;		Nothing
 21606 ;; This function is called by:
 21607 ;;		_execMask_Sword
 21608 ;;		i1_resetAndOff
 21609 ;; This function uses a non-reentrant model
 21610 ;;
 21611                           
 21612                           
 21613                           ;psect for function i1_rstMaskOn
 21614  21C7                     i1_rstMaskOn:
 21615                           
 21616                           ;incstack = 0
 21617                           ; Regs used in i1_rstMaskOn: [wreg+status,2]
 21618                           ;i1rstMaskOn@start stored from wreg
 21619  21C7  00F1               	movwf	i1rstMaskOn@start
 21620  21C8                     i1l5065:
 21621                           
 21622                           ;main.c: 832:     indexMaskOn = 0;
 21623  21C8  0021               	movlb	1	; select bank1
 21624  21C9  01C3               	clrf	_indexMaskOn^(0+128)
 21625  21CA  01C4               	clrf	(_indexMaskOn+1)^(0+128)
 21626                           
 21627                           ;main.c: 833:     contTimMaskOn = 0;
 21628  21CB  01C1               	clrf	_contTimMaskOn^(0+128)
 21629  21CC  01C2               	clrf	(_contTimMaskOn+1)^(0+128)
 21630  21CD                     i1l5067:
 21631                           
 21632                           ;main.c: 834:     runMaskOn = start;
 21633  21CD  0871               	movf	i1rstMaskOn@start,w
 21634  21CE  00F0               	movwf	??i1_rstMaskOn
 21635  21CF  0870               	movf	??i1_rstMaskOn,w
 21636  21D0  00DF               	movwf	_runMaskOn^(0+128)
 21637  21D1                     i1l1107:
 21638  21D1  0008               	return
 21639  21D2                     __end_ofi1_rstMaskOn:
 21640                           
 21641                           	psect	text104
 21642  21DD                     __ptext104:	
 21643 ;; *************** function i1_rstMaskOff *****************
 21644 ;; Defined at:
 21645 ;;		line 852 in file "main.c"
 21646 ;; Parameters:    Size  Location     Type
 21647 ;;  start           1    wreg     unsigned char 
 21648 ;; Auto vars:     Size  Location     Type
 21649 ;;  start           1    1[COMMON] unsigned char 
 21650 ;; Return value:  Size  Location     Type
 21651 ;;                  1    wreg      void 
 21652 ;; Registers used:
 21653 ;;		wreg, status,2
 21654 ;; Tracked objects:
 21655 ;;		On entry : 0/0
 21656 ;;		On exit  : 0/0
 21657 ;;		Unchanged: 0/0
 21658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21660 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21661 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21662 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21663 ;;Total ram usage:        2 bytes
 21664 ;; Hardware stack levels used: 1
 21665 ;; This function calls:
 21666 ;;		Nothing
 21667 ;; This function is called by:
 21668 ;;		_execMask_Sword
 21669 ;;		i1_resetAndOff
 21670 ;; This function uses a non-reentrant model
 21671 ;;
 21672                           
 21673                           
 21674                           ;psect for function i1_rstMaskOff
 21675  21DD                     i1_rstMaskOff:
 21676                           
 21677                           ;incstack = 0
 21678                           ; Regs used in i1_rstMaskOff: [wreg+status,2]
 21679                           ;i1rstMaskOff@start stored from wreg
 21680  21DD  00F1               	movwf	i1rstMaskOff@start
 21681  21DE                     i1l5069:
 21682                           
 21683                           ;main.c: 853:     contTimMaskOff = 0;
 21684  21DE  0021               	movlb	1	; select bank1
 21685  21DF  01BF               	clrf	_contTimMaskOff^(0+128)
 21686  21E0  01C0               	clrf	(_contTimMaskOff+1)^(0+128)
 21687                           
 21688                           ;main.c: 854:     subContMaskOff = 0;
 21689  21E1  0020               	movlb	0	; select bank0
 21690  21E2  01C0               	clrf	_subContMaskOff
 21691                           
 21692                           ;main.c: 855:     indexMaskOff = 0;
 21693  21E3  01C1               	clrf	_indexMaskOff
 21694  21E4                     i1l5071:
 21695                           
 21696                           ;main.c: 856:     runMaskOff = start;
 21697  21E4  0871               	movf	i1rstMaskOff@start,w
 21698  21E5  00F0               	movwf	??i1_rstMaskOff
 21699  21E6  0870               	movf	??i1_rstMaskOff,w
 21700  21E7  00C2               	movwf	_runMaskOff
 21701  21E8                     i1l1116:
 21702  21E8  0008               	return
 21703  21E9                     __end_ofi1_rstMaskOff:
 21704                           
 21705                           	psect	text105
 21706  2574                     __ptext105:	
 21707 ;; *************** function i1_rstDragon *****************
 21708 ;; Defined at:
 21709 ;;		line 742 in file "main.c"
 21710 ;; Parameters:    Size  Location     Type
 21711 ;;  start           1    wreg     unsigned char 
 21712 ;; Auto vars:     Size  Location     Type
 21713 ;;  start           1   12[COMMON] unsigned char 
 21714 ;;  i               1   13[COMMON] unsigned char 
 21715 ;; Return value:  Size  Location     Type
 21716 ;;                  1    wreg      void 
 21717 ;; Registers used:
 21718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21719 ;; Tracked objects:
 21720 ;;		On entry : 0/0
 21721 ;;		On exit  : 0/0
 21722 ;;		Unchanged: 0/0
 21723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21725 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21726 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21727 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21728 ;;Total ram usage:        3 bytes
 21729 ;; Hardware stack levels used: 1
 21730 ;; Hardware stack levels required when called: 3
 21731 ;; This function calls:
 21732 ;;		i1_dragonCrashTool
 21733 ;; This function is called by:
 21734 ;;		_pRC1_ISR
 21735 ;;		i1_resetAndOff
 21736 ;; This function uses a non-reentrant model
 21737 ;;
 21738                           
 21739                           
 21740                           ;psect for function i1_rstDragon
 21741  2574                     i1_rstDragon:
 21742                           
 21743                           ;incstack = 0
 21744                           ; Regs used in i1_rstDragon: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21745                           ;i1rstDragon@start stored from wreg
 21746  2574  00FC               	movwf	i1rstDragon@start
 21747  2575                     i1l5041:
 21748                           
 21749                           ;main.c: 743:     char i = 0;
 21750  2575  01FD               	clrf	i1rstDragon@i
 21751                           
 21752                           ;main.c: 744:     for(i = 0; i < 15; i++) {
 21753  2576  01FD               	clrf	i1rstDragon@i
 21754  2577                     i1l5047:
 21755                           
 21756                           ;main.c: 745:         intensityArray[i] = 255;
 21757  2577  30FF               	movlw	255
 21758  2578  00FB               	movwf	??i1_rstDragon
 21759  2579  087D               	movf	i1rstDragon@i,w
 21760  257A  3E38               	addlw	(low (_intensityArray| (0+256)))& (0+255)
 21761  257B  0086               	movwf	6
 21762  257C  3001               	movlw	1	; select bank2/3
 21763  257D  0087               	movwf	7
 21764  257E  087B               	movf	??i1_rstDragon,w
 21765  257F  0081               	movwf	1
 21766                           
 21767                           ;main.c: 746:         dragonArray[i] = 0;
 21768  2580  087D               	movf	i1rstDragon@i,w
 21769  2581  3E47               	addlw	(low (_dragonArray| (0+256)))& (0+255)
 21770  2582  0086               	movwf	6
 21771  2583  3001               	movlw	1	; select bank2/3
 21772  2584  0087               	movwf	7
 21773  2585  0181               	clrf	1
 21774  2586                     i1l5049:
 21775                           
 21776                           ;main.c: 747:         dragonCrashTool();
 21777  2586  319F  2740  31A5   	fcall	i1_dragonCrashTool
 21778  2589                     i1l5051:
 21779                           
 21780                           ;main.c: 748:     }
 21781  2589  3001               	movlw	1
 21782  258A  00FB               	movwf	??i1_rstDragon
 21783  258B  087B               	movf	??i1_rstDragon,w
 21784  258C  07FD               	addwf	i1rstDragon@i,f
 21785  258D                     i1l5053:
 21786  258D  300F               	movlw	15
 21787  258E  027D               	subwf	i1rstDragon@i,w
 21788  258F  1C03               	skipc
 21789  2590  2D92               	goto	u332_21
 21790  2591  2D93               	goto	u332_20
 21791  2592                     u332_21:
 21792  2592  2D77               	goto	i1l5047
 21793  2593                     u332_20:
 21794  2593                     i1l5055:
 21795                           
 21796                           ;main.c: 749:     intensityCrash = 255;
 21797  2593  30FF               	movlw	255
 21798  2594  0020               	movlb	0	; select bank0
 21799  2595  00A8               	movwf	_intensityCrash
 21800  2596  3000               	movlw	0
 21801  2597  00A9               	movwf	_intensityCrash+1
 21802  2598                     i1l5057:
 21803                           
 21804                           ;main.c: 750:     subContCrash = 0;
 21805  2598  01BC               	clrf	_subContCrash
 21806  2599                     i1l5059:
 21807                           
 21808                           ;main.c: 751:     indexCrash = 0;
 21809  2599  01BD               	clrf	_indexCrash
 21810  259A                     i1l5061:
 21811                           
 21812                           ;main.c: 752:     contCrash = 0;
 21813  259A  0021               	movlb	1	; select bank1
 21814  259B  01BB               	clrf	_contCrash^(0+128)
 21815  259C  01BC               	clrf	(_contCrash+1)^(0+128)
 21816  259D                     i1l5063:
 21817                           
 21818                           ;main.c: 753:     runCrash = start;
 21819  259D  087C               	movf	i1rstDragon@start,w
 21820  259E  00FB               	movwf	??i1_rstDragon
 21821  259F  087B               	movf	??i1_rstDragon,w
 21822  25A0  00DD               	movwf	_runCrash^(0+128)
 21823  25A1                     i1l1070:
 21824  25A1  0008               	return
 21825  25A2                     __end_ofi1_rstDragon:
 21826                           
 21827                           	psect	text106
 21828  1F40                     __ptext106:	
 21829 ;; *************** function i1_dragonCrashTool *****************
 21830 ;; Defined at:
 21831 ;;		line 724 in file "main.c"
 21832 ;; Parameters:    Size  Location     Type
 21833 ;;		None
 21834 ;; Auto vars:     Size  Location     Type
 21835 ;;		None
 21836 ;; Return value:  Size  Location     Type
 21837 ;;                  1    wreg      void 
 21838 ;; Registers used:
 21839 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21840 ;; Tracked objects:
 21841 ;;		On entry : 0/0
 21842 ;;		On exit  : 0/0
 21843 ;;		Unchanged: 0/0
 21844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21847 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21848 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21849 ;;Total ram usage:        2 bytes
 21850 ;; Hardware stack levels used: 1
 21851 ;; Hardware stack levels required when called: 2
 21852 ;; This function calls:
 21853 ;;		i1_applyColor
 21854 ;; This function is called by:
 21855 ;;		i1_rstDragon
 21856 ;; This function uses a non-reentrant model
 21857 ;;
 21858                           
 21859                           
 21860                           ;psect for function i1_dragonCrashTool
 21861  1F40                     i1_dragonCrashTool:
 21862  1F40                     i1l4939:	
 21863                           ;incstack = 0
 21864                           ; Regs used in i1_dragonCrashTool: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21865                           
 21866                           
 21867                           ;main.c: 725:     applyColor(6, dragonArray[0], intensityArray[0]);
 21868  1F40  0022               	movlb	2	; select bank2
 21869  1F41  0847               	movf	_dragonArray^(0+256),w
 21870  1F42  00F9               	movwf	??i1_dragonCrashTool
 21871  1F43  0879               	movf	??i1_dragonCrashTool,w
 21872  1F44  00F5               	movwf	i1applyColor@color
 21873  1F45  0838               	movf	_intensityArray^(0+256),w
 21874  1F46  00FA               	movwf	??i1_dragonCrashTool+1
 21875  1F47  087A               	movf	??i1_dragonCrashTool+1,w
 21876  1F48  00F6               	movwf	i1applyColor@intensity
 21877  1F49  3006               	movlw	6
 21878  1F4A  31A2  22FE  319F   	fcall	i1_applyColor
 21879                           
 21880                           ;main.c: 726:     applyColor(4, dragonArray[1], intensityArray[1]);
 21881  1F4D  0022               	movlb	2	; select bank2
 21882  1F4E  0848               	movf	(_dragonArray^(0+256)+1),w
 21883  1F4F  00F9               	movwf	??i1_dragonCrashTool
 21884  1F50  0879               	movf	??i1_dragonCrashTool,w
 21885  1F51  00F5               	movwf	i1applyColor@color
 21886  1F52  0839               	movf	(_intensityArray^(0+256)+1),w
 21887  1F53  00FA               	movwf	??i1_dragonCrashTool+1
 21888  1F54  087A               	movf	??i1_dragonCrashTool+1,w
 21889  1F55  00F6               	movwf	i1applyColor@intensity
 21890  1F56  3004               	movlw	4
 21891  1F57  31A2  22FE  319F   	fcall	i1_applyColor
 21892                           
 21893                           ;main.c: 727:     applyColor(8, dragonArray[2], intensityArray[2]);
 21894  1F5A  0022               	movlb	2	; select bank2
 21895  1F5B  0849               	movf	(_dragonArray^(0+256)+2),w
 21896  1F5C  00F9               	movwf	??i1_dragonCrashTool
 21897  1F5D  0879               	movf	??i1_dragonCrashTool,w
 21898  1F5E  00F5               	movwf	i1applyColor@color
 21899  1F5F  083A               	movf	(_intensityArray^(0+256)+2),w
 21900  1F60  00FA               	movwf	??i1_dragonCrashTool+1
 21901  1F61  087A               	movf	??i1_dragonCrashTool+1,w
 21902  1F62  00F6               	movwf	i1applyColor@intensity
 21903  1F63  3008               	movlw	8
 21904  1F64  31A2  22FE  319F   	fcall	i1_applyColor
 21905                           
 21906                           ;main.c: 728:     applyColor(10, dragonArray[3], intensityArray[3]);
 21907  1F67  0022               	movlb	2	; select bank2
 21908  1F68  084A               	movf	(_dragonArray^(0+256)+3),w
 21909  1F69  00F9               	movwf	??i1_dragonCrashTool
 21910  1F6A  0879               	movf	??i1_dragonCrashTool,w
 21911  1F6B  00F5               	movwf	i1applyColor@color
 21912  1F6C  083B               	movf	(_intensityArray^(0+256)+3),w
 21913  1F6D  00FA               	movwf	??i1_dragonCrashTool+1
 21914  1F6E  087A               	movf	??i1_dragonCrashTool+1,w
 21915  1F6F  00F6               	movwf	i1applyColor@intensity
 21916  1F70  300A               	movlw	10
 21917  1F71  31A2  22FE  319F   	fcall	i1_applyColor
 21918                           
 21919                           ;main.c: 729:     applyColor(14, dragonArray[4], intensityArray[4]);
 21920  1F74  0022               	movlb	2	; select bank2
 21921  1F75  084B               	movf	(_dragonArray^(0+256)+4),w
 21922  1F76  00F9               	movwf	??i1_dragonCrashTool
 21923  1F77  0879               	movf	??i1_dragonCrashTool,w
 21924  1F78  00F5               	movwf	i1applyColor@color
 21925  1F79  083C               	movf	(_intensityArray^(0+256)+4),w
 21926  1F7A  00FA               	movwf	??i1_dragonCrashTool+1
 21927  1F7B  087A               	movf	??i1_dragonCrashTool+1,w
 21928  1F7C  00F6               	movwf	i1applyColor@intensity
 21929  1F7D  300E               	movlw	14
 21930  1F7E  31A2  22FE  319F   	fcall	i1_applyColor
 21931                           
 21932                           ;main.c: 730:     applyColor(20, dragonArray[5], intensityArray[5]);
 21933  1F81  0022               	movlb	2	; select bank2
 21934  1F82  084C               	movf	(_dragonArray^(0+256)+5),w
 21935  1F83  00F9               	movwf	??i1_dragonCrashTool
 21936  1F84  0879               	movf	??i1_dragonCrashTool,w
 21937  1F85  00F5               	movwf	i1applyColor@color
 21938  1F86  083D               	movf	(_intensityArray^(0+256)+5),w
 21939  1F87  00FA               	movwf	??i1_dragonCrashTool+1
 21940  1F88  087A               	movf	??i1_dragonCrashTool+1,w
 21941  1F89  00F6               	movwf	i1applyColor@intensity
 21942  1F8A  3014               	movlw	20
 21943  1F8B  31A2  22FE  319F   	fcall	i1_applyColor
 21944  1F8E                     i1l4941:
 21945                           
 21946                           ;main.c: 731:     NeckBR[0] = intensityArray[6]; NeckBRcolor[0] = dragonArray[6];
 21947  1F8E  0022               	movlb	2	; select bank2
 21948  1F8F  083E               	movf	(_intensityArray^(0+256)+6),w
 21949  1F90  00F9               	movwf	??i1_dragonCrashTool
 21950  1F91  0879               	movf	??i1_dragonCrashTool,w
 21951  1F92  0021               	movlb	1	; select bank1
 21952  1F93  00B0               	movwf	_NeckBR^(0+128)
 21953  1F94                     i1l4943:
 21954  1F94  0022               	movlb	2	; select bank2
 21955  1F95  084D               	movf	(_dragonArray^(0+256)+6),w
 21956  1F96  00F9               	movwf	??i1_dragonCrashTool
 21957  1F97  0879               	movf	??i1_dragonCrashTool,w
 21958  1F98  0021               	movlb	1	; select bank1
 21959  1F99  00AC               	movwf	_NeckBRcolor^(0+128)
 21960                           
 21961                           ;main.c: 732:     applyColor(16, dragonArray[7], intensityArray[7]);
 21962  1F9A  0022               	movlb	2	; select bank2
 21963  1F9B  084E               	movf	(_dragonArray^(0+256)+7),w
 21964  1F9C  00F9               	movwf	??i1_dragonCrashTool
 21965  1F9D  0879               	movf	??i1_dragonCrashTool,w
 21966  1F9E  00F5               	movwf	i1applyColor@color
 21967  1F9F  083F               	movf	(_intensityArray^(0+256)+7),w
 21968  1FA0  00FA               	movwf	??i1_dragonCrashTool+1
 21969  1FA1  087A               	movf	??i1_dragonCrashTool+1,w
 21970  1FA2  00F6               	movwf	i1applyColor@intensity
 21971  1FA3  3010               	movlw	16
 21972  1FA4  31A2  22FE  319F   	fcall	i1_applyColor
 21973  1FA7                     i1l4945:
 21974                           
 21975                           ;main.c: 733:     NeckBR[1] = intensityArray[8]; NeckBRcolor[1] = dragonArray[8];
 21976  1FA7  0022               	movlb	2	; select bank2
 21977  1FA8  0840               	movf	(_intensityArray^(0+256)+8),w
 21978  1FA9  00F9               	movwf	??i1_dragonCrashTool
 21979  1FAA  0879               	movf	??i1_dragonCrashTool,w
 21980  1FAB  0021               	movlb	1	; select bank1
 21981  1FAC  00B1               	movwf	(_NeckBR^(0+128)+1)
 21982  1FAD                     i1l4947:
 21983  1FAD  0022               	movlb	2	; select bank2
 21984  1FAE  084F               	movf	(_dragonArray^(0+256)+8),w
 21985  1FAF  00F9               	movwf	??i1_dragonCrashTool
 21986  1FB0  0879               	movf	??i1_dragonCrashTool,w
 21987  1FB1  0021               	movlb	1	; select bank1
 21988  1FB2  00AD               	movwf	(_NeckBRcolor^(0+128)+1)
 21989                           
 21990                           ;main.c: 734:     applyColor(18, dragonArray[9], intensityArray[9]);
 21991  1FB3  0022               	movlb	2	; select bank2
 21992  1FB4  0850               	movf	(_dragonArray^(0+256)+9),w
 21993  1FB5  00F9               	movwf	??i1_dragonCrashTool
 21994  1FB6  0879               	movf	??i1_dragonCrashTool,w
 21995  1FB7  00F5               	movwf	i1applyColor@color
 21996  1FB8  0841               	movf	(_intensityArray^(0+256)+9),w
 21997  1FB9  00FA               	movwf	??i1_dragonCrashTool+1
 21998  1FBA  087A               	movf	??i1_dragonCrashTool+1,w
 21999  1FBB  00F6               	movwf	i1applyColor@intensity
 22000  1FBC  3012               	movlw	18
 22001  1FBD  31A2  22FE  319F   	fcall	i1_applyColor
 22002  1FC0                     i1l4949:
 22003                           
 22004                           ;main.c: 735:     NeckBR[2] = intensityArray[10]; NeckBRcolor[2] = dragonArray[10];
 22005  1FC0  0022               	movlb	2	; select bank2
 22006  1FC1  0842               	movf	(_intensityArray^(0+256)+10),w
 22007  1FC2  00F9               	movwf	??i1_dragonCrashTool
 22008  1FC3  0879               	movf	??i1_dragonCrashTool,w
 22009  1FC4  0021               	movlb	1	; select bank1
 22010  1FC5  00B2               	movwf	(_NeckBR^(0+128)+2)
 22011  1FC6                     i1l4951:
 22012  1FC6  0022               	movlb	2	; select bank2
 22013  1FC7  0851               	movf	(_dragonArray^(0+256)+10),w
 22014  1FC8  00F9               	movwf	??i1_dragonCrashTool
 22015  1FC9  0879               	movf	??i1_dragonCrashTool,w
 22016  1FCA  0021               	movlb	1	; select bank1
 22017  1FCB  00AE               	movwf	(_NeckBRcolor^(0+128)+2)
 22018                           
 22019                           ;main.c: 736:     applyColor(24, dragonArray[11], intensityArray[11]);
 22020  1FCC  0022               	movlb	2	; select bank2
 22021  1FCD  0852               	movf	(_dragonArray^(0+256)+11),w
 22022  1FCE  00F9               	movwf	??i1_dragonCrashTool
 22023  1FCF  0879               	movf	??i1_dragonCrashTool,w
 22024  1FD0  00F5               	movwf	i1applyColor@color
 22025  1FD1  0843               	movf	(_intensityArray^(0+256)+11),w
 22026  1FD2  00FA               	movwf	??i1_dragonCrashTool+1
 22027  1FD3  087A               	movf	??i1_dragonCrashTool+1,w
 22028  1FD4  00F6               	movwf	i1applyColor@intensity
 22029  1FD5  3018               	movlw	24
 22030  1FD6  31A2  22FE  319F   	fcall	i1_applyColor
 22031  1FD9                     i1l4953:
 22032                           
 22033                           ;main.c: 737:     NeckBR[3] = intensityArray[12]; NeckBRcolor[3] = dragonArray[12];
 22034  1FD9  0022               	movlb	2	; select bank2
 22035  1FDA  0844               	movf	(_intensityArray^(0+256)+12),w
 22036  1FDB  00F9               	movwf	??i1_dragonCrashTool
 22037  1FDC  0879               	movf	??i1_dragonCrashTool,w
 22038  1FDD  0021               	movlb	1	; select bank1
 22039  1FDE  00B3               	movwf	(_NeckBR^(0+128)+3)
 22040  1FDF                     i1l4955:
 22041  1FDF  0022               	movlb	2	; select bank2
 22042  1FE0  0853               	movf	(_dragonArray^(0+256)+12),w
 22043  1FE1  00F9               	movwf	??i1_dragonCrashTool
 22044  1FE2  0879               	movf	??i1_dragonCrashTool,w
 22045  1FE3  0021               	movlb	1	; select bank1
 22046  1FE4  00AF               	movwf	(_NeckBRcolor^(0+128)+3)
 22047                           
 22048                           ;main.c: 738:     applyColor(26, dragonArray[13], intensityArray[13]);
 22049  1FE5  0022               	movlb	2	; select bank2
 22050  1FE6  0854               	movf	(_dragonArray^(0+256)+13),w
 22051  1FE7  00F9               	movwf	??i1_dragonCrashTool
 22052  1FE8  0879               	movf	??i1_dragonCrashTool,w
 22053  1FE9  00F5               	movwf	i1applyColor@color
 22054  1FEA  0845               	movf	(_intensityArray^(0+256)+13),w
 22055  1FEB  00FA               	movwf	??i1_dragonCrashTool+1
 22056  1FEC  087A               	movf	??i1_dragonCrashTool+1,w
 22057  1FED  00F6               	movwf	i1applyColor@intensity
 22058  1FEE  301A               	movlw	26
 22059  1FEF  31A2  22FE  319F   	fcall	i1_applyColor
 22060                           
 22061                           ;main.c: 739:     applyColor(28, dragonArray[14], intensityArray[14]);
 22062  1FF2  0022               	movlb	2	; select bank2
 22063  1FF3  0855               	movf	(_dragonArray^(0+256)+14),w
 22064  1FF4  00F9               	movwf	??i1_dragonCrashTool
 22065  1FF5  0879               	movf	??i1_dragonCrashTool,w
 22066  1FF6  00F5               	movwf	i1applyColor@color
 22067  1FF7  0846               	movf	(_intensityArray^(0+256)+14),w
 22068  1FF8  00FA               	movwf	??i1_dragonCrashTool+1
 22069  1FF9  087A               	movf	??i1_dragonCrashTool+1,w
 22070  1FFA  00F6               	movwf	i1applyColor@intensity
 22071  1FFB  301C               	movlw	28
 22072  1FFC  31A2  22FE  319F   	fcall	i1_applyColor
 22073  1FFF                     i1l1065:
 22074  1FFF  0008               	return
 22075  2000                     __end_ofi1_dragonCrashTool:
 22076                           
 22077                           	psect	text107
 22078  219F                     __ptext107:	
 22079 ;; *************** function i1_rstDemoOff *****************
 22080 ;; Defined at:
 22081 ;;		line 1149 in file "main.c"
 22082 ;; Parameters:    Size  Location     Type
 22083 ;;  start           1    wreg     unsigned char 
 22084 ;; Auto vars:     Size  Location     Type
 22085 ;;  start           1    1[COMMON] unsigned char 
 22086 ;; Return value:  Size  Location     Type
 22087 ;;                  1    wreg      void 
 22088 ;; Registers used:
 22089 ;;		wreg, status,2
 22090 ;; Tracked objects:
 22091 ;;		On entry : 0/0
 22092 ;;		On exit  : 0/0
 22093 ;;		Unchanged: 0/0
 22094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22096 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22097 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22098 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22099 ;;Total ram usage:        2 bytes
 22100 ;; Hardware stack levels used: 1
 22101 ;; This function calls:
 22102 ;;		Nothing
 22103 ;; This function is called by:
 22104 ;;		i1_resetAndOff
 22105 ;;		i1_butt3Pres
 22106 ;; This function uses a non-reentrant model
 22107 ;;
 22108                           
 22109                           
 22110                           ;psect for function i1_rstDemoOff
 22111  219F                     i1_rstDemoOff:
 22112                           
 22113                           ;incstack = 0
 22114                           ; Regs used in i1_rstDemoOff: [wreg+status,2]
 22115                           ;i1rstDemoOff@start stored from wreg
 22116  219F  00F1               	movwf	i1rstDemoOff@start
 22117  21A0                     i1l5087:
 22118                           
 22119                           ;main.c: 1150:     timDemoOff = 0;
 22120  21A0  0020               	movlb	0	; select bank0
 22121  21A1  01AA               	clrf	_timDemoOff
 22122  21A2  01AB               	clrf	_timDemoOff+1
 22123  21A3                     i1l5089:
 22124                           
 22125                           ;main.c: 1151:     flagDemoOff = start;
 22126  21A3  0871               	movf	i1rstDemoOff@start,w
 22127  21A4  00F0               	movwf	??i1_rstDemoOff
 22128  21A5  0870               	movf	??i1_rstDemoOff,w
 22129  21A6  0021               	movlb	1	; select bank1
 22130  21A7  00E1               	movwf	_flagDemoOff^(0+128)
 22131  21A8                     i1l1250:
 22132  21A8  0008               	return
 22133  21A9                     __end_ofi1_rstDemoOff:
 22134                           
 22135                           	psect	text108
 22136  2489                     __ptext108:	
 22137 ;; *************** function i1_allBodyVal *****************
 22138 ;; Defined at:
 22139 ;;		line 1299 in file "main.c"
 22140 ;; Parameters:    Size  Location     Type
 22141 ;;  val             1    wreg     unsigned char 
 22142 ;;  color           1    9[COMMON] unsigned char 
 22143 ;; Auto vars:     Size  Location     Type
 22144 ;;  val             1   12[COMMON] unsigned char 
 22145 ;;  i               1   13[COMMON] unsigned char 
 22146 ;; Return value:  Size  Location     Type
 22147 ;;                  1    wreg      void 
 22148 ;; Registers used:
 22149 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22150 ;; Tracked objects:
 22151 ;;		On entry : 0/0
 22152 ;;		On exit  : 0/0
 22153 ;;		Unchanged: 0/0
 22154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22155 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22156 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22157 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22158 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22159 ;;Total ram usage:        5 bytes
 22160 ;; Hardware stack levels used: 1
 22161 ;; Hardware stack levels required when called: 2
 22162 ;; This function calls:
 22163 ;;		i1_applyColor
 22164 ;; This function is called by:
 22165 ;;		_pRC1_ISR
 22166 ;;		i1_resetAndOff
 22167 ;; This function uses a non-reentrant model
 22168 ;;
 22169                           
 22170                           
 22171                           ;psect for function i1_allBodyVal
 22172  2489                     i1_allBodyVal:
 22173                           
 22174                           ;incstack = 0
 22175                           ; Regs used in i1_allBodyVal: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22176                           ;i1allBodyVal@val stored from wreg
 22177  2489  00FC               	movwf	i1allBodyVal@val
 22178  248A                     i1l5111:
 22179                           
 22180                           ;main.c: 1300:     char i = 0;
 22181  248A  01FD               	clrf	i1allBodyVal@i
 22182                           
 22183                           ;main.c: 1301:     for(i = 0; i < groupCant; i++)
 22184  248B  01FD               	clrf	i1allBodyVal@i
 22185  248C  2C9D               	goto	i1l5117
 22186  248D                     i1l5113:
 22187                           
 22188                           ;main.c: 1302:         applyColor(i, color, val);
 22189  248D  0879               	movf	i1allBodyVal@color,w
 22190  248E  00FA               	movwf	??i1_allBodyVal
 22191  248F  087A               	movf	??i1_allBodyVal,w
 22192  2490  00F5               	movwf	i1applyColor@color
 22193  2491  087C               	movf	i1allBodyVal@val,w
 22194  2492  00FB               	movwf	??i1_allBodyVal+1
 22195  2493  087B               	movf	??i1_allBodyVal+1,w
 22196  2494  00F6               	movwf	i1applyColor@intensity
 22197  2495  087D               	movf	i1allBodyVal@i,w
 22198  2496  31A2  22FE  31A4   	fcall	i1_applyColor
 22199  2499                     i1l5115:
 22200  2499  3001               	movlw	1
 22201  249A  00FA               	movwf	??i1_allBodyVal
 22202  249B  087A               	movf	??i1_allBodyVal,w
 22203  249C  07FD               	addwf	i1allBodyVal@i,f
 22204  249D                     i1l5117:
 22205  249D  0020               	movlb	0	; select bank0
 22206  249E  086B               	movf	_groupCant,w
 22207  249F  027D               	subwf	i1allBodyVal@i,w
 22208  24A0  1C03               	skipc
 22209  24A1  2CA3               	goto	u334_21
 22210  24A2  2CA4               	goto	u334_20
 22211  24A3                     u334_21:
 22212  24A3  2C8D               	goto	i1l5113
 22213  24A4                     u334_20:
 22214  24A4                     i1l1305:
 22215  24A4  0008               	return
 22216  24A5                     __end_ofi1_allBodyVal:
 22217                           
 22218                           	psect	text109
 22219  22FE                     __ptext109:	
 22220 ;; *************** function i1_applyColor *****************
 22221 ;; Defined at:
 22222 ;;		line 1288 in file "main.c"
 22223 ;; Parameters:    Size  Location     Type
 22224 ;;  group           1    wreg     unsigned char 
 22225 ;;  color           1    5[COMMON] unsigned char 
 22226 ;;  intensity       1    6[COMMON] unsigned char 
 22227 ;; Auto vars:     Size  Location     Type
 22228 ;;  group           1    8[COMMON] unsigned char 
 22229 ;; Return value:  Size  Location     Type
 22230 ;;                  1    wreg      void 
 22231 ;; Registers used:
 22232 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22233 ;; Tracked objects:
 22234 ;;		On entry : 0/0
 22235 ;;		On exit  : 0/0
 22236 ;;		Unchanged: 0/0
 22237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22238 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22239 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22240 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22241 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22242 ;;Total ram usage:        4 bytes
 22243 ;; Hardware stack levels used: 1
 22244 ;; Hardware stack levels required when called: 1
 22245 ;; This function calls:
 22246 ;;		i1_val2group
 22247 ;; This function is called by:
 22248 ;;		i1_dragonCrashTool
 22249 ;;		i1_refriShoulderTool
 22250 ;;		i1_allBodyVal
 22251 ;; This function uses a non-reentrant model
 22252 ;;
 22253                           
 22254                           
 22255                           ;psect for function i1_applyColor
 22256  22FE                     i1_applyColor:
 22257                           
 22258                           ;incstack = 0
 22259                           ; Regs used in i1_applyColor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22260                           ;i1applyColor@group stored from wreg
 22261  22FE  00F8               	movwf	i1applyColor@group
 22262  22FF                     i1l4935:
 22263                           
 22264                           ;main.c: 1289:     groupColor[group] = color;
 22265  22FF  0875               	movf	i1applyColor@color,w
 22266  2300  00F7               	movwf	??i1_applyColor
 22267  2301  0878               	movf	i1applyColor@group,w
 22268  2302  3EA0               	addlw	(low (_groupColor| (0+768)))& (0+255)
 22269  2303  0086               	movwf	6
 22270  2304  3003               	movlw	3	; select bank7/8
 22271  2305  0087               	movwf	7
 22272  2306  0877               	movf	??i1_applyColor,w
 22273  2307  0081               	movwf	1
 22274  2308                     i1l4937:
 22275                           
 22276                           ;main.c: 1290:     val2group(group, intensity);
 22277  2308  0876               	movf	i1applyColor@intensity,w
 22278  2309  00F7               	movwf	??i1_applyColor
 22279  230A  0877               	movf	??i1_applyColor,w
 22280  230B  00F0               	movwf	i1val2group@val
 22281  230C  0878               	movf	i1applyColor@group,w
 22282  230D  3194  24C5  31A2   	fcall	i1_val2group
 22283  2310                     i1l1294:
 22284  2310  0008               	return
 22285  2311                     __end_ofi1_applyColor:
 22286                           
 22287                           	psect	text110
 22288  14C5                     __ptext110:	
 22289 ;; *************** function i1_val2group *****************
 22290 ;; Defined at:
 22291 ;;		line 301 in file "main.c"
 22292 ;; Parameters:    Size  Location     Type
 22293 ;;  groupID         1    wreg     unsigned char 
 22294 ;;  val             1    0[COMMON] unsigned char 
 22295 ;; Auto vars:     Size  Location     Type
 22296 ;;  groupID         1    3[COMMON] unsigned char 
 22297 ;;  i               1    4[COMMON] unsigned char 
 22298 ;; Return value:  Size  Location     Type
 22299 ;;                  1    wreg      void 
 22300 ;; Registers used:
 22301 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 22302 ;; Tracked objects:
 22303 ;;		On entry : 0/0
 22304 ;;		On exit  : 0/0
 22305 ;;		Unchanged: 0/0
 22306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22307 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22308 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22309 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22310 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22311 ;;Total ram usage:        5 bytes
 22312 ;; Hardware stack levels used: 1
 22313 ;; This function calls:
 22314 ;;		Nothing
 22315 ;; This function is called by:
 22316 ;;		i1_applyColor
 22317 ;; This function uses a non-reentrant model
 22318 ;;
 22319                           
 22320                           
 22321                           ;psect for function i1_val2group
 22322  14C5                     i1_val2group:
 22323                           
 22324                           ;incstack = 0
 22325                           ; Regs used in i1_val2group: [wreg-fsr1h+status,2+status,0]
 22326                           ;i1val2group@groupID stored from wreg
 22327  14C5  00F3               	movwf	i1val2group@groupID
 22328  14C6                     i1l4861:
 22329                           
 22330                           ;main.c: 302:     char i = 0;
 22331  14C6  01F4               	clrf	i1val2group@i
 22332                           
 22333                           ;main.c: 303:     for(i = 0; i < groupSize[groupID]; i++) {
 22334  14C7  01F4               	clrf	i1val2group@i
 22335  14C8  2E4D               	goto	i1l4927
 22336  14C9                     i1l4863:
 22337                           
 22338                           ;main.c: 306:             State[i] = val;
 22339  14C9  0870               	movf	i1val2group@val,w
 22340  14CA  00F1               	movwf	??i1_val2group
 22341  14CB  0874               	movf	i1val2group@i,w
 22342  14CC  3E36               	addlw	(low (_State| 0))& (0+255)
 22343  14CD  0086               	movwf	6
 22344  14CE  0187               	clrf	7
 22345  14CF  0871               	movf	??i1_val2group,w
 22346  14D0  0081               	movwf	1
 22347                           
 22348                           ;main.c: 307:             break;
 22349  14D1  2E49               	goto	i1l4925
 22350  14D2                     i1l4865:
 22351                           
 22352                           ;main.c: 309:             Mask[i] = val;
 22353  14D2  0870               	movf	i1val2group@val,w
 22354  14D3  00F1               	movwf	??i1_val2group
 22355  14D4  0874               	movf	i1val2group@i,w
 22356  14D5  3EA0               	addlw	(low (_Mask| (0+512)))& (0+255)
 22357  14D6  0086               	movwf	6
 22358  14D7  3002               	movlw	2	; select bank5/6
 22359  14D8  0087               	movwf	7
 22360  14D9  0871               	movf	??i1_val2group,w
 22361  14DA  0081               	movwf	1
 22362                           
 22363                           ;main.c: 310:             break;
 22364  14DB  2E49               	goto	i1l4925
 22365  14DC                     i1l4867:
 22366                           
 22367                           ;main.c: 312:             Core[i] = val;
 22368  14DC  0870               	movf	i1val2group@val,w
 22369  14DD  00F1               	movwf	??i1_val2group
 22370  14DE  0874               	movf	i1val2group@i,w
 22371  14DF  3EB0               	addlw	(low (_Core| (0+512)))& (0+255)
 22372  14E0  0086               	movwf	6
 22373  14E1  3002               	movlw	2	; select bank5/6
 22374  14E2  0087               	movwf	7
 22375  14E3  0871               	movf	??i1_val2group,w
 22376  14E4  0081               	movwf	1
 22377                           
 22378                           ;main.c: 313:             break;
 22379  14E5  2E49               	goto	i1l4925
 22380  14E6                     i1l4869:
 22381                           
 22382                           ;main.c: 315:             ShouldFL[i] = val;
 22383  14E6  0870               	movf	i1val2group@val,w
 22384  14E7  00F1               	movwf	??i1_val2group
 22385  14E8  0874               	movf	i1val2group@i,w
 22386  14E9  3EB4               	addlw	(low (_ShouldFL| 0))& (0+255)
 22387  14EA  0086               	movwf	6
 22388  14EB  0187               	clrf	7
 22389  14EC  0871               	movf	??i1_val2group,w
 22390  14ED  0081               	movwf	1
 22391                           
 22392                           ;main.c: 316:             break;
 22393  14EE  2E49               	goto	i1l4925
 22394  14EF                     i1l4871:
 22395                           
 22396                           ;main.c: 318:             ShouldFR[i] = val;
 22397  14EF  0870               	movf	i1val2group@val,w
 22398  14F0  00F1               	movwf	??i1_val2group
 22399  14F1  0874               	movf	i1val2group@i,w
 22400  14F2  3E6B               	addlw	(low (_ShouldFR| (0+256)))& (0+255)
 22401  14F3  0086               	movwf	6
 22402  14F4  3001               	movlw	1	; select bank2/3
 22403  14F5  0087               	movwf	7
 22404  14F6  0871               	movf	??i1_val2group,w
 22405  14F7  0081               	movwf	1
 22406                           
 22407                           ;main.c: 319:             break;
 22408  14F8  2E49               	goto	i1l4925
 22409  14F9                     i1l4873:
 22410                           
 22411                           ;main.c: 321:             ShouldDL[i] = val;
 22412  14F9  0870               	movf	i1val2group@val,w
 22413  14FA  00F1               	movwf	??i1_val2group
 22414  14FB  0874               	movf	i1val2group@i,w
 22415  14FC  3E68               	addlw	(low (_ShouldDL| (0+256)))& (0+255)
 22416  14FD  0086               	movwf	6
 22417  14FE  3001               	movlw	1	; select bank2/3
 22418  14FF  0087               	movwf	7
 22419  1500  0871               	movf	??i1_val2group,w
 22420  1501  0081               	movwf	1
 22421                           
 22422                           ;main.c: 322:             break;
 22423  1502  2E49               	goto	i1l4925
 22424  1503                     i1l4875:
 22425                           
 22426                           ;main.c: 324:             ShouldDR[i] = val;
 22427  1503  0870               	movf	i1val2group@val,w
 22428  1504  00F1               	movwf	??i1_val2group
 22429  1505  0874               	movf	i1val2group@i,w
 22430  1506  3E65               	addlw	(low (_ShouldDR| (0+256)))& (0+255)
 22431  1507  0086               	movwf	6
 22432  1508  3001               	movlw	1	; select bank2/3
 22433  1509  0087               	movwf	7
 22434  150A  0871               	movf	??i1_val2group,w
 22435  150B  0081               	movwf	1
 22436                           
 22437                           ;main.c: 325:             break;
 22438  150C  2E49               	goto	i1l4925
 22439  150D                     i1l4877:
 22440                           
 22441                           ;main.c: 327:             ShouldBL[i] = val;
 22442  150D  0870               	movf	i1val2group@val,w
 22443  150E  00F1               	movwf	??i1_val2group
 22444  150F  0874               	movf	i1val2group@i,w
 22445  1510  3E62               	addlw	(low (_ShouldBL| (0+256)))& (0+255)
 22446  1511  0086               	movwf	6
 22447  1512  3001               	movlw	1	; select bank2/3
 22448  1513  0087               	movwf	7
 22449  1514  0871               	movf	??i1_val2group,w
 22450  1515  0081               	movwf	1
 22451                           
 22452                           ;main.c: 328:             break;
 22453  1516  2E49               	goto	i1l4925
 22454  1517                     i1l4879:
 22455                           
 22456                           ;main.c: 330:             ShouldBR[i] = val;
 22457  1517  0870               	movf	i1val2group@val,w
 22458  1518  00F1               	movwf	??i1_val2group
 22459  1519  0874               	movf	i1val2group@i,w
 22460  151A  3E5F               	addlw	(low (_ShouldBR| (0+256)))& (0+255)
 22461  151B  0086               	movwf	6
 22462  151C  3001               	movlw	1	; select bank2/3
 22463  151D  0087               	movwf	7
 22464  151E  0871               	movf	??i1_val2group,w
 22465  151F  0081               	movwf	1
 22466                           
 22467                           ;main.c: 331:             break;
 22468  1520  2E49               	goto	i1l4925
 22469  1521                     i1l4881:
 22470                           
 22471                           ;main.c: 333:             NeckL[i] = val;
 22472  1521  0870               	movf	i1val2group@val,w
 22473  1522  00F1               	movwf	??i1_val2group
 22474  1523  0874               	movf	i1val2group@i,w
 22475  1524  3E5C               	addlw	(low (_NeckL| (0+256)))& (0+255)
 22476  1525  0086               	movwf	6
 22477  1526  3001               	movlw	1	; select bank2/3
 22478  1527  0087               	movwf	7
 22479  1528  0871               	movf	??i1_val2group,w
 22480  1529  0081               	movwf	1
 22481                           
 22482                           ;main.c: 334:             break;
 22483  152A  2E49               	goto	i1l4925
 22484  152B                     i1l4883:
 22485                           
 22486                           ;main.c: 336:             NeckR[i] = val;
 22487  152B  0870               	movf	i1val2group@val,w
 22488  152C  00F1               	movwf	??i1_val2group
 22489  152D  0874               	movf	i1val2group@i,w
 22490  152E  3E59               	addlw	(low (_NeckR| (0+256)))& (0+255)
 22491  152F  0086               	movwf	6
 22492  1530  3001               	movlw	1	; select bank2/3
 22493  1531  0087               	movwf	7
 22494  1532  0871               	movf	??i1_val2group,w
 22495  1533  0081               	movwf	1
 22496                           
 22497                           ;main.c: 337:             break;
 22498  1534  2E49               	goto	i1l4925
 22499  1535                     i1l4885:
 22500                           
 22501                           ;main.c: 339:             NeckBL[i] = val;
 22502  1535  0870               	movf	i1val2group@val,w
 22503  1536  00F1               	movwf	??i1_val2group
 22504  1537  0874               	movf	i1val2group@i,w
 22505  1538  3EC2               	addlw	(low (_NeckBL| (0+256)))& (0+255)
 22506  1539  0086               	movwf	6
 22507  153A  3001               	movlw	1	; select bank3/4
 22508  153B  0087               	movwf	7
 22509  153C  0871               	movf	??i1_val2group,w
 22510  153D  0081               	movwf	1
 22511                           
 22512                           ;main.c: 340:             break;
 22513  153E  2E49               	goto	i1l4925
 22514  153F                     i1l4887:
 22515                           
 22516                           ;main.c: 342:             NeckBR[i] = val;
 22517  153F  0870               	movf	i1val2group@val,w
 22518  1540  00F1               	movwf	??i1_val2group
 22519  1541  0874               	movf	i1val2group@i,w
 22520  1542  3EB0               	addlw	(low (_NeckBR| 0))& (0+255)
 22521  1543  0086               	movwf	6
 22522  1544  0187               	clrf	7
 22523  1545  0871               	movf	??i1_val2group,w
 22524  1546  0081               	movwf	1
 22525                           
 22526                           ;main.c: 343:             break;
 22527  1547  2E49               	goto	i1l4925
 22528  1548                     i1l4889:
 22529                           
 22530                           ;main.c: 345:             AbsUL[i] = val;
 22531  1548  0870               	movf	i1val2group@val,w
 22532  1549  00F1               	movwf	??i1_val2group
 22533  154A  0874               	movf	i1val2group@i,w
 22534  154B  3EBE               	addlw	(low (_AbsUL| (0+256)))& (0+255)
 22535  154C  0086               	movwf	6
 22536  154D  3001               	movlw	1	; select bank3/4
 22537  154E  0087               	movwf	7
 22538  154F  0871               	movf	??i1_val2group,w
 22539  1550  0081               	movwf	1
 22540                           
 22541                           ;main.c: 346:             break;
 22542  1551  2E49               	goto	i1l4925
 22543  1552                     i1l4891:
 22544                           
 22545                           ;main.c: 348:             AbsUR[i] = val;
 22546  1552  0870               	movf	i1val2group@val,w
 22547  1553  00F1               	movwf	??i1_val2group
 22548  1554  0874               	movf	i1val2group@i,w
 22549  1555  3EBA               	addlw	(low (_AbsUR| (0+256)))& (0+255)
 22550  1556  0086               	movwf	6
 22551  1557  3001               	movlw	1	; select bank3/4
 22552  1558  0087               	movwf	7
 22553  1559  0871               	movf	??i1_val2group,w
 22554  155A  0081               	movwf	1
 22555                           
 22556                           ;main.c: 349:             break;
 22557  155B  2E49               	goto	i1l4925
 22558  155C                     i1l4893:
 22559                           
 22560                           ;main.c: 351:             AbsML[i] = val;
 22561  155C  0870               	movf	i1val2group@val,w
 22562  155D  00F1               	movwf	??i1_val2group
 22563  155E  0874               	movf	i1val2group@i,w
 22564  155F  3E56               	addlw	(low (_AbsML| (0+256)))& (0+255)
 22565  1560  0086               	movwf	6
 22566  1561  3001               	movlw	1	; select bank2/3
 22567  1562  0087               	movwf	7
 22568  1563  0871               	movf	??i1_val2group,w
 22569  1564  0081               	movwf	1
 22570                           
 22571                           ;main.c: 352:             break;
 22572  1565  2E49               	goto	i1l4925
 22573  1566                     i1l4895:
 22574                           
 22575                           ;main.c: 354:             AbsMR[i] = val;
 22576  1566  0870               	movf	i1val2group@val,w
 22577  1567  00F1               	movwf	??i1_val2group
 22578  1568  0874               	movf	i1val2group@i,w
 22579  1569  3EDC               	addlw	(low (_AbsMR| (0+256)))& (0+255)
 22580  156A  0086               	movwf	6
 22581  156B  3001               	movlw	1	; select bank3/4
 22582  156C  0087               	movwf	7
 22583  156D  0871               	movf	??i1_val2group,w
 22584  156E  0081               	movwf	1
 22585                           
 22586                           ;main.c: 355:             break;
 22587  156F  2E49               	goto	i1l4925
 22588  1570                     i1l4897:
 22589                           
 22590                           ;main.c: 357:             AbsDL[i] = val;
 22591  1570  0870               	movf	i1val2group@val,w
 22592  1571  00F1               	movwf	??i1_val2group
 22593  1572  0874               	movf	i1val2group@i,w
 22594  1573  3ED9               	addlw	(low (_AbsDL| (0+256)))& (0+255)
 22595  1574  0086               	movwf	6
 22596  1575  3001               	movlw	1	; select bank3/4
 22597  1576  0087               	movwf	7
 22598  1577  0871               	movf	??i1_val2group,w
 22599  1578  0081               	movwf	1
 22600                           
 22601                           ;main.c: 358:             break;
 22602  1579  2E49               	goto	i1l4925
 22603  157A                     i1l4899:
 22604                           
 22605                           ;main.c: 360:             AbsDR[i] = val;
 22606  157A  0870               	movf	i1val2group@val,w
 22607  157B  00F1               	movwf	??i1_val2group
 22608  157C  0874               	movf	i1val2group@i,w
 22609  157D  3ED6               	addlw	(low (_AbsDR| (0+256)))& (0+255)
 22610  157E  0086               	movwf	6
 22611  157F  3001               	movlw	1	; select bank3/4
 22612  1580  0087               	movwf	7
 22613  1581  0871               	movf	??i1_val2group,w
 22614  1582  0081               	movwf	1
 22615                           
 22616                           ;main.c: 361:             break;
 22617  1583  2E49               	goto	i1l4925
 22618  1584                     i1l4901:
 22619                           
 22620                           ;main.c: 363:             BackUL[i] = val;
 22621  1584  0870               	movf	i1val2group@val,w
 22622  1585  00F1               	movwf	??i1_val2group
 22623  1586  0874               	movf	i1val2group@i,w
 22624  1587  3ED3               	addlw	(low (_BackUL| (0+256)))& (0+255)
 22625  1588  0086               	movwf	6
 22626  1589  3001               	movlw	1	; select bank3/4
 22627  158A  0087               	movwf	7
 22628  158B  0871               	movf	??i1_val2group,w
 22629  158C  0081               	movwf	1
 22630                           
 22631                           ;main.c: 364:             break;
 22632  158D  2E49               	goto	i1l4925
 22633  158E                     i1l4903:
 22634                           
 22635                           ;main.c: 366:             BackUR[i] = val;
 22636  158E  0870               	movf	i1val2group@val,w
 22637  158F  00F1               	movwf	??i1_val2group
 22638  1590  0874               	movf	i1val2group@i,w
 22639  1591  3ED0               	addlw	(low (_BackUR| (0+256)))& (0+255)
 22640  1592  0086               	movwf	6
 22641  1593  3001               	movlw	1	; select bank3/4
 22642  1594  0087               	movwf	7
 22643  1595  0871               	movf	??i1_val2group,w
 22644  1596  0081               	movwf	1
 22645                           
 22646                           ;main.c: 367:             break;
 22647  1597  2E49               	goto	i1l4925
 22648  1598                     i1l4905:
 22649                           
 22650                           ;main.c: 369:             BackUM[i] = val;
 22651  1598  0870               	movf	i1val2group@val,w
 22652  1599  00F1               	movwf	??i1_val2group
 22653  159A  0874               	movf	i1val2group@i,w
 22654  159B  3ECD               	addlw	(low (_BackUM| (0+256)))& (0+255)
 22655  159C  0086               	movwf	6
 22656  159D  3001               	movlw	1	; select bank3/4
 22657  159E  0087               	movwf	7
 22658  159F  0871               	movf	??i1_val2group,w
 22659  15A0  0081               	movwf	1
 22660                           
 22661                           ;main.c: 370:             break;
 22662  15A1  2E49               	goto	i1l4925
 22663  15A2                     i1l4907:
 22664                           
 22665                           ;main.c: 372:             BackD[i] = val;
 22666  15A2  0870               	movf	i1val2group@val,w
 22667  15A3  00F1               	movwf	??i1_val2group
 22668  15A4  0874               	movf	i1val2group@i,w
 22669  15A5  3ECA               	addlw	(low (_BackD| (0+256)))& (0+255)
 22670  15A6  0086               	movwf	6
 22671  15A7  3001               	movlw	1	; select bank3/4
 22672  15A8  0087               	movwf	7
 22673  15A9  0871               	movf	??i1_val2group,w
 22674  15AA  0081               	movwf	1
 22675                           
 22676                           ;main.c: 373:             break;
 22677  15AB  2E49               	goto	i1l4925
 22678  15AC                     i1l4909:
 22679                           
 22680                           ;main.c: 375:             LegUL[i] = val;
 22681  15AC  0870               	movf	i1val2group@val,w
 22682  15AD  00F1               	movwf	??i1_val2group
 22683  15AE  0874               	movf	i1val2group@i,w
 22684  15AF  3E66               	addlw	(low (_LegUL| (0+512)))& (0+255)
 22685  15B0  0086               	movwf	6
 22686  15B1  3002               	movlw	2	; select bank4/5
 22687  15B2  0087               	movwf	7
 22688  15B3  0871               	movf	??i1_val2group,w
 22689  15B4  0081               	movwf	1
 22690                           
 22691                           ;main.c: 376:             break;
 22692  15B5  2E49               	goto	i1l4925
 22693  15B6                     i1l4911:
 22694                           
 22695                           ;main.c: 378:             LegUR[i] = val;
 22696  15B6  0870               	movf	i1val2group@val,w
 22697  15B7  00F1               	movwf	??i1_val2group
 22698  15B8  0874               	movf	i1val2group@i,w
 22699  15B9  3E60               	addlw	(low (_LegUR| (0+512)))& (0+255)
 22700  15BA  0086               	movwf	6
 22701  15BB  3002               	movlw	2	; select bank4/5
 22702  15BC  0087               	movwf	7
 22703  15BD  0871               	movf	??i1_val2group,w
 22704  15BE  0081               	movwf	1
 22705                           
 22706                           ;main.c: 379:             break;
 22707  15BF  2E49               	goto	i1l4925
 22708  15C0                     i1l4913:
 22709                           
 22710                           ;main.c: 381:             LegDL[i] = val;
 22711  15C0  0870               	movf	i1val2group@val,w
 22712  15C1  00F1               	movwf	??i1_val2group
 22713  15C2  0874               	movf	i1val2group@i,w
 22714  15C3  3E5A               	addlw	(low (_LegDL| (0+512)))& (0+255)
 22715  15C4  0086               	movwf	6
 22716  15C5  3002               	movlw	2	; select bank4/5
 22717  15C6  0087               	movwf	7
 22718  15C7  0871               	movf	??i1_val2group,w
 22719  15C8  0081               	movwf	1
 22720                           
 22721                           ;main.c: 382:             break;
 22722  15C9  2E49               	goto	i1l4925
 22723  15CA                     i1l4915:
 22724                           
 22725                           ;main.c: 384:             LegDR[i] = val;
 22726  15CA  0870               	movf	i1val2group@val,w
 22727  15CB  00F1               	movwf	??i1_val2group
 22728  15CC  0874               	movf	i1val2group@i,w
 22729  15CD  3E54               	addlw	(low (_LegDR| (0+512)))& (0+255)
 22730  15CE  0086               	movwf	6
 22731  15CF  3002               	movlw	2	; select bank4/5
 22732  15D0  0087               	movwf	7
 22733  15D1  0871               	movf	??i1_val2group,w
 22734  15D2  0081               	movwf	1
 22735                           
 22736                           ;main.c: 385:             break;
 22737  15D3  2E49               	goto	i1l4925
 22738  15D4                     i1l4917:
 22739                           
 22740                           ;main.c: 387:             ShoeL[i] = val;
 22741  15D4  0870               	movf	i1val2group@val,w
 22742  15D5  00F1               	movwf	??i1_val2group
 22743  15D6  0874               	movf	i1val2group@i,w
 22744  15D7  3EC3               	addlw	(low (_ShoeL| (0+512)))& (0+255)
 22745  15D8  0086               	movwf	6
 22746  15D9  3002               	movlw	2	; select bank5/6
 22747  15DA  0087               	movwf	7
 22748  15DB  0871               	movf	??i1_val2group,w
 22749  15DC  0081               	movwf	1
 22750                           
 22751                           ;main.c: 388:             break;
 22752  15DD  2E49               	goto	i1l4925
 22753  15DE                     i1l4919:
 22754                           
 22755                           ;main.c: 390:             ShoeR[i] = val;
 22756  15DE  0870               	movf	i1val2group@val,w
 22757  15DF  00F1               	movwf	??i1_val2group
 22758  15E0  0874               	movf	i1val2group@i,w
 22759  15E1  3EBB               	addlw	(low (_ShoeR| (0+512)))& (0+255)
 22760  15E2  0086               	movwf	6
 22761  15E3  3002               	movlw	2	; select bank5/6
 22762  15E4  0087               	movwf	7
 22763  15E5  0871               	movf	??i1_val2group,w
 22764  15E6  0081               	movwf	1
 22765                           
 22766                           ;main.c: 391:             break;
 22767  15E7  2E49               	goto	i1l4925
 22768  15E8                     i1l4923:
 22769  15E8  0873               	movf	i1val2group@groupID,w
 22770  15E9  00F1               	movwf	??i1_val2group
 22771  15EA  01F2               	clrf	??i1_val2group+1
 22772                           
 22773                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22774                           ; Switch size 1, requested type "simple"
 22775                           ; Number of cases is 1, Range of values is 0 to 0
 22776                           ; switch strategies available:
 22777                           ; Name         Instructions Cycles
 22778                           ; simple_byte            4     3 (average)
 22779                           ; direct_byte            8     6 (fixed)
 22780                           ; jumptable            260     6 (fixed)
 22781                           ;	Chosen strategy is simple_byte
 22782  15EB  0872               	movf	??i1_val2group+1,w
 22783  15EC  3A00               	xorlw	0	; case 0
 22784  15ED  1903               	skipnz
 22785  15EE  2DF0               	goto	i1l7953
 22786  15EF  2E49               	goto	i1l4925
 22787  15F0                     i1l7953:
 22788                           
 22789                           ; Switch size 1, requested type "simple"
 22790                           ; Number of cases is 29, Range of values is 0 to 28
 22791                           ; switch strategies available:
 22792                           ; Name         Instructions Cycles
 22793                           ; direct_byte           64     6 (fixed)
 22794                           ; simple_byte           88    45 (average)
 22795                           ; jumptable            260     6 (fixed)
 22796                           ;	Chosen strategy is simple_byte
 22797  15F0  0871               	movf	??i1_val2group,w
 22798  15F1  3A00               	xorlw	0	; case 0
 22799  15F2  1903               	skipnz
 22800  15F3  2CC9               	goto	i1l4863
 22801  15F4  3A01               	xorlw	1	; case 1
 22802  15F5  1903               	skipnz
 22803  15F6  2CD2               	goto	i1l4865
 22804  15F7  3A03               	xorlw	3	; case 2
 22805  15F8  1903               	skipnz
 22806  15F9  2CDC               	goto	i1l4867
 22807  15FA  3A01               	xorlw	1	; case 3
 22808  15FB  1903               	skipnz
 22809  15FC  2CE6               	goto	i1l4869
 22810  15FD  3A07               	xorlw	7	; case 4
 22811  15FE  1903               	skipnz
 22812  15FF  2CEF               	goto	i1l4871
 22813  1600  3A01               	xorlw	1	; case 5
 22814  1601  1903               	skipnz
 22815  1602  2CF9               	goto	i1l4873
 22816  1603  3A03               	xorlw	3	; case 6
 22817  1604  1903               	skipnz
 22818  1605  2D03               	goto	i1l4875
 22819  1606  3A01               	xorlw	1	; case 7
 22820  1607  1903               	skipnz
 22821  1608  2D0D               	goto	i1l4877
 22822  1609  3A0F               	xorlw	15	; case 8
 22823  160A  1903               	skipnz
 22824  160B  2D17               	goto	i1l4879
 22825  160C  3A01               	xorlw	1	; case 9
 22826  160D  1903               	skipnz
 22827  160E  2D21               	goto	i1l4881
 22828  160F  3A03               	xorlw	3	; case 10
 22829  1610  1903               	skipnz
 22830  1611  2D2B               	goto	i1l4883
 22831  1612  3A01               	xorlw	1	; case 11
 22832  1613  1903               	skipnz
 22833  1614  2D35               	goto	i1l4885
 22834  1615  3A07               	xorlw	7	; case 12
 22835  1616  1903               	skipnz
 22836  1617  2D3F               	goto	i1l4887
 22837  1618  3A01               	xorlw	1	; case 13
 22838  1619  1903               	skipnz
 22839  161A  2D48               	goto	i1l4889
 22840  161B  3A03               	xorlw	3	; case 14
 22841  161C  1903               	skipnz
 22842  161D  2D52               	goto	i1l4891
 22843  161E  3A01               	xorlw	1	; case 15
 22844  161F  1903               	skipnz
 22845  1620  2D5C               	goto	i1l4893
 22846  1621  3A1F               	xorlw	31	; case 16
 22847  1622  1903               	skipnz
 22848  1623  2D66               	goto	i1l4895
 22849  1624  3A01               	xorlw	1	; case 17
 22850  1625  1903               	skipnz
 22851  1626  2D70               	goto	i1l4897
 22852  1627  3A03               	xorlw	3	; case 18
 22853  1628  1903               	skipnz
 22854  1629  2D7A               	goto	i1l4899
 22855  162A  3A01               	xorlw	1	; case 19
 22856  162B  1903               	skipnz
 22857  162C  2D84               	goto	i1l4901
 22858  162D  3A07               	xorlw	7	; case 20
 22859  162E  1903               	skipnz
 22860  162F  2D8E               	goto	i1l4903
 22861  1630  3A01               	xorlw	1	; case 21
 22862  1631  1903               	skipnz
 22863  1632  2D98               	goto	i1l4905
 22864  1633  3A03               	xorlw	3	; case 22
 22865  1634  1903               	skipnz
 22866  1635  2DA2               	goto	i1l4907
 22867  1636  3A01               	xorlw	1	; case 23
 22868  1637  1903               	skipnz
 22869  1638  2DAC               	goto	i1l4909
 22870  1639  3A0F               	xorlw	15	; case 24
 22871  163A  1903               	skipnz
 22872  163B  2DB6               	goto	i1l4911
 22873  163C  3A01               	xorlw	1	; case 25
 22874  163D  1903               	skipnz
 22875  163E  2DC0               	goto	i1l4913
 22876  163F  3A03               	xorlw	3	; case 26
 22877  1640  1903               	skipnz
 22878  1641  2DCA               	goto	i1l4915
 22879  1642  3A01               	xorlw	1	; case 27
 22880  1643  1903               	skipnz
 22881  1644  2DD4               	goto	i1l4917
 22882  1645  3A07               	xorlw	7	; case 28
 22883  1646  1903               	skipnz
 22884  1647  2DDE               	goto	i1l4919
 22885  1648  2E49               	goto	i1l4925
 22886  1649                     i1l4925:
 22887                           
 22888                           ;main.c: 393:     }
 22889  1649  3001               	movlw	1
 22890  164A  00F1               	movwf	??i1_val2group
 22891  164B  0871               	movf	??i1_val2group,w
 22892  164C  07F4               	addwf	i1val2group@i,f
 22893  164D                     i1l4927:
 22894  164D  0873               	movf	i1val2group@groupID,w
 22895  164E  3E20               	addlw	(low (_groupSize| (0+768)))& (0+255)
 22896  164F  0086               	movwf	6
 22897  1650  3003               	movlw	3	; select bank6/7
 22898  1651  0087               	movwf	7
 22899  1652  0801               	movf	1,w
 22900  1653  0274               	subwf	i1val2group@i,w
 22901  1654  1C03               	skipc
 22902  1655  2E57               	goto	u329_21
 22903  1656  2E58               	goto	u329_20
 22904  1657                     u329_21:
 22905  1657  2DE8               	goto	i1l4923
 22906  1658                     u329_20:
 22907  1658                     i1l4929:
 22908                           
 22909                           ;main.c: 394:     groupValue[groupID] = val;
 22910  1658  0870               	movf	i1val2group@val,w
 22911  1659  00F1               	movwf	??i1_val2group
 22912  165A  0873               	movf	i1val2group@groupID,w
 22913  165B  3EBD               	addlw	(low (_groupValue| (0+768)))& (0+255)
 22914  165C  0086               	movwf	6
 22915  165D  3003               	movlw	3	; select bank7/8
 22916  165E  0087               	movwf	7
 22917  165F  0871               	movf	??i1_val2group,w
 22918  1660  0081               	movwf	1
 22919  1661                     i1l907:
 22920  1661  0008               	return
 22921  1662                     __end_ofi1_val2group:
 22922                           
 22923                           	psect	text111
 22924  2260                     __ptext111:	
 22925 ;; *************** function _IOCCF1_ISR *****************
 22926 ;; Defined at:
 22927 ;;		line 167 in file "mcc_generated_files/pin_manager.c"
 22928 ;; Parameters:    Size  Location     Type
 22929 ;;		None
 22930 ;; Auto vars:     Size  Location     Type
 22931 ;;		None
 22932 ;; Return value:  Size  Location     Type
 22933 ;;                  1    wreg      void 
 22934 ;; Registers used:
 22935 ;;		wreg, status,2, status,0, pclath, cstack
 22936 ;; Tracked objects:
 22937 ;;		On entry : 0/0
 22938 ;;		On exit  : 0/0
 22939 ;;		Unchanged: 0/0
 22940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22945 ;;Total ram usage:        0 bytes
 22946 ;; Hardware stack levels used: 1
 22947 ;; Hardware stack levels required when called: 4
 22948 ;; This function calls:
 22949 ;;		Absolute function
 22950 ;;		_IOCCF1_DefaultInterruptHandler
 22951 ;;		_IOC_DI1_ISR
 22952 ;; This function is called by:
 22953 ;;		_PIN_MANAGER_IOC
 22954 ;; This function uses a non-reentrant model
 22955 ;;
 22956                           
 22957                           
 22958                           ;psect for function _IOCCF1_ISR
 22959  2260                     _IOCCF1_ISR:
 22960  2260                     i1l5953:	
 22961                           ;incstack = 0
 22962                           ; Regs used in _IOCCF1_ISR: [wreg+status,2+status,0+pclath+cstack]
 22963                           
 22964                           
 22965                           ;mcc_generated_files/pin_manager.c: 172:     if(IOCCF1_InterruptHandler)
 22966  2260  0023               	movlb	3	; select bank3
 22967  2261  0867               	movf	_IOCCF1_InterruptHandler^(0+384),w
 22968  2262  0468               	iorwf	(_IOCCF1_InterruptHandler+1)^(0+384),w
 22969  2263  1903               	btfsc	3,2
 22970  2264  2A66               	goto	u401_21
 22971  2265  2A67               	goto	u401_20
 22972  2266                     u401_21:
 22973  2266  2A6C               	goto	i1l5957
 22974  2267                     u401_20:
 22975  2267                     i1l5955:
 22976                           
 22977                           ;mcc_generated_files/pin_manager.c: 173:     {;mcc_generated_files/pin_manager.c: 174:  
      +                                 IOCCF1_InterruptHandler();
 22978  2267  0868               	movf	(_IOCCF1_InterruptHandler+1)^(0+384),w
 22979  2268  008A               	movwf	10
 22980  2269  0867               	movf	_IOCCF1_InterruptHandler^(0+384),w
 22981  226A  000A               	callw
 22982  226B  31A2               	pagesel	$
 22983  226C                     i1l5957:
 22984                           
 22985                           ;mcc_generated_files/pin_manager.c: 176:     IOCCFbits.IOCCF1 = 0;
 22986  226C  0027               	movlb	7	; select bank7
 22987  226D  1099               	bcf	25,1	;volatile
 22988  226E                     i1l115:
 22989  226E  0008               	return
 22990  226F                     __end_of_IOCCF1_ISR:
 22991                           
 22992                           	psect	text112
 22993  1801                     __ptext112:	
 22994 ;; *************** function _IOCCF1_DefaultInterruptHandler *****************
 22995 ;; Defined at:
 22996 ;;		line 189 in file "mcc_generated_files/pin_manager.c"
 22997 ;; Parameters:    Size  Location     Type
 22998 ;;		None
 22999 ;; Auto vars:     Size  Location     Type
 23000 ;;		None
 23001 ;; Return value:  Size  Location     Type
 23002 ;;                  1    wreg      void 
 23003 ;; Registers used:
 23004 ;;		None
 23005 ;; Tracked objects:
 23006 ;;		On entry : 0/0
 23007 ;;		On exit  : 0/0
 23008 ;;		Unchanged: 0/0
 23009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23014 ;;Total ram usage:        0 bytes
 23015 ;; Hardware stack levels used: 1
 23016 ;; This function calls:
 23017 ;;		Nothing
 23018 ;; This function is called by:
 23019 ;;		_PIN_MANAGER_Initialize
 23020 ;;		_IOCCF1_ISR
 23021 ;; This function uses a non-reentrant model
 23022 ;;
 23023                           
 23024                           
 23025                           ;psect for function _IOCCF1_DefaultInterruptHandler
 23026  1801                     _IOCCF1_DefaultInterruptHandler:
 23027  1801                     i1l121:	
 23028                           ;incstack = 0
 23029                           ; Regs used in _IOCCF1_DefaultInterruptHandler: []
 23030                           
 23031  1801  0008               	return
 23032  1802                     __end_of_IOCCF1_DefaultInterruptHandler:
 23033                           
 23034                           	psect	text113
 23035  2251                     __ptext113:	
 23036 ;; *************** function _IOC_DI1_ISR *****************
 23037 ;; Defined at:
 23038 ;;		line 1507 in file "main.c"
 23039 ;; Parameters:    Size  Location     Type
 23040 ;;		None
 23041 ;; Auto vars:     Size  Location     Type
 23042 ;;		None
 23043 ;; Return value:  Size  Location     Type
 23044 ;;                  1    wreg      void 
 23045 ;; Registers used:
 23046 ;;		wreg, status,2, status,0, pclath, cstack
 23047 ;; Tracked objects:
 23048 ;;		On entry : 0/0
 23049 ;;		On exit  : 0/0
 23050 ;;		Unchanged: 0/0
 23051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23056 ;;Total ram usage:        0 bytes
 23057 ;; Hardware stack levels used: 1
 23058 ;; Hardware stack levels required when called: 3
 23059 ;; This function calls:
 23060 ;;		_butt1Pres
 23061 ;;		i1_waitX0ms
 23062 ;; This function is called by:
 23063 ;;		_main
 23064 ;;		_IOCCF1_ISR
 23065 ;; This function uses a non-reentrant model
 23066 ;;
 23067                           
 23068                           
 23069                           ;psect for function _IOC_DI1_ISR
 23070  2251                     _IOC_DI1_ISR:
 23071  2251                     i1l5849:	
 23072                           ;incstack = 0
 23073                           ; Regs used in _IOC_DI1_ISR: [wreg+status,2+status,0+pclath+cstack]
 23074                           
 23075                           
 23076                           ;main.c: 1508:     if(!waitingTime) {
 23077  2251  0020               	movlb	0	; select bank0
 23078  2252  0849               	movf	_waitingTime,w
 23079  2253  1D03               	btfss	3,2
 23080  2254  2A56               	goto	u395_21
 23081  2255  2A57               	goto	u395_20
 23082  2256                     u395_21:
 23083  2256  2A5F               	goto	i1l1406
 23084  2257                     u395_20:
 23085  2257                     i1l5851:
 23086                           
 23087                           ;main.c: 1509:         butt1Pres(1);
 23088  2257  3001               	movlw	1
 23089  2258  31A0  20F5  31A2   	fcall	_butt1Pres
 23090                           
 23091                           ;main.c: 1510:         waitX0ms(5);
 23092  225B  3005               	movlw	5
 23093  225C  31A0  20FD  31A2   	fcall	i1_waitX0ms
 23094  225F                     i1l1406:
 23095  225F  0008               	return
 23096  2260                     __end_of_IOC_DI1_ISR:
 23097                           
 23098                           	psect	text114
 23099  20FD                     __ptext114:	
 23100 ;; *************** function i1_waitX0ms *****************
 23101 ;; Defined at:
 23102 ;;		line 1571 in file "main.c"
 23103 ;; Parameters:    Size  Location     Type
 23104 ;;  X               1    wreg     unsigned char 
 23105 ;; Auto vars:     Size  Location     Type
 23106 ;;  X               1    1[COMMON] unsigned char 
 23107 ;; Return value:  Size  Location     Type
 23108 ;;                  1    wreg      void 
 23109 ;; Registers used:
 23110 ;;		wreg, status,2
 23111 ;; Tracked objects:
 23112 ;;		On entry : 0/0
 23113 ;;		On exit  : 0/0
 23114 ;;		Unchanged: 0/0
 23115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23117 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23118 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23119 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23120 ;;Total ram usage:        2 bytes
 23121 ;; Hardware stack levels used: 1
 23122 ;; This function calls:
 23123 ;;		Nothing
 23124 ;; This function is called by:
 23125 ;;		_IOC_DI1_ISR
 23126 ;;		_IOC_AN1_ISR
 23127 ;;		i1_changeDemoMode
 23128 ;; This function uses a non-reentrant model
 23129 ;;
 23130                           
 23131                           
 23132                           ;psect for function i1_waitX0ms
 23133  20FD                     i1_waitX0ms:
 23134                           
 23135                           ;incstack = 0
 23136                           ; Regs used in i1_waitX0ms: [wreg+status,2]
 23137                           ;i1waitX0ms@X stored from wreg
 23138  20FD  00F1               	movwf	i1waitX0ms@X
 23139  20FE                     i1l5319:
 23140                           
 23141                           ;main.c: 1572:     waiter = 0;
 23142  20FE  0020               	movlb	0	; select bank0
 23143  20FF  01C8               	clrf	_waiter
 23144  2100                     i1l5321:
 23145                           
 23146                           ;main.c: 1573:     waitingTime = X;
 23147  2100  0871               	movf	i1waitX0ms@X,w
 23148  2101  00F0               	movwf	??i1_waitX0ms
 23149  2102  0870               	movf	??i1_waitX0ms,w
 23150  2103  00C9               	movwf	_waitingTime
 23151  2104                     i1l1439:
 23152  2104  0008               	return
 23153  2105                     __end_ofi1_waitX0ms:
 23154                           
 23155                           	psect	text115
 23156  20F5                     __ptext115:	
 23157 ;; *************** function _butt1Pres *****************
 23158 ;; Defined at:
 23159 ;;		line 1539 in file "main.c"
 23160 ;; Parameters:    Size  Location     Type
 23161 ;;  state           1    wreg     unsigned char 
 23162 ;; Auto vars:     Size  Location     Type
 23163 ;;  state           1    0[COMMON] unsigned char 
 23164 ;; Return value:  Size  Location     Type
 23165 ;;                  1    wreg      void 
 23166 ;; Registers used:
 23167 ;;		wreg, status,2, status,0, pclath, cstack
 23168 ;; Tracked objects:
 23169 ;;		On entry : 0/0
 23170 ;;		On exit  : 0/0
 23171 ;;		Unchanged: 0/0
 23172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23177 ;;Total ram usage:        0 bytes
 23178 ;; Hardware stack levels used: 1
 23179 ;; Hardware stack levels required when called: 2
 23180 ;; This function calls:
 23181 ;;		_initStop
 23182 ;;		i1_putch
 23183 ;; This function is called by:
 23184 ;;		_pRC1_ISR
 23185 ;;		_IOC_DI1_ISR
 23186 ;; This function uses a non-reentrant model
 23187 ;;
 23188                           
 23189                           
 23190                           ;psect for function _butt1Pres
 23191  20F5                     _butt1Pres:
 23192  20F5                     i1l5503:	
 23193                           ;incstack = 0
 23194                           ; Regs used in _butt1Pres: [wreg+status,2+status,0+pclath+cstack]
 23195                           
 23196                           
 23197                           ;main.c: 1540:     putch('a');
 23198  20F5  3061               	movlw	97
 23199  20F6  31A0  20E8  31A0   	fcall	i1_putch
 23200                           
 23201                           ;main.c: 1541:     initStop();
 23202  20F9  31A6  2639  31A0   	fcall	_initStop
 23203  20FC                     i1l1423:
 23204  20FC  0008               	return
 23205  20FD                     __end_of_butt1Pres:
 23206                           
 23207                           	psect	text116
 23208  20E8                     __ptext116:	
 23209 ;; *************** function i1_putch *****************
 23210 ;; Defined at:
 23211 ;;		line 1567 in file "main.c"
 23212 ;; Parameters:    Size  Location     Type
 23213 ;;  val             1    wreg     unsigned char 
 23214 ;; Auto vars:     Size  Location     Type
 23215 ;;  val             1    1[COMMON] unsigned char 
 23216 ;; Return value:  Size  Location     Type
 23217 ;;                  1    wreg      void 
 23218 ;; Registers used:
 23219 ;;		wreg, status,2, status,0, pclath, cstack
 23220 ;; Tracked objects:
 23221 ;;		On entry : 0/0
 23222 ;;		On exit  : 0/0
 23223 ;;		Unchanged: 0/0
 23224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23226 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23228 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23229 ;;Total ram usage:        1 bytes
 23230 ;; Hardware stack levels used: 1
 23231 ;; Hardware stack levels required when called: 1
 23232 ;; This function calls:
 23233 ;;		i1_EUSART_Write
 23234 ;; This function is called by:
 23235 ;;		_execMask_Sword
 23236 ;;		_butt1Pres
 23237 ;;		i1_butt3Pres
 23238 ;; This function uses a non-reentrant model
 23239 ;;
 23240                           
 23241                           
 23242                           ;psect for function i1_putch
 23243  20E8                     i1_putch:
 23244                           
 23245                           ;incstack = 0
 23246                           ; Regs used in i1_putch: [wreg+status,2+status,0+pclath+cstack]
 23247                           ;i1putch@val stored from wreg
 23248  20E8  00F1               	movwf	i1putch@val
 23249  20E9                     i1l5165:
 23250                           
 23251                           ;main.c: 1568:     EUSART_Write(val);
 23252  20E9  0871               	movf	i1putch@val,w
 23253  20EA  31A1  2195  31A0   	fcall	i1_EUSART_Write
 23254  20ED                     i1l1436:
 23255  20ED  0008               	return
 23256  20EE                     __end_ofi1_putch:
 23257                           
 23258                           	psect	text117
 23259  2195                     __ptext117:	
 23260 ;; *************** function i1_EUSART_Write *****************
 23261 ;; Defined at:
 23262 ;;		line 162 in file "mcc_generated_files/eusart.c"
 23263 ;; Parameters:    Size  Location     Type
 23264 ;;  txData          1    wreg     unsigned char 
 23265 ;; Auto vars:     Size  Location     Type
 23266 ;;  txData          1    0[COMMON] unsigned char 
 23267 ;; Return value:  Size  Location     Type
 23268 ;;                  1    wreg      void 
 23269 ;; Registers used:
 23270 ;;		wreg
 23271 ;; Tracked objects:
 23272 ;;		On entry : 0/0
 23273 ;;		On exit  : 0/0
 23274 ;;		Unchanged: 0/0
 23275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23277 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23279 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23280 ;;Total ram usage:        1 bytes
 23281 ;; Hardware stack levels used: 1
 23282 ;; This function calls:
 23283 ;;		Nothing
 23284 ;; This function is called by:
 23285 ;;		i1_putch
 23286 ;; This function uses a non-reentrant model
 23287 ;;
 23288                           
 23289                           
 23290                           ;psect for function i1_EUSART_Write
 23291  2195                     i1_EUSART_Write:
 23292                           
 23293                           ;incstack = 0
 23294                           ; Regs used in i1_EUSART_Write: [wreg]
 23295                           ;i1EUSART_Write@txData stored from wreg
 23296  2195  00F0               	movwf	i1EUSART_Write@txData
 23297  2196                     i1l5031:
 23298  2196                     i1l318:	
 23299                           ;mcc_generated_files/eusart.c: 165:     {;mcc_generated_files/eusart.c: 166:     }
 23300                           
 23301                           
 23302                           ;mcc_generated_files/eusart.c: 164:     while(0 == PIR1bits.TXIF)
 23303  2196  0020               	movlb	0	; select bank0
 23304  2197  1E11               	btfss	17,4	;volatile
 23305  2198  299A               	goto	u331_21
 23306  2199  299B               	goto	u331_20
 23307  219A                     u331_21:
 23308  219A  2996               	goto	i1l318
 23309  219B                     u331_20:
 23310  219B                     i1l5033:
 23311                           
 23312                           ;mcc_generated_files/eusart.c: 168:     TX1REG = txData;
 23313  219B  0870               	movf	i1EUSART_Write@txData,w
 23314  219C  0023               	movlb	3	; select bank3
 23315  219D  009A               	movwf	26	;volatile
 23316  219E                     i1l321:
 23317  219E  0008               	return
 23318  219F                     __end_ofi1_EUSART_Write:
 23319                           
 23320                           	psect	text118
 23321  2639                     __ptext118:	
 23322 ;; *************** function _initStop *****************
 23323 ;; Defined at:
 23324 ;;		line 1348 in file "main.c"
 23325 ;; Parameters:    Size  Location     Type
 23326 ;;		None
 23327 ;; Auto vars:     Size  Location     Type
 23328 ;;		None
 23329 ;; Return value:  Size  Location     Type
 23330 ;;                  1    wreg      void 
 23331 ;; Registers used:
 23332 ;;		wreg, status,2, status,0, pclath, cstack
 23333 ;; Tracked objects:
 23334 ;;		On entry : 0/0
 23335 ;;		On exit  : 0/0
 23336 ;;		Unchanged: 0/0
 23337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23342 ;;Total ram usage:        0 bytes
 23343 ;; Hardware stack levels used: 1
 23344 ;; Hardware stack levels required when called: 1
 23345 ;; This function calls:
 23346 ;;		i1_rstDemoOn
 23347 ;;		i1_rstPressOff
 23348 ;;		i1_rstPressOn
 23349 ;; This function is called by:
 23350 ;;		_butt1Pres
 23351 ;; This function uses a non-reentrant model
 23352 ;;
 23353                           
 23354                           
 23355                           ;psect for function _initStop
 23356  2639                     _initStop:
 23357  2639                     i1l5275:	
 23358                           ;incstack = 0
 23359                           ; Regs used in _initStop: [wreg+status,2+status,0+pclath+cstack]
 23360                           
 23361                           
 23362                           ;main.c: 1349:     if(modoPress_nDemo) {
 23363  2639  0020               	movlb	0	; select bank0
 23364  263A  0846               	movf	_modoPress_nDemo,w
 23365  263B  1903               	btfsc	3,2
 23366  263C  2E3E               	goto	u341_21
 23367  263D  2E3F               	goto	u341_20
 23368  263E                     u341_21:
 23369  263E  2E5B               	goto	i1l5285
 23370  263F                     u341_20:
 23371  263F                     i1l5277:
 23372                           
 23373                           ;main.c: 1350:         rstPressOn(!run);
 23374  263F  0845               	movf	_run,w
 23375  2640  1903               	btfsc	3,2
 23376  2641  2E43               	goto	u342_21
 23377  2642  2E45               	goto	u342_20
 23378  2643                     u342_21:
 23379  2643  3001               	movlw	1
 23380  2644  2E46               	goto	u343_20
 23381  2645                     u342_20:
 23382  2645  3000               	movlw	0
 23383  2646                     u343_20:
 23384  2646  31A1  218B  31A6   	fcall	i1_rstPressOn
 23385                           
 23386                           ;main.c: 1351:         rstPressOff(run);
 23387  2649  0020               	movlb	0	; select bank0
 23388  264A  0845               	movf	_run,w
 23389  264B  31A1  2181  31A6   	fcall	i1_rstPressOff
 23390  264E                     i1l5279:
 23391                           
 23392                           ;main.c: 1352:         if(run) {
 23393  264E  0020               	movlb	0	; select bank0
 23394  264F  0845               	movf	_run,w
 23395  2650  1903               	btfsc	3,2
 23396  2651  2E53               	goto	u344_21
 23397  2652  2E54               	goto	u344_20
 23398  2653                     u344_21:
 23399  2653  2E58               	goto	i1l5283
 23400  2654                     u344_20:
 23401  2654                     i1l5281:
 23402                           
 23403                           ;main.c: 1353:             lightsOn = 0;
 23404  2654  01C4               	clrf	_lightsOn
 23405                           
 23406                           ;main.c: 1354:             soundASOn = 0;
 23407  2655  0021               	movlb	1	; select bank1
 23408  2656  01E5               	clrf	_soundASOn^(0+128)
 23409                           
 23410                           ;main.c: 1355:         }else
 23411  2657  2E69               	goto	i1l5291
 23412  2658                     i1l5283:
 23413                           
 23414                           ;main.c: 1356:             soundASOff = 0;
 23415  2658  0021               	movlb	1	; select bank1
 23416  2659  01E4               	clrf	_soundASOff^(0+128)
 23417  265A  2E69               	goto	i1l5291
 23418  265B                     i1l5285:
 23419                           
 23420                           ;main.c: 1358:         if(!flagDemoOn && !musikRun)
 23421  265B  0843               	movf	_flagDemoOn,w
 23422  265C  1D03               	btfss	3,2
 23423  265D  2E5F               	goto	u345_21
 23424  265E  2E60               	goto	u345_20
 23425  265F                     u345_21:
 23426  265F  2E69               	goto	i1l5291
 23427  2660                     u345_20:
 23428  2660                     i1l5287:
 23429  2660  083A               	movf	_musikRun,w
 23430  2661  1D03               	btfss	3,2
 23431  2662  2E64               	goto	u346_21
 23432  2663  2E65               	goto	u346_20
 23433  2664                     u346_21:
 23434  2664  2E69               	goto	i1l5291
 23435  2665                     u346_20:
 23436  2665                     i1l5289:
 23437                           
 23438                           ;main.c: 1359:             rstDemoOn(1);
 23439  2665  3001               	movlw	1
 23440  2666  31A1  2177  31A6   	fcall	i1_rstDemoOn
 23441  2669                     i1l5291:
 23442                           
 23443                           ;main.c: 1361:     if(!run)
 23444  2669  0020               	movlb	0	; select bank0
 23445  266A  0845               	movf	_run,w
 23446  266B  1D03               	btfss	3,2
 23447  266C  2E6E               	goto	u347_21
 23448  266D  2E6F               	goto	u347_20
 23449  266E                     u347_21:
 23450  266E  2E71               	goto	i1l1326
 23451  266F                     u347_20:
 23452  266F                     i1l5293:
 23453                           
 23454                           ;main.c: 1362:         run = 1;
 23455  266F  01C5               	clrf	_run
 23456  2670  0AC5               	incf	_run,f
 23457  2671                     i1l1326:
 23458  2671  0008               	return
 23459  2672                     __end_of_initStop:
 23460                           
 23461                           	psect	text119
 23462  218B                     __ptext119:	
 23463 ;; *************** function i1_rstPressOn *****************
 23464 ;; Defined at:
 23465 ;;		line 1195 in file "main.c"
 23466 ;; Parameters:    Size  Location     Type
 23467 ;;  start           1    wreg     unsigned char 
 23468 ;; Auto vars:     Size  Location     Type
 23469 ;;  start           1    1[COMMON] unsigned char 
 23470 ;; Return value:  Size  Location     Type
 23471 ;;                  1    wreg      void 
 23472 ;; Registers used:
 23473 ;;		wreg, status,2
 23474 ;; Tracked objects:
 23475 ;;		On entry : 0/0
 23476 ;;		On exit  : 0/0
 23477 ;;		Unchanged: 0/0
 23478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23480 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23481 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23482 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23483 ;;Total ram usage:        2 bytes
 23484 ;; Hardware stack levels used: 1
 23485 ;; This function calls:
 23486 ;;		Nothing
 23487 ;; This function is called by:
 23488 ;;		_initStop
 23489 ;;		i1_resetAndOff
 23490 ;; This function uses a non-reentrant model
 23491 ;;
 23492                           
 23493                           
 23494                           ;psect for function i1_rstPressOn
 23495  218B                     i1_rstPressOn:
 23496                           
 23497                           ;incstack = 0
 23498                           ; Regs used in i1_rstPressOn: [wreg+status,2]
 23499                           ;i1rstPressOn@start stored from wreg
 23500  218B  00F1               	movwf	i1rstPressOn@start
 23501  218C                     i1l5091:
 23502                           
 23503                           ;main.c: 1196:     timPresOn = 0;
 23504  218C  0020               	movlb	0	; select bank0
 23505  218D  01AE               	clrf	_timPresOn
 23506  218E  01AF               	clrf	_timPresOn+1
 23507  218F                     i1l5093:
 23508                           
 23509                           ;main.c: 1197:     flagPressOn = start;
 23510  218F  0871               	movf	i1rstPressOn@start,w
 23511  2190  00F0               	movwf	??i1_rstPressOn
 23512  2191  0870               	movf	??i1_rstPressOn,w
 23513  2192  0021               	movlb	1	; select bank1
 23514  2193  00E3               	movwf	_flagPressOn^(0+128)
 23515  2194                     i1l1273:
 23516  2194  0008               	return
 23517  2195                     __end_ofi1_rstPressOn:
 23518                           
 23519                           	psect	text120
 23520  2181                     __ptext120:	
 23521 ;; *************** function i1_rstPressOff *****************
 23522 ;; Defined at:
 23523 ;;		line 1224 in file "main.c"
 23524 ;; Parameters:    Size  Location     Type
 23525 ;;  start           1    wreg     unsigned char 
 23526 ;; Auto vars:     Size  Location     Type
 23527 ;;  start           1    1[COMMON] unsigned char 
 23528 ;; Return value:  Size  Location     Type
 23529 ;;                  1    wreg      void 
 23530 ;; Registers used:
 23531 ;;		wreg, status,2
 23532 ;; Tracked objects:
 23533 ;;		On entry : 0/0
 23534 ;;		On exit  : 0/0
 23535 ;;		Unchanged: 0/0
 23536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23538 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23539 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23540 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23541 ;;Total ram usage:        2 bytes
 23542 ;; Hardware stack levels used: 1
 23543 ;; This function calls:
 23544 ;;		Nothing
 23545 ;; This function is called by:
 23546 ;;		_initStop
 23547 ;;		i1_resetAndOff
 23548 ;; This function uses a non-reentrant model
 23549 ;;
 23550                           
 23551                           
 23552                           ;psect for function i1_rstPressOff
 23553  2181                     i1_rstPressOff:
 23554                           
 23555                           ;incstack = 0
 23556                           ; Regs used in i1_rstPressOff: [wreg+status,2]
 23557                           ;i1rstPressOff@start stored from wreg
 23558  2181  00F1               	movwf	i1rstPressOff@start
 23559  2182                     i1l5095:
 23560                           
 23561                           ;main.c: 1225:     timPresOff = 0;
 23562  2182  0020               	movlb	0	; select bank0
 23563  2183  01AC               	clrf	_timPresOff
 23564  2184  01AD               	clrf	_timPresOff+1
 23565  2185                     i1l5097:
 23566                           
 23567                           ;main.c: 1226:     flagPressOff = start;
 23568  2185  0871               	movf	i1rstPressOff@start,w
 23569  2186  00F0               	movwf	??i1_rstPressOff
 23570  2187  0870               	movf	??i1_rstPressOff,w
 23571  2188  0021               	movlb	1	; select bank1
 23572  2189  00E2               	movwf	_flagPressOff^(0+128)
 23573  218A                     i1l1282:
 23574  218A  0008               	return
 23575  218B                     __end_ofi1_rstPressOff:
 23576                           
 23577                           	psect	text121
 23578  2177                     __ptext121:	
 23579 ;; *************** function i1_rstDemoOn *****************
 23580 ;; Defined at:
 23581 ;;		line 987 in file "main.c"
 23582 ;; Parameters:    Size  Location     Type
 23583 ;;  start           1    wreg     unsigned char 
 23584 ;; Auto vars:     Size  Location     Type
 23585 ;;  start           1    1[COMMON] unsigned char 
 23586 ;; Return value:  Size  Location     Type
 23587 ;;                  1    wreg      void 
 23588 ;; Registers used:
 23589 ;;		wreg, status,2
 23590 ;; Tracked objects:
 23591 ;;		On entry : 0/0
 23592 ;;		On exit  : 0/0
 23593 ;;		Unchanged: 0/0
 23594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23596 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23597 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23598 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23599 ;;Total ram usage:        2 bytes
 23600 ;; Hardware stack levels used: 1
 23601 ;; This function calls:
 23602 ;;		Nothing
 23603 ;; This function is called by:
 23604 ;;		_initStop
 23605 ;;		i1_resetAndOff
 23606 ;; This function uses a non-reentrant model
 23607 ;;
 23608                           
 23609                           
 23610                           ;psect for function i1_rstDemoOn
 23611  2177                     i1_rstDemoOn:
 23612                           
 23613                           ;incstack = 0
 23614                           ; Regs used in i1_rstDemoOn: [wreg+status,2]
 23615                           ;i1rstDemoOn@start stored from wreg
 23616  2177  00F1               	movwf	i1rstDemoOn@start
 23617  2178                     i1l5073:
 23618                           
 23619                           ;main.c: 988:     timDemoOn = 0;
 23620  2178  0021               	movlb	1	; select bank1
 23621  2179  01C5               	clrf	_timDemoOn^(0+128)
 23622  217A  01C6               	clrf	(_timDemoOn+1)^(0+128)
 23623  217B                     i1l5075:
 23624                           
 23625                           ;main.c: 989:     flagDemoOn = start;
 23626  217B  0871               	movf	i1rstDemoOn@start,w
 23627  217C  00F0               	movwf	??i1_rstDemoOn
 23628  217D  0870               	movf	??i1_rstDemoOn,w
 23629  217E  0020               	movlb	0	; select bank0
 23630  217F  00C3               	movwf	_flagDemoOn
 23631  2180                     i1l1177:
 23632  2180  0008               	return
 23633  2181                     __end_ofi1_rstDemoOn:
 23634                           
 23635                           	psect	text122
 23636  20D0                     __ptext122:	
 23637 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 23638 ;; Defined at:
 23639 ;;		line 209 in file "mcc_generated_files/eusart.c"
 23640 ;; Parameters:    Size  Location     Type
 23641 ;;		None
 23642 ;; Auto vars:     Size  Location     Type
 23643 ;;		None
 23644 ;; Return value:  Size  Location     Type
 23645 ;;                  1    wreg      void 
 23646 ;; Registers used:
 23647 ;;		None
 23648 ;; Tracked objects:
 23649 ;;		On entry : 0/0
 23650 ;;		On exit  : 0/0
 23651 ;;		Unchanged: 0/0
 23652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23657 ;;Total ram usage:        0 bytes
 23658 ;; Hardware stack levels used: 1
 23659 ;; This function calls:
 23660 ;;		Nothing
 23661 ;; This function is called by:
 23662 ;;		_EUSART_Initialize
 23663 ;;		_EUSART_Receive_ISR
 23664 ;; This function uses a non-reentrant model
 23665 ;;
 23666                           
 23667                           
 23668                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 23669  20D0                     _EUSART_DefaultOverrunErrorHandler:
 23670  20D0                     i1l6049:	
 23671                           ;incstack = 0
 23672                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 23673                           
 23674                           
 23675                           ;mcc_generated_files/eusart.c: 212:     RC1STAbits.CREN = 0;
 23676  20D0  0023               	movlb	3	; select bank3
 23677  20D1  121D               	bcf	29,4	;volatile
 23678                           
 23679                           ;mcc_generated_files/eusart.c: 213:     RC1STAbits.CREN = 1;
 23680  20D2  161D               	bsf	29,4	;volatile
 23681  20D3                     i1l338:
 23682  20D3  0008               	return
 23683  20D4                     __end_of_EUSART_DefaultOverrunErrorHandler:
 23684                           
 23685                           	psect	text123
 23686  1800                     __ptext123:	
 23687 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 23688 ;; Defined at:
 23689 ;;		line 207 in file "mcc_generated_files/eusart.c"
 23690 ;; Parameters:    Size  Location     Type
 23691 ;;		None
 23692 ;; Auto vars:     Size  Location     Type
 23693 ;;		None
 23694 ;; Return value:  Size  Location     Type
 23695 ;;                  1    wreg      void 
 23696 ;; Registers used:
 23697 ;;		None
 23698 ;; Tracked objects:
 23699 ;;		On entry : 0/0
 23700 ;;		On exit  : 0/0
 23701 ;;		Unchanged: 0/0
 23702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23707 ;;Total ram usage:        0 bytes
 23708 ;; Hardware stack levels used: 1
 23709 ;; This function calls:
 23710 ;;		Nothing
 23711 ;; This function is called by:
 23712 ;;		_EUSART_Initialize
 23713 ;;		_EUSART_Receive_ISR
 23714 ;; This function uses a non-reentrant model
 23715 ;;
 23716                           
 23717                           
 23718                           ;psect for function _EUSART_DefaultFramingErrorHandler
 23719  1800                     _EUSART_DefaultFramingErrorHandler:
 23720  1800                     i1l335:	
 23721                           ;incstack = 0
 23722                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 23723                           
 23724  1800  0008               	return
 23725  1801                     __end_of_EUSART_DefaultFramingErrorHandler:
 23726                           
 23727                           	psect	text124
 23728  20CC                     __ptext124:	
 23729 ;; *************** function _EUSART_DefaultErrorHandler *****************
 23730 ;; Defined at:
 23731 ;;		line 217 in file "mcc_generated_files/eusart.c"
 23732 ;; Parameters:    Size  Location     Type
 23733 ;;		None
 23734 ;; Auto vars:     Size  Location     Type
 23735 ;;		None
 23736 ;; Return value:  Size  Location     Type
 23737 ;;                  1    wreg      void 
 23738 ;; Registers used:
 23739 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23740 ;; Tracked objects:
 23741 ;;		On entry : 0/0
 23742 ;;		On exit  : 0/0
 23743 ;;		Unchanged: 0/0
 23744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23749 ;;Total ram usage:        0 bytes
 23750 ;; Hardware stack levels used: 1
 23751 ;; Hardware stack levels required when called: 1
 23752 ;; This function calls:
 23753 ;;		_EUSART_RxDataHandler
 23754 ;; This function is called by:
 23755 ;;		_EUSART_Initialize
 23756 ;;		_EUSART_Receive_ISR
 23757 ;; This function uses a non-reentrant model
 23758 ;;
 23759                           
 23760                           
 23761                           ;psect for function _EUSART_DefaultErrorHandler
 23762  20CC                     _EUSART_DefaultErrorHandler:
 23763  20CC                     i1l6051:	
 23764                           ;incstack = 0
 23765                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 23766                           
 23767                           
 23768                           ;mcc_generated_files/eusart.c: 218:     EUSART_RxDataHandler();
 23769  20CC  31A4  246E  31A0   	fcall	_EUSART_RxDataHandler
 23770  20CF                     i1l341:
 23771  20CF  0008               	return
 23772  20D0                     __end_of_EUSART_DefaultErrorHandler:
 23773                           
 23774                           	psect	text125
 23775  246E                     __ptext125:	
 23776 ;; *************** function _EUSART_RxDataHandler *****************
 23777 ;; Defined at:
 23778 ;;		line 197 in file "mcc_generated_files/eusart.c"
 23779 ;; Parameters:    Size  Location     Type
 23780 ;;		None
 23781 ;; Auto vars:     Size  Location     Type
 23782 ;;		None
 23783 ;; Return value:  Size  Location     Type
 23784 ;;                  1    wreg      void 
 23785 ;; Registers used:
 23786 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23787 ;; Tracked objects:
 23788 ;;		On entry : 0/0
 23789 ;;		On exit  : 0/0
 23790 ;;		Unchanged: 0/0
 23791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23794 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23795 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23796 ;;Total ram usage:        1 bytes
 23797 ;; Hardware stack levels used: 1
 23798 ;; This function calls:
 23799 ;;		Nothing
 23800 ;; This function is called by:
 23801 ;;		_EUSART_Receive_ISR
 23802 ;;		_EUSART_DefaultErrorHandler
 23803 ;; This function uses a non-reentrant model
 23804 ;;
 23805                           
 23806                           
 23807                           ;psect for function _EUSART_RxDataHandler
 23808  246E                     _EUSART_RxDataHandler:
 23809  246E                     i1l5531:	
 23810                           ;incstack = 0
 23811                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 23812                           
 23813                           
 23814                           ;mcc_generated_files/eusart.c: 199:     eusartRxBuffer[eusartRxHead++] = RC1REG;
 23815  246E  0023               	movlb	3	; select bank3
 23816  246F  0819               	movf	25,w	;volatile
 23817  2470  00F0               	movwf	??_EUSART_RxDataHandler
 23818  2471  0020               	movlb	0	; select bank0
 23819  2472  084C               	movf	_eusartRxHead,w
 23820  2473  3ECB               	addlw	(low (_eusartRxBuffer| (0+512)))& (0+255)
 23821  2474  0086               	movwf	6
 23822  2475  3002               	movlw	2	; select bank5/6
 23823  2476  0087               	movwf	7
 23824  2477  0870               	movf	??_EUSART_RxDataHandler,w
 23825  2478  0081               	movwf	1
 23826  2479                     i1l5533:
 23827  2479  3001               	movlw	1
 23828  247A  00F0               	movwf	??_EUSART_RxDataHandler
 23829  247B  0870               	movf	??_EUSART_RxDataHandler,w
 23830  247C  07CC               	addwf	_eusartRxHead,f	;volatile
 23831  247D                     i1l5535:
 23832                           
 23833                           ;mcc_generated_files/eusart.c: 200:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 23834  247D  3008               	movlw	8
 23835  247E  024C               	subwf	_eusartRxHead,w	;volatile
 23836  247F  1C03               	skipc
 23837  2480  2C82               	goto	u361_21
 23838  2481  2C83               	goto	u361_20
 23839  2482                     u361_21:
 23840  2482  2C84               	goto	i1l5539
 23841  2483                     u361_20:
 23842  2483                     i1l5537:
 23843                           
 23844                           ;mcc_generated_files/eusart.c: 201:     {;mcc_generated_files/eusart.c: 202:         eus
      +                          artRxHead = 0;
 23845  2483  01CC               	clrf	_eusartRxHead	;volatile
 23846  2484                     i1l5539:
 23847                           
 23848                           ;mcc_generated_files/eusart.c: 204:     eusartRxCount++;
 23849  2484  3001               	movlw	1
 23850  2485  00F0               	movwf	??_EUSART_RxDataHandler
 23851  2486  0870               	movf	??_EUSART_RxDataHandler,w
 23852  2487  07CA               	addwf	_eusartRxCount,f	;volatile
 23853  2488                     i1l332:
 23854  2488  0008               	return
 23855  2489                     __end_of_EUSART_RxDataHandler:
 23856  007E                     btemp	set	126	;btemp
 23857  007E                     int$flags	set	126
 23858  007E                     wtemp0	set	126
 23859  269C                     
 23860                           	psect	config
 23861                           
 23862                           ;Config register CONFIG1 @ 0x8007
 23863                           ;	FEXTOSC External Oscillator mode Selection bits
 23864                           ;	FEXTOSC = OFF, Oscillator not enabled
 23865                           ;	Power-up default value for COSC bits
 23866                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
 23867                           ;	Clock Out Enable bit
 23868                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
 23869                           ;	Clock Switch Enable bit
 23870                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 23871                           ;	Fail-Safe Clock Monitor Enable
 23872                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 23873  8007                     	org	32775
 23874  8007  3F8C               	dw	16268
 23875                           
 23876                           ;Config register CONFIG2 @ 0x8008
 23877                           ;	Master Clear Enable bit
 23878                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
 23879                           ;	Power-up Timer Enable bit
 23880                           ;	PWRTE = OFF, PWRT disabled
 23881                           ;	Watchdog Timer Enable bits
 23882                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
 23883                           ;	Low-power BOR enable bit
 23884                           ;	LPBOREN = OFF, ULPBOR disabled
 23885                           ;	Brown-out Reset Enable bits
 23886                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
 23887                           ;	Brown-out Reset Voltage selection bit
 23888                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
 23889                           ;	PPSLOCK bit One-Way Set Enable bit
 23890                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
 23891                           ;	Stack Overflow/Underflow Reset Enable bit
 23892                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 23893                           ;	Debugger enable bit
 23894                           ;	DEBUG = OFF, Background debugger disabled
 23895  8008                     	org	32776
 23896  8008  3FF3               	dw	16371
 23897                           
 23898                           ;Config register CONFIG3 @ 0x8009
 23899                           ;	User NVM self-write protection bits
 23900                           ;	WRT = OFF, Write protection off
 23901                           ;	Low Voltage Programming Enable bit
 23902                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
 23903  8009                     	org	32777
 23904  8009  3FFF               	dw	16383
 23905                           
 23906                           ;Config register CONFIG4 @ 0x800A
 23907                           ;	User NVM Program Memory Code Protection bit
 23908                           ;	CP = OFF, User NVM code protection disabled
 23909                           ;	Data NVM Memory Code Protection bit
 23910                           ;	CPD = OFF, Data NVM code protection disabled
 23911  800A                     	org	32778
 23912  800A  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    28
    Data        102
    BSS         447
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     30      76
    BANK1            80      0      80
    BANK2            80      0      80
    BANK3            80      0      77
    BANK4            80      4      80
    BANK5            80      0      75
    BANK6            80      0      63
    BANK7            80      0      58
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           12      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    S33$3$0	PTR void  size(1) Largest target is 0

    S33$4$0	PTR void  size(1) Largest target is 0

    S33$5$0	PTR void  size(1) Largest target is 0

    Absolute function$0	PTR FTN()void  size(2) Largest target is 0

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> pTMR1_ISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> pTMR1_ISR(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> pTMR2_ISR(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> pTMR2_ISR(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> pRC1_ISR(), EUSART_Receive_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> pRC1_ISR(), EUSART_Receive_ISR(), Absolute function(), 

    IOCCF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOC_AN1_ISR(), IOCCF3_DefaultInterruptHandler(), 

    IOCCF3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOC_AN1_ISR(), IOCCF3_DefaultInterruptHandler(), Absolute function(), 

    IOCCF2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOC_AN2_ISR(), IOCCF2_DefaultInterruptHandler(), 

    IOCCF2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOC_AN2_ISR(), IOCCF2_DefaultInterruptHandler(), Absolute function(), 

    IOCCF1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOC_DI1_ISR(), IOCCF1_DefaultInterruptHandler(), 

    IOCCF1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOC_DI1_ISR(), IOCCF1_DefaultInterruptHandler(), Absolute function(), 

    S33$spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    spiMaster.spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S33$setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    spiMaster.setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S33$readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI2_ReadByte(), 

    spiMaster.readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI2_ReadByte(), 

    S33$writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI2_WriteByte(), 

    spiMaster.writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI2_WriteByte(), 

    S33$readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI2_ReadBlock(), 

    spiMaster.readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI2_ReadBlock(), 

    S33$writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI2_WriteBlock(), 

    spiMaster.writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI2_WriteBlock(), 

    S33$exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI2_ExchangeBlock(), 

    spiMaster.exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI2_ExchangeBlock(), 

    S33$exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI2_ExchangeByte(), 

    spiMaster.exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI2_ExchangeByte(), 

    S33$spiOpen	PTR FTN()_Bool  size(2) Largest target is 1
		 -> MASTER0_open(), 

    spiMaster.spiOpen	PTR FTN()_Bool  size(2) Largest target is 1
		 -> MASTER0_open(), 

    S33$spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> SPI2_Close(), 

    spiMaster.spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> SPI2_Close(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _pRC1_ISR->i1_allBodyVal
    _pRC1_ISR->i1_rstDragon
    _pRC1_ISR->i1_rstRefri
    i1_rstRefri->i1_refriShoulderTool
    i1_refriShoulderTool->i1_applyColor
    _TMR2_ISR->_pTMR2_ISR
    _TMR1_ISR->_TMR1_WriteTimer
    _IOC_AN1_ISR->i1_waitX0ms
    _execMask_Sword->i1_putch
    _execMask_Sword->i1_rstMaskOff
    _execMask_Sword->i1_rstMaskOn
    i1_resetAndOff->i1_allBodyVal
    i1_resetAndOff->i1_rstDragon
    i1_rstDragon->i1_dragonCrashTool
    i1_dragonCrashTool->i1_applyColor
    i1_allBodyVal->i1_applyColor
    i1_applyColor->i1_val2group
    _IOC_DI1_ISR->i1_waitX0ms
    _butt1Pres->i1_putch
    i1_putch->i1_EUSART_Write
    _initStop->i1_rstDemoOn
    _initStop->i1_rstPressOff
    _initStop->i1_rstPressOn
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _main->_secuences
    _sendOrderXs->_merger
    _sendOrderDot->_sendDotStar
    _sendDotStar->_SPI2_ExchangeByte
    _dotStart->_SPI2_ExchangeByte
    _merger->_mergeGroup1
    _merger->_mergeGroup2
    _mergeGroup2->_valfromGroup
    _mergeGroup1->_valfromGroup
    _refriShoulder->_rstRefri
    _rstRefri->_refriShoulderTool
    _refriShoulderTool->_applyColor
    _musik->_val2group
    _maskOn->_val2group
    _maskOff->_val2group
    _dragonCrash->_rstDragon
    _despShadow->_translateShadows
    _translateShadows->_val2group
    _demoEfectOn->_allBodyVal
    _demoEfectOff->_resetAndOff
    _SeqPresOn->_seqByZone_On
    _SeqPresOff->_resetAndOff
    _seqApply->_val2group
    _initArrays->_applyColor
    _changeDemoMode->_butt3Pres
    _butt3Pres->_resetAndOff
    _resetAndOff->_allBodyVal
    _resetAndOff->_rstDragon
    _rstDragon->_dragonCrashTool
    _dragonCrashTool->_applyColor
    _allBodyVal->_applyColor
    _applyColor->_val2group
    _putch->_EUSART_Write
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF3_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_pRC1_ISR
    _pRC1_ISR->i1_butt3Pres
    i1_changeDemoMode->i1_butt3Pres
    i1_butt3Pres->i1_resetAndOff

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    _sendOrderXs->_merger

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  225993
       _EUSART_SetRxInterruptHandler
         _IOCCF1_SetInterruptHandler
         _IOCCF2_SetInterruptHandler
         _IOCCF3_SetInterruptHandler
                          _SPI2_Open
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
           _TMR2_SetInterruptHandler
                          _butt3Pres
                     _changeDemoMode
                         _initArrays
                           _protExec
                        _resetAndOff
                          _secuences
 ---------------------------------------------------------------------------------
 (1) _secuences                                            1     1      0  152328
                                             29 BANK0      1     1      0
                         _SeqPresOff
                          _SeqPresOn
                       _demoEfectOff
                        _demoEfectOn
                         _despShadow
                        _dragonCrash
                            _maskOff
                             _maskOn
                              _musik
                      _refriShoulder
                          _rstShadow
                        _sendOrderXs
 ---------------------------------------------------------------------------------
 (2) _sendOrderXs                                          0     0      0   18678
                             _merger
                       _sendOrderDot
 ---------------------------------------------------------------------------------
 (3) _sendOrderDot                                        10    10      0    7343
                                              9 BANK0     10    10      0
                           _dotStart
                        _sendDotStar
 ---------------------------------------------------------------------------------
 (4) _sendDotStar                                          4     2      2    5180
                                              5 BANK0      4     2      2
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (4) _dotStart                                             2     2      0     904
                                              5 BANK0      2     2      0
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (5) _SPI2_ExchangeByte                                    1     0      1     858
                                              4 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (3) _merger                                              11    11      0   11335
                                             22 BANK0      7     7      0
                                              0 BANK4      4     4      0
                       _mergeBridge1
                       _mergeBridge2
                        _mergeGroup1
                        _mergeGroup2
 ---------------------------------------------------------------------------------
 (4) _mergeGroup2                                         14    12      2    3187
                                              8 BANK0     14    12      2
                       _valfromGroup
 ---------------------------------------------------------------------------------
 (4) _mergeGroup1                                         14    12      2    3727
                                              8 BANK0     14    12      2
                       _valfromGroup
 ---------------------------------------------------------------------------------
 (5) _valfromGroup                                         4     4      0    1900
                                              4 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _mergeBridge2                                        10     6      4    1700
                                              4 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) _mergeBridge1                                        10     6      4    1160
                                              4 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) _refriShoulder                                        1     1      0    9885
                                             19 BANK0      1     1      0
                           _rstRefri
                         _sendOrderX
 ---------------------------------------------------------------------------------
 (3) _rstRefri                                             2     2      0    9885
                                             17 BANK0      2     2      0
                  _refriShoulderTool
 ---------------------------------------------------------------------------------
 (4) _refriShoulderTool                                    4     4      0    9841
                                             13 BANK0      4     4      0
                         _applyColor
 ---------------------------------------------------------------------------------
 (2) _musik                                                1     1      0    6775
                                              9 BANK0      1     1      0
                              _putch
                           _rstMusik
                         _sendOrderX
                          _val2group
 ---------------------------------------------------------------------------------
 (2) _maskOn                                               4     4      0    6731
                                              9 BANK0      4     4      0
                          _rstMaskOn
                         _sendOrderX
                          _val2group
 ---------------------------------------------------------------------------------
 (2) _maskOff                                              6     6      0    7408
                                              9 BANK0      6     6      0
                             ___bmul
                         _rstMaskOff
                         _sendOrderX
                          _val2group
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     404
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _dragonCrash                                          1     1      0   19574
                                             18 BANK0      1     1      0
                          _crashOff3
                           _crashOn2
                    _dragonCrashTool
                          _rstDragon
                         _sendOrderX
 ---------------------------------------------------------------------------------
 (3) _crashOn2                                             1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _crashOff3                                            2     2      0      91
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _despShadow                                           5     5      0    7117
                                             12 BANK0      5     5      0
                          _rstShadow
                         _sendOrderX
                   _translateShadows
 ---------------------------------------------------------------------------------
 (3) _translateShadows                                     3     3      0    6957
                                              9 BANK0      3     3      0
                          _val2group
 ---------------------------------------------------------------------------------
 (2) _demoEfectOn                                          1     1      0   10392
                                             18 BANK0      1     1      0
                         _allBodyVal
                              _putch
                          _rstDemoOn
                           _rstMusik
                         _sendOrderX
 ---------------------------------------------------------------------------------
 (2) _demoEfectOff                                         1     1      0   30673
                                             19 BANK0      1     1      0
                         _allBodyVal
                        _resetAndOff
                         _sendOrderX
 ---------------------------------------------------------------------------------
 (2) _SeqPresOn                                            0     0      0    7363
                              _putch
                         _rstPressOn
                         _sendOrderX
                           _seqApply
                       _seqByZone_On
 ---------------------------------------------------------------------------------
 (3) _seqByZone_On                                         7     5      2     588
                                              4 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (2) _SeqPresOff                                           0     0      0   27710
                              _putch
                        _resetAndOff
                         _sendOrderX
                           _seqApply
                      _seqByZone_Off
 ---------------------------------------------------------------------------------
 (3) _seqByZone_Off                                        7     5      2     588
                                              4 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (3) _seqApply                                             1     1      0    6709
                                              9 BANK0      1     1      0
                          _val2group
 ---------------------------------------------------------------------------------
 (1) _protExec                                             2     2      0       0
                                              4 BANK0      2     2      0
                         _sendOrderX
 ---------------------------------------------------------------------------------
 (1) _initArrays                                           2     2      0    9890
                                             13 BANK0      2     2      0
                         _applyColor
 ---------------------------------------------------------------------------------
 (1) _changeDemoMode                                       0     0      0   20479
                          _butt3Pres
                           _waitX0ms
 ---------------------------------------------------------------------------------
 (2) _waitX0ms                                             2     2      0      22
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _butt3Pres                                            1     1      0   20457
                                             19 BANK0      1     1      0
                              _putch
                        _resetAndOff
                         _rstDemoOff
 ---------------------------------------------------------------------------------
 (3) _resetAndOff                                          1     1      0   20369
                                             18 BANK0      1     1      0
                         _allBodyVal
                         _rstDemoOff
                          _rstDemoOn
                          _rstDragon
                         _rstMaskOff
                          _rstMaskOn
                           _rstMusik
                        _rstPressOff
                         _rstPressOn
                             _rstSeq
                          _rstShadow
                         _sendOrderX
 ---------------------------------------------------------------------------------
 (3) _sendOrderX                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _rstShadow                                            2     2      0      22
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _rstSeq                                               2     2      0      69
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _rstPressOn                                           2     2      0      22
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _rstPressOff                                          2     2      0      22
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _rstMusik                                             2     2      0      22
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _rstMaskOn                                            2     2      0      22
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _rstMaskOff                                           2     2      0      22
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _rstDragon                                            3     3      0    9798
                                             15 BANK0      3     3      0
                    _dragonCrashTool
 ---------------------------------------------------------------------------------
 (4) _dragonCrashTool                                      2     2      0    9685
                                             13 BANK0      2     2      0
                         _applyColor
 ---------------------------------------------------------------------------------
 (3) _rstDemoOn                                            2     2      0      22
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _rstDemoOff                                           2     2      0      22
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _allBodyVal                                           5     4      1   10304
                                             13 BANK0      5     4      1
                         _applyColor
 ---------------------------------------------------------------------------------
 (5) _applyColor                                           4     2      2    9685
                                              9 BANK0      4     2      2
                          _val2group
 ---------------------------------------------------------------------------------
 (6) _val2group                                            5     4      1    6709
                                              4 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      44
                                              5 BANK0      1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      22
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1338
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI2_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     174
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     522
         _IOCCF1_SetInterruptHandler
         _IOCCF2_SetInterruptHandler
         _IOCCF3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF3_SetInterruptHandler                           2     0      2     174
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCCF2_SetInterruptHandler                           2     0      2     174
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCCF1_SetInterruptHandler                           2     0      2     174
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     468
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     174
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _SPI2_Open                                            4     4      0      88
                                              4 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           0     0      0   20240
                   Absolute function *
                 _EUSART_Receive_ISR *
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
                           _TMR2_ISR
                           _pRC1_ISR *
 ---------------------------------------------------------------------------------
 (9) _pRC1_ISR                                             2     2      0   14117
                                              2 BANK0      2     2      0
                          _butt1Pres
                          _butt2Pres
                            _protRCV
                       i1_allBodyVal
                        i1_butt3Pres
                        i1_rstDragon
                         i1_rstRefri
 ---------------------------------------------------------------------------------
 (10) i1_rstRefri                                          2     2      0    2639
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
                i1_refriShoulderTool
 ---------------------------------------------------------------------------------
 (11) i1_refriShoulderTool                                 4     4      0    2595
                                              9 COMMON     4     4      0
                       i1_applyColor
 ---------------------------------------------------------------------------------
 (10) _protRCV                                             2     2      0     110
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                          _pTMR2_ISR *
 ---------------------------------------------------------------------------------
 (10) _pTMR2_ISR                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                          _pTMR1_ISR *
 ---------------------------------------------------------------------------------
 (10) _pTMR1_ISR                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _PIN_MANAGER_IOC                                      0     0      0    5883
                         _IOCCF1_ISR
                         _IOCCF2_ISR
                         _IOCCF3_ISR
 ---------------------------------------------------------------------------------
 (10) _IOCCF3_ISR                                          0     0      0     110
                   Absolute function *
     _IOCCF3_DefaultInterruptHandler *
                        _IOC_AN1_ISR *
 ---------------------------------------------------------------------------------
 (11) _IOC_AN1_ISR                                         0     0      0     110
                          _butt2Pres
                         i1_waitX0ms
 ---------------------------------------------------------------------------------
 (10) _butt2Pres                                           1     1      0      88
                     _execMask_Sword
 ---------------------------------------------------------------------------------
 (11) _execMask_Sword                                      0     0      0      88
                            i1_putch
                       i1_rstMaskOff
                        i1_rstMaskOn
 ---------------------------------------------------------------------------------
 (11) _IOCCF3_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _IOCCF2_ISR                                          0     0      0    5641
                   Absolute function *
     _IOCCF2_DefaultInterruptHandler *
                        _IOC_AN2_ISR *
 ---------------------------------------------------------------------------------
 (11) _IOC_AN2_ISR                                         0     0      0    5641
                   i1_changeDemoMode
 ---------------------------------------------------------------------------------
 (12) i1_changeDemoMode                                    0     0      0    5641
                        i1_butt3Pres
                         i1_waitX0ms
 ---------------------------------------------------------------------------------
 (10) i1_butt3Pres                                         1     1      0    5619
                                              1 BANK0      1     1      0
                            i1_putch
                      i1_resetAndOff
                       i1_rstDemoOff
 ---------------------------------------------------------------------------------
 (11) i1_resetAndOff                                       1     1      0    5531
                                              0 BANK0      1     1      0
                       i1_allBodyVal
                       i1_rstDemoOff
                        i1_rstDemoOn
                        i1_rstDragon
                       i1_rstMaskOff
                        i1_rstMaskOn
                         i1_rstMusik
                      i1_rstPressOff
                       i1_rstPressOn
                           i1_rstSeq
                        i1_rstShadow
                       i1_sendOrderX
 ---------------------------------------------------------------------------------
 (12) i1_sendOrderX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i1_rstShadow                                         2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (12) i1_rstSeq                                            2     2      0      69
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (12) i1_rstMusik                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (12) i1_rstMaskOn                                         2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (12) i1_rstMaskOff                                        2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (10) i1_rstDragon                                         3     3      0    2552
                                             11 COMMON     3     3      0
                  i1_dragonCrashTool
 ---------------------------------------------------------------------------------
 (11) i1_dragonCrashTool                                   2     2      0    2439
                                              9 COMMON     2     2      0
                       i1_applyColor
 ---------------------------------------------------------------------------------
 (11) i1_rstDemoOff                                        2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (12) i1_allBodyVal                                        5     4      1    2712
                                              9 COMMON     5     4      1
                       i1_applyColor
 ---------------------------------------------------------------------------------
 (12) i1_applyColor                                        4     2      2    2439
                                              5 COMMON     4     2      2
                        i1_val2group
 ---------------------------------------------------------------------------------
 (13) i1_val2group                                         5     4      1    1415
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (11) _IOCCF2_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _IOCCF1_ISR                                          0     0      0     132
                   Absolute function *
     _IOCCF1_DefaultInterruptHandler *
                        _IOC_DI1_ISR *
 ---------------------------------------------------------------------------------
 (11) _IOC_DI1_ISR                                         0     0      0     132
                          _butt1Pres
                         i1_waitX0ms
 ---------------------------------------------------------------------------------
 (12) i1_waitX0ms                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (10) _butt1Pres                                           1     1      0     110
                           _initStop
                            i1_putch
 ---------------------------------------------------------------------------------
 (11) i1_putch                                             1     1      0      44
                                              1 COMMON     1     1      0
                     i1_EUSART_Write
 ---------------------------------------------------------------------------------
 (12) i1_EUSART_Write                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _initStop                                            0     0      0      66
                        i1_rstDemoOn
                      i1_rstPressOff
                       i1_rstPressOn
 ---------------------------------------------------------------------------------
 (12) i1_rstPressOn                                        2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (12) i1_rstPressOff                                       2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (12) i1_rstDemoOn                                         2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) _IOCCF1_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART_Receive_ISR                                   0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_SetRxInterruptHandler
   _IOCCF1_SetInterruptHandler
   _IOCCF2_SetInterruptHandler
   _IOCCF3_SetInterruptHandler
   _SPI2_Open
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF1_SetInterruptHandler
       _IOCCF2_SetInterruptHandler
       _IOCCF3_SetInterruptHandler
     _PMD_Initialize
     _SPI2_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize
   _TMR1_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _butt3Pres
     _putch
       _EUSART_Write
     _resetAndOff
       _allBodyVal
         _applyColor
           _val2group
       _rstDemoOff
       _rstDemoOn
       _rstDragon
         _dragonCrashTool
           _applyColor
       _rstMaskOff
       _rstMaskOn
       _rstMusik
       _rstPressOff
       _rstPressOn
       _rstSeq
       _rstShadow
       _sendOrderX
     _rstDemoOff
   _changeDemoMode
     _butt3Pres
     _waitX0ms
   _initArrays
     _applyColor
   _protExec
     _sendOrderX
   _resetAndOff
   _secuences
     _SeqPresOff
       _putch
       _resetAndOff
       _sendOrderX
       _seqApply
         _val2group
       _seqByZone_Off
     _SeqPresOn
       _putch
       _rstPressOn
       _sendOrderX
       _seqApply
       _seqByZone_On
     _demoEfectOff
       _allBodyVal
       _resetAndOff
       _sendOrderX
     _demoEfectOn
       _allBodyVal
       _putch
       _rstDemoOn
       _rstMusik
       _sendOrderX
     _despShadow
       _rstShadow
       _sendOrderX
       _translateShadows
         _val2group
     _dragonCrash
       _crashOff3
       _crashOn2
       _dragonCrashTool
       _rstDragon
       _sendOrderX
     _maskOff
       ___bmul
       _rstMaskOff
       _sendOrderX
       _val2group
     _maskOn
       _rstMaskOn
       _sendOrderX
       _val2group
     _musik
       _putch
       _rstMusik
       _sendOrderX
       _val2group
     _refriShoulder
       _rstRefri
         _refriShoulderTool
           _applyColor
       _sendOrderX
     _rstShadow
     _sendOrderXs
       _merger
         _mergeBridge1
         _mergeBridge2
         _mergeGroup1
           _valfromGroup
         _mergeGroup2
           _valfromGroup
       _sendOrderDot
         _dotStart
           _SPI2_ExchangeByte
         _sendDotStar
           _SPI2_ExchangeByte

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _PIN_MANAGER_IOC *
     _IOCCF1_ISR
       Absolute function(Fake) *
       _IOCCF1_DefaultInterruptHandler *
       _IOC_DI1_ISR *
         _butt1Pres
           _initStop
             i1_rstDemoOn
             i1_rstPressOff
             i1_rstPressOn
           i1_putch
             i1_EUSART_Write
         i1_waitX0ms
     _IOCCF2_ISR
       Absolute function(Fake) *
       _IOCCF2_DefaultInterruptHandler *
       _IOC_AN2_ISR *
         i1_changeDemoMode
           i1_butt3Pres
             i1_putch
             i1_resetAndOff
               i1_allBodyVal
                 i1_applyColor
                   i1_val2group
               i1_rstDemoOff
               i1_rstDemoOn
               i1_rstDragon
                 i1_dragonCrashTool
                   i1_applyColor
               i1_rstMaskOff
               i1_rstMaskOn
               i1_rstMusik
               i1_rstPressOff
               i1_rstPressOn
               i1_rstSeq
               i1_rstShadow
               i1_sendOrderX
             i1_rstDemoOff
           i1_waitX0ms
     _IOCCF3_ISR
       Absolute function(Fake) *
       _IOCCF3_DefaultInterruptHandler *
       _IOC_AN1_ISR *
         _butt2Pres
           _execMask_Sword
             i1_putch
             i1_rstMaskOff
             i1_rstMaskOn
         i1_waitX0ms
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _pTMR1_ISR *
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _pTMR2_ISR *
   _pRC1_ISR *
     _butt1Pres
     _butt2Pres
     _protRCV
     i1_allBodyVal
     i1_butt3Pres
     i1_rstDragon
     i1_rstRefri
       i1_refriShoulderTool
         i1_applyColor

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1E      4C       5       95.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4D      11       96.2%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      4      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     25B      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      4B      16       93.8%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      3F      18       78.8%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0      3A      20       72.5%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     25B      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21               C      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22               0      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Aug 26 18:42:39 2021

                             ??i1_EUSART_Write 0070                  ?_EUSART_SetRxInterruptHandler 0051  
             __end_of_TMR2_SetInterruptHandler 216E                                 ___bmul@product 0053  
                          __end_ofi1_rstDemoOn 2181                                    _rstPressOff 21BD  
                          __end_ofi1_rstDragon 25A2                                             _sc 01DF  
                          __end_ofi1_rstMaskOn 21D2                                   ?_IOC_AN1_ISR 0070  
                        __size_ofi1_allBodyVal 001C                            __end_ofi1_rstShadow 2235  
                                 ?_IOC_AN2_ISR 0070                                   ?_IOC_DI1_ISR 0070  
                         __end_ofi1_rstDemoOff 21A9                              i1applyColor@color 0075  
                                          l105 191C                                            l118 2149  
                                          l128 2152                                            l321 21B2  
                                          l138 215B                              i1rstPressOn@start 0071  
                                          l350 2125                                            l318 21AB  
                                          l344 212E                                            l192 21F4  
                                          l353 2140                                            l186 246D  
                                          l347 2137                                            l443 2336  
                                          l195 20DF                                            l189 21F0  
                                          l525 2164                                            l294 1837  
                                          l198 210C                                            l382 239B  
                                          l392 221E                                            l465 216D  
                                          l386 1BCD                                            l394 2223  
                                          l395 2226                                            l495 2454  
                                          l833 27FF                                            l913 1C37  
                                          l907 17FF                                            l931 0843  
                                          l940 20E3                                            l925 276E  
                                          l870 0C5B                                            l919 1CA1  
                                          l951 2546                                            l943 2176  
                                          l937 04D3                              i1applyColor@group 0078  
                                          l948 22FD                                            l973 0E1C  
                                          l995 0FE5                                            _PR2 001E  
                              _timer1ReloadVal 0032                         ??_EUSART_RxDataHandler 0070  
                                          _run 0045                 ?_EUSART_SetFramingErrorHandler 0051  
                         __end_ofi1_rstMaskOff 21E9                        __size_of_PMD_Initialize 0008  
                              _TMR2_Initialize 2324                                            wreg 0009  
             ??_IOCCF2_DefaultInterruptHandler 0070                ?_IOCCF2_DefaultInterruptHandler 0070  
                                allBodyVal@val 005D             __end_of_IOCCF3_SetInterruptHandler 215C  
                   _IOCCF3_SetInterruptHandler 2153                           __end_ofi1_rstPressOn 2195  
                          i1_refriShoulderTool 19BD                             i1rstPressOff@start 0071  
                                         l1002 0FFF                                           l1005 22B9  
                                         l1104 1D7E                                           l1025 14C4  
                                         l1113 1B18                                           l1034 139F  
                                         l1107 2250                                           l1116 2219  
                                         l1052 24DF                                           l1070 25D2  
                                         l1062 2573                                           l1206 0570  
                                         l1305 24C1                                           l1065 116C  
                                         l1081 1ABE                                           l1250 21BC  
                                         l1059 2552                                           l1147 0A35  
                                         l1243 06A3                                           l1420 240A  
                                         l1260 1D0F                                           l1309 19BC  
                                         l1085 1B72                                           l1270 26AC  
                                         l1247 078C                                           l1256 1CEB  
                                         l1088 2349                                           l1177 21DC  
                                         l1273 1009                                           l1433 2638  
                                         l1337 1881                                           l1265 27B6  
                                         l1282 21C6                                           l1186 1A67  
                                         l1291 127B                                           l1436 20F4  
                                         l1364 1E7B                                           l1189 22EB  
                                         l1294 2371                                           l1366 1E87  
                                         l1439 2114                                           l1287 1DEC  
                                         l1279 1083                                           l1288 1DF2  
                                         l5001 1736                                           l5011 1768  
                                         l5003 1740                                           l1299 23B0  
                                         l5013 1772                                           l5005 174A  
                                         l5021 17E7                                           l5015 177C  
                                         l5007 1754                                           l5023 17EB  
                                         l6001 2333                                           l5025 17F6  
                                         l5009 175E                                           l5121 2369  
                                         l6011 2443                                           l6003 243C  
                                         l5019 1786                                           l1675 23DC  
                                         l6021 1804                                           l6013 2447  
                                         l6005 243E                                           l6101 13FC  
                                         l6031 1815                                           l6023 180C  
                                         l6015 2449                                           l6007 2440  
                                         l5119 2360                                           l6111 142A  
                                         l6103 1401                                           l6041 1831  
                                         l6033 1817                                           l6025 180F  
                                         l6017 2451                                           l6009 2442  
                                         l6121 1467                                           l6113 1430  
                                         l6105 1407                                           l6201 1D3C  
                                         l5401 2524                                           l6043 1833  
                                         l6035 181F                                           l6027 1811  
                                         l6019 1802                                           l5323 21AB  
                                         l5251 1102                                           l5403 22AD  
                                         l6131 1494                                           l6123 1487  
                                         l6115 1450                                           l6107 141C  
                                         l6203 1D45                                           l6045 1834  
                                         l6037 1827                                           l6029 1813  
                                         l5325 21AF                                           l5261 1145  
                                         l5253 1109                                           l5245 1084  
                                         l5421 25C3                                           l5413 25A6  
                                         l5501 23AA                                           l5405 22B4  
                                         l6141 14B2                                           l6133 149D  
                                         l6117 145A                                           l6109 1424  
                                         l6125 1492                                           l6301 0910  
                                         l6221 1D6F                                           l6213 1D60  
                                         l6205 1D4A                                           l6047 1835  
                                         l6039 182F                                           l5255 1120  
                                         l5247 10E4                                           l5423 25C7  
                                         l5415 25B5                                           l5407 25A4  
                                         l6143 14B7                                           l6135 14A1  
                                         l6119 1461                                           l6151 1A68  
                                         l6303 0916                                           l6311 0951  
                                         l6231 1AC5                                           l5431 1B1B  
                                         l6223 1D73                                           l6215 1D65  
                                         l6207 1D53                                           l5167 221A  
                                         l5521 2153                                           l5257 1127  
                                         l5249 10EB                                           l5425 25C8  
                                         l5417 25B8                                           l7041 23F9  
                                         l6145 14B9                                           l6137 14A7  
                                         l6073 13A0                                           l6161 1A86  
                                         l6153 1A6E                                           l6321 0989  
                                         l6313 0957                                           l6305 0920  
                                         l6241 1B05                                           l6233 1ACE  
                                         l6401 04EA                                           l5441 1B3E  
                                         l5433 1B1C                                           l6209 1D56  
                                         l6225 1D76                                           l5169 2224  
                                         l5523 2138                                           l5259 113E  
                                         l5427 25C9                                           l5419 25BD  
                                         l5451 224A                                           l7043 23FD  
                                         l6147 14BC                                           l6139 14AB  
                                         l6091 13CC                                           l6075 13A6  
                                         l6171 1AA0                                           l6163 1A8C  
                                         l6155 1A77                                           l6323 099B  
                                         l6315 0969                                           l6307 0926  
                                         l6251 084A                                           l6243 1B08  
                                         l6235 1AD2                                           l6411 050C  
                                         l6403 04F0                                           l5443 1B4B  
                                         l5435 1B21                                           l6227 1D79  
                                         l5525 2126                                           l5517 2141  
                                         l5541 2165                                           l5461 24A7  
                                         l5429 25CC                                           l5453 220F  
                                         l7045 2402                                           l6149 14BF  
                                         l6093 13D2                                           l6085 13B9  
                                         l6077 13B0                                           l6181 1AB3  
                                         l6165 1A92                                           l6173 1AA3  
                                         l6157 1A7C                                           l6341 09EB  
                                         l6325 09A2                                           l6317 0970  
                                         l6309 0946                                           l6261 085D  
                                         l6253 0854                                           l6245 1B12  
                                         l6237 1AF1                                           l6229 1ABF  
                                         l6501 062D                                           l6421 0523  
                                         l6413 0512                                           l6405 04FC  
                                         l5445 1B58                                           l5437 1B25  
                                         l5701 0E94                                           l5527 212F  
                                         l5519 214A                                           l5543 215C  
                                         l5463 24AA                                           l5455 2215  
                                         l5471 22E0                                           l7047 2406  
                                         l7039 23F4                                           l6095 13D9  
                                         l6087 13C2                                           l6079 13B6  
                                         l6183 1AB6                                           l6175 1AAA  
                                         l6167 1A98                                           l6159 1A82  
                                         l6351 09FF                                           l6343 09ED  
                                         l6335 09D9                                           l6327 09C6  
                                         l6319 0982                                           l6271 087B  
                                         l6263 0866                                           l6255 085A  
                                         l6247 1B14                                           l6239 1B00  
                                         l6511 064B                                           l6503 0633  
                                         l6423 0529                                           l6431 0552  
                                         l6415 0516                                           l6407 0500  
                                         l5447 1B65                                           l5439 1B31  
                                         l6191 1D20                                           l5711 0F00  
                                         l5703 0EA4                                           l5529 211D  
                                         l5465 24B6                                           l5481 21B7  
                                         l5457 21D4                                           l5449 2245  
                                         l5473 22E5                                           l5801 1988  
                                         l6601 1CBD                                           l6097 13DF  
                                         l6089 13C6                                           l6185 1AB9  
                                         l6177 1AAE                                           l6169 1A9C  
                                         l6361 0A04                                           l6353 0A03  
                                         l6345 09F1                                           l6337 09E1  
                                         l6329 09D7                                           l6281 08A7  
                                         l6273 0886                                           l6265 086A  
                                         l6249 0844                                           l6521 0665  
                                         l6505 0639                                           l6513 0651  
                                         l6441 0571                                           l6433 0559  
                                         l6425 053A                                           l6417 051A  
                                         l6409 0505                                           l6193 1D29  
                                         l5721 0F8D                                           l5713 0F21  
                                         l5705 0EC2                                           l5641 0C60  
                                         l5467 24BB                                           l5459 21D7  
                                         l5475 22E6                                           l5483 1002  
                                         l5491 239C                                           l5387 20E0  
                                         l5811 199C                                           l5803 198C  
                                         l6611 1CE6                                           l6603 1CC1  
                                         l6371 1A11                                           l6099 13F4  
                                         l6179 1AB2                                           l6363 0A23  
                                         l6355 0A03                                           l6339 09E5  
                                         l6347 09F7                                           l6291 08E6  
                                         l6283 08AD                                           l6275 088B  
                                         l6267 0870                                           l6523 0676  
                                         l6515 0657                                           l6507 063F  
                                         l6451 058B                                           l6443 0577  
                                         l6435 055F                                           l6427 0540  
                                         l6419 051D                                           l6531 0685  
                                         l6195 1D2E                                           l6187 1D10  
                                         l5395 22EE                                           l5723 0F9D  
                                         l5715 0F31                                           l5707 0ED2  
                                         l5731 0FEA                                           l5651 0CA7  
                                         l5643 0C64                                           l5901 18DB  
                                         l5477 22E7                                           l5469 22DD  
                                         l5485 1004                                           l5821 19AA  
                                         l5813 19A5                                           l5805 1990  
                                         l6613 1CF5                                           l6621 1D03  
                                         l6605 1CC3                                           l6381 1A41  
                                         l6373 1A1B                                           l5741 129F  
                                         l6365 0A27                                           l6349 09FE  
                                         l6293 08EF                                           l6285 08C2  
                                         l6277 0896                                           l6269 0875  
                                         l6541 06C4                                           l6533 069E  
                                         l6525 067C                                           l6517 065C  
                                         l6509 0645                                           l6453 059C  
                                         l6461 05AB                                           l6445 057D  
                                         l6437 0567                                           l6197 1D34  
                                         l6189 1D16                                           l5397 22F2  
                                         l5389 22EC                                           l5733 0FF3  
                                         l5725 0FBE                                           l5717 0F5C  
                                         l5709 0EF0                                           l5661 0D09  
                                         l5653 0CB7                                           l5645 0C73  
                                         l5637 0C5C                                           l5911 18E5  
                                         l5903 18DD                                           l5479 21B5  
                                         l5487 21BF                                           l5823 19AC  
                                         l5815 19A7                                           l5807 1994  
                                         l5831 2771                                           l6631 101E  
                                         l6623 1D0C                                           l6615 1CF9  
                                         l6607 1CCC                                           l6391 1A5D  
                                         l6383 1A46                                           l6375 1A1F  
                                         l5751 1385                                           l5743 12A7  
                                         l5735 127C                                           l6367 0A2D  
                                         l6295 08F6                                           l6287 08CA  
                                         l6279 089C                                           l6551 06D9  
                                         l6543 06CA                                           l6535 06B1  
                                         l6527 0680                                           l6519 065F  
                                         l6471 05C9                                           l6463 05B1  
                                         l6455 05A2                                           l6447 0582  
                                         l6439 056B                                           l6199 1D39  
                                         l5399 22F7                                           l5727 0FCE  
                                         l5719 0F6C                                           l5671 0D93  
                                         l5663 0D27                                           l5655 0CCB  
                                         l5647 0C84                                           l5639 0C5C  
                                         l5921 18ED                                           l5913 18E8  
                                         l5905 18DF                                           l4961 1670  
                                         l5489 21C1                                           l5497 239F  
                                         l5825 19B1                                           l5817 19A8  
                                         l5809 1998                                           l5841 268D  
                                         l5833 278A                                           l6641 1041  
                                         l6633 1028                                           l6625 100A  
                                         l6617 1CFD                                           l6609 1CD5  
                                         l6393 1A63                                           l6385 1A48  
                                         l6377 1A25                                           l5753 1397  
                                         l5745 136F                                           l5737 1280  
                                         l5761 24D4                                           l6369 0A30  
                                         l6297 0900                                           l6289 08D0  
                                         l6561 06FD                                           l6545 06CB  
                                         l6553 06DA                                           l6537 06BA  
                                         l6481 05E7                                           l6465 05B7  
                                         l6457 05A6                                           l6449 0585  
                                         l7601 0BDC                                           l5729 0FE5  
                                         l5681 0E05                                           l5673 0DA3  
                                         l5665 0D37                                           l5657 0CDB  
                                         l5649 0C93                                           l5931 18F2  
                                         l5923 18EE                                           l5915 18EA  
                                         l5907 18E0                                           l6811 2458  
                                         l4971 16A1                                           l4963 167A  
                                         l5499 23A6                                           l5827 19B4  
                                         l5819 19A9                                           l5843 269C  
                                         l5835 2798                                           l6651 106F  
                                         l6643 104A                                           l6635 102C  
                                         l6627 1014                                           l6619 1CFF  
                                         l6387 1A51                                           l6379 1A2F  
                                         l5747 1372                                           l5739 129B  
                                         l5763 24D6                                           l5755 24C2  
                                         l6299 0906                                           l6571 072A  
                                         l6563 0706                                           l6555 06E2  
                                         l6547 06CF                                           l6491 060B  
                                         l6483 05EB                                           l6475 05CF  
                                         l6467 05BD                                           l6539 06BE  
                                         l6395 04D4                                           l5691 0E3C  
                                         l5675 0DC4                                           l5667 0D58  
                                         l5659 0CF9                                           l5683 0E1C  
                                         l5941 190D                                           l5933 18F3  
                                         l5925 18EF                                           l5917 18EB  
                                         l5909 18E3                                           l6821 2467  
                                         l6813 245B                                           l4981 16D3  
                                         l4973 16AB                                           l4965 1684  
                                         l4957 1664                                           l5829 19B9  
                                         l6741 260D                                           l6901 1839  
                                         l5845 26A5                                           l6661 1D7F  
                                         l5837 27AD                                           l6653 1075  
                                         l6645 1053                                           l6637 102F  
                                         l6629 1018                                           l6389 1A55  
                                         l5749 1377                                           l5765 2547  
                                         l5757 24CC                                           l6581 0757  
                                         l6573 0733                                           l6565 070F  
                                         l6557 06EB                                           l6549 06D3  
                                         l6493 0615                                           l6477 05D5  
                                         l6469 05C3                                           l6397 04DA  
                                         l5781 2339                                           l7605 0BEB  
                                         l7621 1BE0                                           l7701 0208  
                                         l5693 0E4D                                           l5677 0DD4  
                                         l5669 0D68                                           l5685 0E21  
                                         l5951 1919                                           l5943 1910  
                                         l5935 18FB                                           l5927 18F0  
                                         l5919 18EC                                           l6823 246A  
                                         l6815 245E                                           l4991 1704  
                                         l4983 16DD                                           l4975 16B5  
                                         l4967 168D                                           l4959 1667  
                                         l5791 1975                                           l6751 2621  
                                         l6743 2611                                           l6911 1869  
                                         l6903 1840                                           l5847 116D  
                                         l5839 2674                                           l6671 1DA5  
                                         l6663 1D89                                           l6655 1079  
                                         l6647 105C                                           l6639 1038  
                                         l5775 2555                                           l5767 254C  
                                         l5759 24D0                                           l5871 23D4  
                                         l5863 23C9                                           l6591 0784  
                                         l6583 0760                                           l6575 073C  
                                         l6567 0718                                           l6559 06F4  
                                         l6495 061B                                           l6487 05F0  
                                         l6399 04E4                                           l5783 233F  
                                         l7551 0A67                                           l7607 0C4C  
                                         l7543 0A38                                           l7623 1BE4  
                                         l7615 1BD0                                           l7711 0263  
                                         l7703 0218                                           l5695 0E5C  
                                         l5687 0E2A                                           l5679 0DF5  
                                         l5945 1912                                           l5937 1903  
                                         l5929 18F1                                           l6817 2461  
                                         l6809 2455                                           l4993 170E  
                                         l4985 16E6                                           l4977 16BF  
                                         l4969 1697                                           l5793 1979  
                                         l6761 2634                                           l6753 2624  
                                         l6745 2614                                           l6905 1855  
                                         l6681 1DCC                                           l6673 1DA8  
                                         l6665 1D8D                                           l6657 107D  
                                         l6649 1065                                           l5777 2569  
                                         l5769 2550                                           l5873 23DB  
                                         l5865 23CA                                           l6593 0787  
                                         l6585 0769                                           l6577 0745  
                                         l6569 0721                                           l6497 0621  
                                         l6489 05F6                                           l5785 2343  
                                         l7561 0AB1                                           l7553 0A75  
                                         l7545 0A3B                                           l7609 0C50  
                                         l7625 1C1F                                           l7617 1BD0  
                                         l7641 1C4E                                           l7633 1C3A  
                                         l7721 02D6                                           l7713 027D  
                                         l7705 0224                                           l5697 0E70  
                                         l5689 0E2D                                           l7801 1E42  
                                         l5947 1915                                           l5939 190B  
                                         l5971 2105                                           l6819 2464  
                                         l5787 20F0                                           l4995 1718  
                                         l4987 16F0                                           l4979 16C9  
                                         l5795 197D                                           l6747 2619  
                                         l6755 2629                                           l6739 2608  
                                         l6763 210F                                           l6907 185C  
                                         l6915 186D                                           l6683 1DD5  
                                         l6675 1DB1                                           l6667 1D93  
                                         l6659 1080                                           l6595 1CA2  
                                         l5779 256D                                           l5867 23CE  
                                         l6587 0772                                           l6579 074E  
                                         l6499 0627                                           l7651 272D  
                                         l7571 0AFB                                           l7563 0AC0  
                                         l7555 0A84                                           l7547 0A49  
                                         l7627 1C23                                           l7619 1BDC  
                                         l7643 1C89                                           l7635 1C3A  
                                         l7731 0331                                           l7723 02EB  
                                         l7715 0292                                           l7707 0239  
                                         l5699 0E80                                           l7811 1E6C  
                                         l7803 1E48                                           l6781 1B9C  
                                         l5949 1917                                           l5981 2399  
                                         l5973 2387                                           l4997 1722  
                                         l4989 16FA                                           l5797 1980  
                                         l5789 196F                                           l6749 261D  
                                         l6757 262E                                           l6765 2110  
                                         l6861 27BB                                           l6909 1863  
                                         l6917 187F                                           l6685 1DDE  
                                         l6677 1DBA                                           l6669 1DA1  
                                         l6597 1CAC                                           l5869 23D2  
                                         l6589 077B                                           l7653 2733  
                                         l7581 0B46                                           l7573 0B0A  
                                         l7565 0ACF                                           l7557 0A93  
                                         l7549 0A58                                           l7629 1C31  
                                         l7645 1C8D                                           l7637 1C46  
                                         l7741 039F                                           l7733 0346  
                                         l7725 0305                                           l7717 02A7  
                                         l7709 024E                                           l7821 1E84  
                                         l7813 1E6E                                           l7805 1E51  
                                         l6783 1B9D                                           l5983 21E9  
                                         l5895 18CE                                           l5975 2394  
                                         l5991 2324                                           l4999 172C  
                                         l5799 1984                                           l6759 2632  
                                         l6871 27E9                                           l6863 27D7  
                                         l6687 1DE8                                           l6679 1DC3  
                                         l6599 1CB9                                           l7655 2756  
                                         l7671 083D                                           l7663 0802  
                                         l7591 0B91                                           l7583 0B55  
                                         l7575 0B19                                           l7567 0ADE  
                                         l7559 0AA2                                           l7647 1C9B  
                                         l7639 1C4A                                           l7751 0417  
                                         l7743 03B9                                           l7735 035B  
                                         l7727 031A                                           l7719 02BC  
                                         l7807 1E53                                           l7815 1E72  
                                         l7831 079F                                           l7823 078D  
                                         l6785 1BAE                                           l6793 1BCC  
                                         l6777 1B75                                           l5985 21ED  
                                         l5897 18D1                                           l5977 2395  
                                         l5993 2327                                           l6881 27F5  
                                         l6873 27EE                                           l6865 27DB  
                                         l6689 1DEF                                           l7657 275A  
                                         l7665 0808                                           l7593 0BA0  
                                         l7585 0B64                                           l7577 0B28  
                                         l7569 0AED                                           l7761 048F  
                                         l7753 042C                                           l7745 03CE  
                                         l7737 0370                                           l7729 032F  
                                         l7681 0117                                           l7817 1E78  
                                         l7809 1E63                                           l7841 07C7  
                                         l7833 07A7                                           l7825 0790  
                                         l6787 1BC8                                           l6779 1B7A  
                                         l5987 21EF                                           l5899 18D4  
                                         l5979 2397                                           l5995 2328  
                                         l6883 27F9                                           l6875 27F4  
                                         l6867 27E1                                           l6859 27B7  
                                         l7659 2768                                           l7667 082B  
                                         l7595 0BAF                                           l7587 0B73  
                                         l7579 0B37                                           l7763 04A4  
                                         l7755 0446                                           l7747 03E8  
                                         l7739 0385                                           l7691 0185  
                                         l7683 012C                                           l7675 00EA  
                                         l7771 2174                                           l7819 1E7E  
                                         l7851 07DC                                           l7843 07C8  
                                         l7835 07AF                                           l7827 0793  
                                         l6789 1BCA                                           l5997 2329  
                                         l5989 20DC                                           l6869 27E3  
                                         l7669 082F                                           l7597 0BBE  
                                         l7589 0B82                                           l7765 04BE  
                                         l7757 0460                                           l7749 03FD  
                                         l7693 019F                                           l7685 0146  
                                         l7677 00ED                                           l7781 1E08  
                                         l7773 1DF3                                           l7861 07EE  
                                         l7853 07DD                                           l7845 07C9  
                                         l7837 07B7                                           l7829 0797  
                                         l5999 232B                                           l7951 178E  
                                         l7599 0BCD                                           l7759 0475  
                                         l7695 01B4                                           l7687 015B  
                                         l7679 0102                                           l7767 216E  
                                         l7791 1E20                                           l7783 1E0C  
                                         l7775 1DF9                                           l7863 07F1  
                                         l7855 07E0                                           l7847 07CD  
                                         l7839 07BF                                           l7697 01B7  
                                         l7689 0170                                           l7769 2171  
                                         l7793 1E26                                           l7785 1E12  
                                         l7777 1DFF                                           l7865 07F7  
                                         l7857 07E6                                           l7849 07D6  
                                         l6899 1838                                           l7947 0BF3  
                                         l7699 0203                                           l7795 1E33  
                                         l7787 1E16                                           l7779 1E03  
                                         l7859 07EC                                           l7949 1877  
                                         l7797 1E38                                           l7789 1E1C  
                                         l7799 1E3D                         __end_of_changeDemoMode 240B  
                                         _LATA 010C                                           _LATC 010E  
                                         u3300 17F6                                           u4100 13D9  
                                         u3301 17F5                                           u4101 13D8  
                                         u4110 13DF                                           u4111 13DE  
                                         u4040 21F4                                           u4200 1467  
                                         u4120 13F4                                           u5000 05EF  
                                         u4041 21F3                                           u4201 1466  
                                         u4121 13F3                                           u5001 05EE  
                                         u4210 1487                                           u4130 1401  
                                         u5010 05F6                                           u4211 1486  
                                         u4131 1400                                           u5011 05F5  
                                         u3500 21AF                                           u4220 14A7  
                                         u4140 1407                                           u4060 13A6  
                                         u5100 0645                                           u5020 060B  
                                         u4300 1D16                                           u3501 21AE  
                                         u4221 14A6                                           u4141 1406  
                                         u4061 13A5                                           u5101 0644  
                                         u5021 060A                                           u4301 1D15  
                                         u4230 14B2                                           u4150 141C  
                                         u4070 13B0                                           u5110 064B  
                                         u5030 061B                                           u4310 1D20  
                                         u4231 14B1                                           u4215 1483  
                                         u4151 141B                                           u4071 13AF  
                                         u5111 064A                                           u5031 061A  
                                         u4311 1D1F                                           u4160 142A  
                                         u4080 13B6                                           u4240 1A6E  
                                         u4400 1ACE                                           u5200 06C4  
                                         u5120 0651                                           u5040 0621  
                                         u4320 1D29                                           u3360 2223  
                                         u4161 1429                                           u4081 13B5  
                                         u4241 1A6D                                           u4401 1ACD  
                                         u5201 06C3                                           u5121 0650  
                                         u5041 0620                                           u5025 0607  
                                         u4321 1D28                                           u3361 2222  
                                         u4170 1430                                           u4090 13CC  
                                         u4250 1A77                                           u4410 1AF1  
                                         u5210 06CA                                           u5130 0657  
                                         u5050 0627                                           u4330 1D34  
                                         u4171 142F                                           u4091 13CB  
                                         u4251 1A76                                           u4411 1AF0  
                                         u5211 06C9                                           u5131 0656  
                                         u5051 0626                                           u4331 1D33  
                                         u5300 1CFD                                           u4180 1450  
                                         u4260 1A82                                           u4500 08AD  
                                         u4420 1B12                                           u5220 06D9  
                                         u5140 065C                                           u5060 062D  
                                         u4340 1D45                                           u3700 0DA3  
                                         u5301 1CFC                                           u4181 144F  
                                         u4261 1A81                                           u4501 08AC  
                                         u4421 1B11                                           u5221 06D8  
                                         u5141 065B                                           u5061 062C  
                                         u4341 1D44                                           u3701 0DA2  
                                         u5310 1014                                           u5230 1CAC  
                                         u4190 1461                                           u4270 1A8C  
                                         u4510 08C2                                           u4430 084A  
                                         u5150 0665                                           u5070 0633  
                                         u4350 1D53                                           u3550 22FD  
                                         u3710 0DD4                                           u3630 0C73  
                                         u5311 1013                                           u5231 1CAB  
                         __end_of_demoEfectOff 1D10                                           u4191 1460  
                                         u4271 1A8B                                           u4511 08C1  
                                         u4431 0849                                           u4415 1AED  
                                         u5151 0664                                           u5071 0632  
                                         u4351 1D52                                           u3551 22FC  
                                         u3711 0DD3                                           u3631 0C72  
                                         u3560 25C3                                           u5320 101E  
                                         u5240 1CB9                                           u4280 1A98  
                                         u4600 0970                                           u4520 08D0  
                                         u4440 0854                                           u5160 0676  
                                         u5080 0639                                           u4360 1D5F  
                                         u3800 0F31                                           u3720 0E05  
                                         u3640 0C93                                           u3561 25C2  
                                         u5321 101D                                           u5241 1CB8  
                                         u4185 144C                                           u4281 1A97  
                                         u4601 096F                                           u4521 08CF  
                                         u4441 0853                                           u5161 0675  
                                         u5081 0638                                           u4361 1D5E  
                                         u3801 0F30                                           u3721 0E04  
                                         u3641 0C92                                           u5330 1028  
                                         u5250 1CC1                                           u4290 1AAA  
                                         u4610 0989                                           u4530 08E6  
                                         u4450 085A                                           u5170 0684  
                                         u5090 063F                                           u3570 1B21  
                                         u4370 1D65                                           u3810 0F6C  
                                         u3730 0E2A                                           u3650 0CB7  
                                         u5331 1027                                           u5251 1CC0  
                                         u4291 1AA9                                           u4611 0988  
                                         u4531 08E5                                           u4451 0859  
                                         u5171 0683                                           u5091 063E  
                                         u3571 1B20                                           u4371 1D64  
                                         u3811 0F6B                                           u3731 0E29  
                                         u3651 0CB6                                           u3580 24C1  
                                         u3900 19B1                                           u5500 260D  
                                         u5340 106F                                           u5260 1CCC  
                                         u4700 1A41                                           u4620 09A2  
                                         u4540 08F6                                           u4460 0870  
                                         u5180 069E                                           u4380 1D6E  
                                         u3820 0F9D                                           u3740 0E3C  
                                         u3660 0CDB                                           _PMD0 0911  
                                         u3581 24C0                                           u3901 19B0  
                                         u5501 260C                                           u5341 106E  
                                         u5261 1CCB                                           u4701 1A40  
                                         u4621 09A1                                           u4541 08F5  
                                         u4461 086F                                           u5181 069D  
                                         u5165 0672                                           u4381 1D6D  
                                         u3821 0F9C                                           u3741 0E3B  
                                         u3661 0CDA                                           _PMD1 0912  
                                         u3590 23B0                                           u5510 2619  
                                         u5350 1D89                                           u3910 278A  
                                         u5270 1CD5                                           u4710 1A63  
                                         u4630 09C6                                           u4550 0906  
                                         u4470 087B                                           u4390 1AC5  
                                         u5190 06B1                                           u3830 0FCE  
                                         u3750 0E5C                                           u3670 0D09  
                                         _PMD2 0913                                           u3591 23AF  
                                         u5511 2618                                           u5351 1D88  
                                         u3911 2789                                           u5271 1CD4  
                                         u4711 1A62                                           u4631 09C5  
                                         u4551 0905                                           u4535 08E2  
                                         u4471 087A                                           u4391 1AC4  
                                         u5191 06B0                                           u3831 0FCD  
                                         u3751 0E5B                                           u3671 0D08  
                                         _PMD3 0914                                           u5520 1B7A  
                                         u5360 1D93                                           u3920 27AD  
                                         u5280 1CE6                                           u4640 09EB  
                                         u4560 0916                                           u4480 088B  
                                         u4800 0529                                           u4720 04DA  
                                         u3840 0FF3                                           u3760 0E80  
                                         u3680 0D37                                           _PMD4 0915  
                                         u5521 1B79                                           u5361 1D92  
                                         u3921 27AC                                           u5281 1CE5  
                                         u4705 1A3D                                           u4641 09EA  
                                         u4561 0915                                           u4481 088A  
                                         u5185 069A                                           u4801 0528  
                                         u4721 04D9                                           u3841 0FF2  
                                         u3761 0E7F                                           u3681 0D36  
                                         _PMD5 0916                                           u5610 27E1  
                                         u3930 268D                                           u5370 1DA1  
                                         u5290 1CF5                                           u3850 12A7  
                                         u4650 09FE                                           u4570 0926  
                                         u4490 089C                                           u4810 053A  
                                         u4730 04E4                                           u3770 0EA4  
                                         u3690 0D68                                           u5611 27E0  
                                         u3931 268C                                           u5371 1DA0  
                                         u3915 2786                                           u5291 1CF4  
                                         u3851 12A6                                           u4651 09FD  
                                         u4571 0925                                           u4491 089B  
                                         u5195 06AD                                           u4811 0539  
                                         u4731 04E3                                           u3771 0EA3  
                                         u3691 0D67                                           u5620 27F4  
                                         u3940 26A5                                           u5380 1DE8  
                                         u3860 139F                                           u4660 0A2D  
                                         u4580 0946                                           u4900 059C  
                                         u4820 0551                                           u4740 04EA  
                                         u3780 0ED2                                           u5621 27F3  
                                         u3941 26A4                                           u5381 1DE7  
                                         u3925 27A9                                           u5285 1CE2  
                                         u3861 139E                                           u4661 0A2C  
                                         u4581 0945                                           u4901 059B  
                                         u4821 0550                                           u4741 04E9  
                                         u3781 0ED1                                           u5630 27FF  
                                         u4670 1A1B                                           u3870 24D4  
                                         u4590 0957                                           u4910 05AA  
                                         u4830 0559                                           u4750 04F0  
                                         u3790 0F00                                           u5631 27FE  
                                         u3935 2689                                           u5375 1D9D  
                                         u4671 1A1A                                           u3871 24D3  
                                         u4591 0956                                           u4911 05A9  
                                         u4831 0558                                           u4815 0536  
                                         u4751 04EF                                           u3791 0EFF  
                                         u4680 1A25                                           u3880 2550  
                                         u4920 05B1                                           u4840 055F  
                                         u4760 050C                                           u6600 1DFF  
                                         u4681 1A24                                           u3881 254F  
                                         u4585 0942                                           u4921 05B0  
                                         u4905 0598                                           u4841 055E  
                                         u4825 054D                                           u4761 050B  
                                         u6601 1DFE                                           u5650 1840  
                                         u4690 1A2F                                           u3890 2573  
                                         u4930 05B7                                           u4850 056B  
                                         u4770 0512                                           u6530 0C5B  
                                         u6610 1E08                                           u5651 183F  
                                         u4691 1A2E                                           u3891 2572  
                                         u4931 05B6                                           u4851 056A  
                                         u4771 0511                                           u6531 0C5A  
                                         u6611 1E07                                           u5660 185C  
                                         u3980 23CE                                           u4940 05BD  
                                         u4860 0577                                           u4780 051A  
                                         u6540 1C31                                           u6700 1E84  
                                         u6620 1E12                                           u5661 185B  
                                         u3981 23CD                                           u4941 05BC  
                                         u4861 0576                                           u4781 0519  
                                         u6541 1C30                                           u6701 1E83  
                                         u6621 1E11                                           u5910 23F9  
                                         u3990 23DB                                           u4950 05C3  
                                         u4870 057D                                           u4790 0523  
                                         u6550 1C9B                                           u6630 1E1C  
                                         u6710 07DC                                           u5911 23F8  
                                         u3991 23DA                                           u4951 05C2  
                                         u4871 057C                                           u4791 0522  
                                         u6551 1C9A                                           u6631 1E1B  
                                         u6711 07DB                                           u4960 05C9  
                                         u4880 0582                                           u6560 2768  
                                         u6640 1E26                                           u6720 07E6  
                                         u4961 05C8                                           u4881 0581  
                                         u6561 2767                                           u6545 1C2D  
                                         u6641 1E25                                           u6721 07E5  
                                         u4970 05CE                                           u4890 058B  
                                         u6570 083D                                           u6650 1E38  
                                         u6730 07EC                                           u4971 05CD  
                                         u4891 058A                                           u6571 083C  
                                         u6555 1C97                                           u6651 1E37  
                                         u6731 07EB                                           u4980 05D5  
                                         u6580 0218                                           u6660 1E3D  
                                         u6740 07F7                                           u4981 05D4  
                                         u6565 2764                                           u6581 0217  
                                         u6661 1E3C                                           u6741 07F6  
                                         u4990 05E6                                           u6670 1E48  
                                         u6590 1DF9                                           u4991 05E5  
                                         u6575 0839                                           u6671 1E47  
                                         u6591 1DF8                                           u6680 1E63  
                                         u6585 0214                                           u6681 1E62  
                                         u6690 1E78                                           u4995 05E2  
                                         u6691 1E77                                           _PLLR 48E0  
                                         _TMR2 001D                                           _WPUA 020C  
                                         _WPUC 020E                                           _Core 02B0  
                                         _Mask 02A0                                           _pTot 00EE  
                                         _main 078D                                           _tick 0047  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                     i1_waitX0ms 20FD  
                                         start 0047                                __end_ofi1_putch 20EE  
                   ??_TMR1_SetInterruptHandler 0053                              ___bmul@multiplier 0054  
                                 i1_allBodyVal 2489                                     i1_rstRefri 2311  
                                   i1_rstMusik 22BA                          __end_of_refriShoulder 1D7F  
                         ?i1_refriShoulderTool 0070                                    i1_butt3Pres 25D3  
                        __end_ofi1_rstPressOff 218B                                  ?_EUSART_Write 0070  
               __size_of_OSCILLATOR_Initialize 000C                      __size_ofi1_changeDemoMode 0017  
                __end_of_OSCILLATOR_Initialize 21F5                            __size_of_IOCCF1_ISR 000F  
                          __size_of_IOCCF2_ISR 000F                          __size_ofi1_applyColor 0013  
                          __size_of_IOCCF3_ISR 000F                                 rstDemoOn@start 0052  
                                 ?_mergeGroup1 0055                                   ?_mergeGroup2 0055  
                                        ?_main 0070                                          _T1CON 001B  
                                        _T2CON 001F                                          i1l111 243B  
                                        i1l121 1801                                          i1l115 226E  
                                        i1l131 0800                                          i1l125 227D  
                                        i1l141 0801                                          i1l221 0014  
                                        i1l135 229B                                          i1l231 0045  
                                        i1l224 0026                                          i1l321 219E  
                                        i1l225 0045                                          i1l226 0034  
                                        i1l332 2488                                          i1l341 20CF  
                                        i1l318 2196                                          i1l335 1800  
                                        i1l328 272C                                          i1l338 20D3  
                                        i1l522 23C6                                          i1l509 22DA  
                                        i1l462 22AA                                          i1l528 0002  
                                        i1l468 0003                                    i1_val2group 14C5  
                                        i1l907 1661                                          i1l940 20D7  
                                        _OSCEN 091D                                          _TMR1H 001A  
                                        _TMR1L 0019                                          _AbsDL 01D9  
                                        _AbsDR 01D6                                          _BackD 01CA  
                                        _AbsML 0156                                          _AbsMR 01DC  
                                        _TRISA 008C                                          _TRISC 008E  
                                        _AbsUL 01BE                                          _AbsUR 01BA  
                                        _RXPPS 0E24                                          _LegDL 025A  
                                        _LegDR 0254                                          _LegUL 0266  
                                        _LegUR 0260                             __size_of_SPI2_Open 005B  
                                        _NeckL 015C                                          _NeckR 0159  
                                        _ShoeL 02C3                                          _ShoeR 02BB  
                             __end_of_TMR1_ISR 23C7                                          _State 0036  
                             __end_of_TMR2_ISR 22AB                                          _pCont 0034  
                                        _pInit 00D5                                __end_of_maskOff 0A36  
                                        _pVals 024A                        __end_of_PIN_MANAGER_IOC 243C  
                               _WDT_Initialize 20DC                                          _musik 04D4  
                                        _putch 20EE                                ?_changeDemoMode 0070  
                      __end_of_TMR1_Initialize 2455                                          pclath 000A  
                              __end_of_protRCV 18CE                           __size_of_demoEfectOn 0057  
                                        status 0003                                          wtemp0 007E  
                           i1val2group@groupID 0073                                _TMR1_WriteTimer 22CA  
                             __end_ofi1_rstSeq 235E                                    i1_rstDemoOn 2177  
                                  i1_rstDragon 2574                                    i1_rstMaskOn 21C7  
                                 i1_applyColor 22FE                                __initialization 0049  
                                  i1_rstShadow 2227                                allBodyVal@color 005A  
                        ??i1_refriShoulderTool 0079                                   __end_of_main 07FD  
                                   i1putch@val 0071                              _SPI2_ExchangeByte 221A  
                               ??_EUSART_Write 0051                          i1refriShoulderTool@on 007B  
                      __end_of_TMR2_Initialize 2337                    ?_INTERRUPT_InterruptManager 0070  
                                 ?_sendDotStar 0052                             ?_SPI2_ExchangeByte 0051  
                               _execMask_Sword 24E0                 ??_EUSART_SetRxInterruptHandler 0053  
                     _TMR2_SetInterruptHandler 2165                                         ??_main 006B  
                             __end_of_pRC1_ISR 1F40                                   ?_sendOrderXs 0070  
                     __size_of_SPI2_Initialize 0015                        _IOCCF2_InterruptHandler 01E5  
                                ?_mergeBridge1 0051                                  ?_mergeBridge2 0051  
                            ?_translateShadows 0070                            ??_SPI2_ExchangeByte 0052  
                       __end_of_WDT_Initialize 20E0                          __size_ofi1_sendOrderX 0004  
                              rstDemoOff@start 0052                                    initArrays@i 005B  
                           ??_translateShadows 0056      __end_of_EUSART_DefaultFramingErrorHandler 1801  
   __size_of_EUSART_DefaultFramingErrorHandler 0001            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 1800  
                   _EUSART_OverrunErrorHandler 00CD                   ??_IOCCF1_SetInterruptHandler 0053  
                                       ?_musik 0070                                     _SeqPresOff 1D7F  
                                       _ANSELA 018C                                         ?_putch 0070  
                                       _ANSELC 018E                                         _T1GCON 001C  
                                 ?_resetAndOff 0070                                         _RC1REG 0199  
                                       _RA4PPS 0E94                                         _RA5PPS 0E95  
                                       _RC1STA 019D                                         i1l1005 2234  
                      TMR1_WriteTimer@timerVal 0070                                         i1l1107 21D1  
                                       _RC4PPS 0EA4                                         i1l1116 21E8  
                                       i1l1070 25A1                                         i1l1305 24A4  
                                       i1l1065 1FFF                                         i1l1250 21A8  
                                       i1l1410 228C                                         i1l1402 1F3F  
                                       i1l1420 23F3                                         i1l1309 196C  
                                       i1l1317 24FF                                         i1l1085 1A10  
                                       i1l1326 2671                                         i1l1406 225F  
                                       i1l1423 20FC                                         i1l1415 2242  
                                       i1l1344 18B4                                         i1l1088 2323  
                                       i1l1177 2180                                         i1l1273 2194  
                                       i1l1433 2605                                         _ODCONA 028C  
                                       i1l1282 218A                                         i1l1426 20DB  
                            i1_dragonCrashTool 1F40                                         i1l1371 2386  
                                       i1l1347 18CD                                         _ODCONC 028E  
                                       i1l1436 20ED                                         i1l1189 22C9  
                                       i1l1294 2310                                         i1l1439 2104  
                                       i1l1376 2521                                         i1l1299 235D  
                                       i1l1396 1F38                                         i1l5031 2196  
                                       i1l5111 248A                                         i1l5033 219B  
                                       i1l5113 248D                                         i1l5041 2575  
                                       i1l5105 234C                                         i1l5115 2499  
                                       i1l5051 2589                                         i1l5107 2353  
                                       i1l5035 20D4                                         i1l5131 1930  
                                       i1l5123 191F                                         i1l5117 249D  
                                       i1l5061 259A                                         i1l5053 258D  
                                       i1l5109 2357                                         i1l5037 2228  
                                       i1l5141 1944                                         i1l5133 1934  
                                       i1l5125 1925                                         i1l5301 25E1  
                                       i1l5063 259D                                         i1l5055 2593  
                                       i1l5047 2577                                         i1l5071 21E4  
                                       i1l5039 222F                                         i1l5151 1958  
                                       i1l5143 1948                                         i1l5135 1938  
                                       i1l5127 1929                                         i1l5303 25E6  
                                       i1l5311 25F6                                         i1l5073 2178  
                                       i1l5321 2100                                         i1l5057 2598  
                                       i1l5049 2586                                         i1l5065 21C8  
                                       i1l5081 22C3                                         i1l5161 1964  
                                       i1l5153 1959                                         i1l5145 194C  
                                       i1l5137 193C                                         i1l5129 192D  
                                       i1l5305 25EA                                         i1l5313 25FB  
                                       i1l7001 1ED6                                         i1l6051 20CC  
                                       i1l5075 217B                                         i1l5091 218C  
                                       i1l5059 2599                                         i1l5067 21CD  
                                       i1l5083 22C4                                         i1l5163 1969  
                                       i1l5155 195A                                         i1l5147 1955  
                                       i1l5139 1940                                         i1l5315 25FF  
                                       i1l5307 25EE                                         i1l7011 1EEC  
                                       i1l7003 1ED8                                         i1l5093 218F  
                                       i1l5165 20E9                                         i1l5069 21DE  
                                       i1l5085 22C5                                         i1l5077 22BB  
                                       i1l5157 195C                                         i1l5149 1957  
                                       i1l5317 2601                                         i1l5309 25F1  
                                       i1l6061 22D4                                         i1l6053 22CA  
                                       i1l7021 1F09                                         i1l7013 1EF2  
                                       i1l7005 1EDF                                         i1l5095 2182  
                                       i1l5503 20F5                                         i1l5319 20FE  
                                       i1l5087 21A0                                         i1l5079 22BE  
                                       i1l5159 1961                                         i1l5511 23E6  
                                       i1l5271 24F6                                         i1l5263 24E0  
                                       i1l6055 22CF                                         i1l6063 22D6  
                                       i1l7031 1F2B                                         i1l7023 1F12  
                                       i1l7015 1EF6                                         i1l7007 1EE5  
                                       i1l6049 20D0                                         i1l5097 2185  
                                       i1l5281 2654                                         i1l5089 21A3  
                                       i1l5513 23EB                                         i1l5265 24E6  
                                       i1l5273 24FB                                         i1l5505 20D8  
                                       i1l6065 22D8                                         i1l6057 22D0  
                                       i1l7033 1F2F                                         i1l7025 1F18  
                                       i1l7017 1EFF                                         i1l7009 1EE6  
                                       i1l5531 246E                                         i1l5291 2669  
                                       i1l5283 2658                                         i1l5275 2639  
                                       i1l5099 234A                                         i1l5515 23EF  
                                       i1l5507 23DD                                         i1l5267 24EB  
                                       i1l6059 22D2                                         i1l7027 1F1C  
                                       i1l7019 1F05                                         i1l7035 1F38  
                                       i1l5533 2479                                         i1l5293 266F  
                                       i1l5277 263F                                         i1l5285 265B  
                                       i1l4901 1584                                         i1l5509 23E2  
                                       i1l5269 24F1                                         i1l7037 1F3D  
                                       i1l7029 1F25                                         i1l5535 247D  
                                       i1l5287 2660                                         i1l5279 264E  
                                       i1l4911 15B6                                         i1l4903 158E  
                                       i1l5295 25D5                                         i1l7071 001D  
                                       i1l7063 0006                                         i1l5537 2483  
                                       i1l5289 2665                                         i1l4913 15C0  
                                       i1l4905 1598                                         i1l5297 25DA  
                                       i1l7081 003E                                         i1l7073 0022  
                                       i1l7065 000B                                         i1l5539 2484  
                                       i1l4923 15E8                                         i1l4915 15CA  
                                       i1l4907 15A2                                         i1l5299 25DE  
                                       i1l7075 002B                                         i1l7067 0010  
                                       i1l4917 15D4                                         i1l4909 15AC  
                                       i1l4925 1649                                         i1l4861 14C6  
                                       i1l4941 1F8E                                         i1l6701 1899  
                                       i1l7077 0030                                         i1l7069 0018  
                                       i1l4919 15DE                                         i1l4871 14EF  
                                       i1l4863 14C9                                         i1l4927 164D  
                                       i1l4935 22FF                                         i1l4951 1FC6  
                                       i1l4943 1F94                                         i1l6703 18A0  
                                       i1l6711 18C3                                         i1l7079 0039  
                                       i1l4929 1658                                         i1l4881 1521  
                                       i1l4873 14F9                                         i1l4865 14D2  
                                       i1l4937 2308                                         i1l4953 1FD9  
                                       i1l4945 1FA7                                         i1l6801 242B  
                                       i1l6721 237D                                         i1l6713 18C9  
                                       i1l6705 18A5                                         i1l5851 2257  
                                       i1l4891 1552                                         i1l4883 152B  
                                       i1l4875 1503                                         i1l4867 14DC  
                                       i1l4955 1FDF                                         i1l4947 1FAD  
                                       i1l4939 1F40                                         i1l6803 2430  
                                       i1l6731 250B                                         i1l6723 2383  
                                       i1l6715 18CB                                         i1l6707 18AB  
                                       i1l4893 155C                                         i1l4885 1535  
                                       i1l4877 150D                                         i1l4869 14E6  
                                       i1l4949 1FC0                                         i1l5861 223F  
                                       i1l5853 227E                                         i1l6805 2433  
                                       i1l6733 2510                                         i1l6725 2384  
                                       i1l6717 2372                                         i1l6709 18BE  
                                       i1l4895 1566                                         i1l4887 153F  
                                       i1l4879 1517                                         i1l5855 2284  
                                       i1l6807 2438                                         i1l6735 2516  
                                       i1l6727 2500                                         i1l6831 23B1  
                                       i1l6719 2379                                         i1l5849 2251  
                                       i1l5953 2260                                         i1l4897 1570  
                                       i1l4889 1548                                         i1l5857 2235  
                                       i1l5961 2276                                         i1l6737 251F  
                                       i1l6729 2506                                         i1l6833 23B3  
                                       i1l6825 229C                                         i1l5881 19C4  
                                       i1l6841 26F3                                         i1l5955 2267  
                                       i1l4899 157A                                         i1l5859 223B  
                                       i1l5963 227B                                         i1l6835 23BA  
                                       i1l6827 229E                                         i1l6691 1883  
                                       i1l5891 19F8                                         i1l5883 19C8  
                                       i1l6771 231D                                         i1l6851 2711  
                                       i1l6843 26F8                                         i1l5957 226C  
                                       i1l5965 228D                                         i1l6837 23C1  
                                       i1l6829 22A5                                         i1l6693 1889  
                                       i1l5893 1A04                                         i1l5885 19D4  
                                       i1l5877 19BE                                         i1l6853 2717  
                                       i1l6845 26FF                                         i1l5959 226F  
                                       i1l5967 2294                                         i1l6695 188F  
                                       i1l5887 19E0                                         i1l5879 19BF  
                                       i1l6767 2313                                         i1l6855 2722  
                                       i1l6847 2705                                         i1l6839 26EC  
                                       u400_20 19C4                                         i1l5969 2299  
                                       i1l6697 1891                                         i1l5889 19EC  
                                       u400_21 19C3                                         i1l6769 2319  
                                       i1l6857 2729                                         i1l6849 270A  
                                       _INLVLA 038C                                         i1l6699 1894  
                                       _INLVLC 038E                                         i1l6797 2423  
                                       i1l6981 1E9F                                         i1l6973 1E88  
                                       i1l6799 2428                                         i1l6991 1EBA  
                                       i1l6983 1EA4                                         i1l6975 1E8E  
                                       u401_20 2267                                         u401_21 2266  
                                       i1l7953 15F0                                         i1l6993 1EC0  
                                       i1l6985 1EAA                                         i1l6977 1E94  
                                       i1l6995 1EC5                                         i1l6987 1EAF  
                                       i1l6979 1E99                                         i1l6997 1ECB  
                                       i1l6989 1EB5                                         i1l6999 1ED0  
                                       u402_20 2276                                         u402_21 2275  
                                       u331_20 219B                                         u403_20 2294  
                                       u331_21 219A                                         u403_21 2293  
                                       u332_20 2593                                         u340_20 24F1  
                                       u332_21 2592                                         u340_21 24F0  
                                       u341_20 263F                                         u333_20 235D  
                                       u405_20 22CF                                         u341_21 263E  
                                       u333_21 235C                                         u405_21 22CE  
                                       u342_20 2645                                         u334_20 24A4  
                                       u342_21 2643                                         u334_21 24A3  
                                       u343_20 2646                                         u335_20 1961  
                                       u335_21 1960                                         u344_20 2654  
                                       u360_20 23E2                                         u600_20 003E  
                                       u344_21 2653                                         u360_21 23E1  
                                       u600_21 003D                                         u361_20 2483  
                                       u345_20 2660                                         u329_20 1658  
                                       u361_21 2482                                         u345_21 265F  
                                       u329_21 1657                                         u346_20 2665  
                                       u338_20 24E6                                         u346_21 2664  
                                       u338_21 24E5                                         u347_20 266F  
                                       u339_20 24EB                                         u347_21 266E  
                                       u339_21 24EA                                         u348_20 25DA  
                                       u540_20 188F                                         u348_21 25D9  
                                       u540_21 188E                                         u349_20 25E6  
                                       u541_20 18A0                                         u349_21 25E5  
                                       u541_21 189F                                i1allBodyVal@val 007C  
                                       u542_20 18A5                                         u542_21 18A4  
                                       u543_20 18AB                                         u543_21 18AA  
                                       u544_20 18C9                                         u560_20 2722  
                                       u544_21 18C8                                         u560_21 2721  
                                       u553_20 2428                                         u545_20 2379  
                                       u553_21 2427                                         u545_21 2378  
                                       u554_20 2430                                         u546_20 2383  
                                       u554_21 242F                                         u546_21 2382  
                                       u395_20 2257                                         u555_20 2438  
                                       u547_20 2506                                         u539_20 1889  
                                       u395_21 2256                                         u555_21 2437  
                                       u547_21 2505                                         u539_21 1888  
                                       u396_20 2284                                         u548_20 250B  
                                       u556_20 22A5                                         u580_20 1E9F  
                                       u396_21 2283                                         u548_21 250A  
                                       u556_21 22A4                                         u580_21 1E9E  
                                       _OSCFRQ 091F                                         u397_20 223B  
                                       u549_20 2516                                         u557_20 23C1  
                                       u581_20 1EAA                                         u397_21 223A  
                                       u549_21 2515                                         u557_21 23C0  
                                       u581_21 1EA9                                      ??i1_putch 0071  
                                       u590_20 1F2B                                         u582_20 1EB5  
                                       u558_20 26F8                                         u590_21 1F2A  
                                       u582_21 1EB4                                         u558_21 26F7  
                                       u583_20 1EC0                                         u559_20 270A  
                                       u583_21 1EBF                                         u559_21 2709  
                                       u584_20 1ECB                                         u592_20 000B  
                                       u584_21 1ECA                                         u592_21 000A  
                                       u585_20 1ED6                                         u593_20 0010  
                                       u585_21 1ED5                                         u593_21 000F  
                                       u586_20 1EE5                                         u594_20 0018  
                                       u586_21 1EE4                                         u594_21 0017  
                                       u587_20 1EF2                                         u579_20 1E94  
                                       u595_20 001D                                         u587_21 1EF1  
                                       u579_21 1E93                                         u595_21 001C  
                                       u588_20 1F05                                         u596_20 0022  
                                       u588_21 1F04                                         u596_21 0021  
                                       u589_20 1F18                                         u597_20 002B  
                                       u589_21 1F17                                         u597_21 002A  
                                       u598_20 0030                                         u598_21 002F  
                                       u599_20 0039                                         u599_21 0038  
                                       _TX1REG 019A                                         _WDTCON 0097  
                                       _TX1STA 019E                                         _BackUL 01D3  
                                       _BackUM 01CD                                         _BackUR 01D0  
                           ?i1_dragonCrashTool 0070                                    ?i1_waitX0ms 0070  
                     __size_of_dragonCrashTool 00E9                                         _NeckBL 01C2  
                                       _NeckBR 00B0                              __end_of_SPI2_Open 1BCE  
                    __end_of_SPI2_ExchangeByte 2227                               __end_of_crashOn2 24E0  
                         __size_of_dragonCrash 0057                                    ?i1_rstRefri 0070  
         __end_of_TMR1_DefaultInterruptHandler 0003          __size_of_TMR1_DefaultInterruptHandler 0001  
                 _TMR1_DefaultInterruptHandler 0002                                    ?i1_rstMusik 0070  
                                       ___bmul 23C7                            ??i1_dragonCrashTool 0079  
                             __end_of_dotStart 22FE                          __size_ofi1_rstDemoOff 000A  
                                  _NeckBRcolor 00AC                             __size_of_SeqPresOn 007A  
                       __end_of_execMask_Sword 2500                                         _genVal 0035  
                                       _maskOn 1ABF                               __end_of_initStop 2672  
                        __size_ofi1_rstMaskOff 000C                                         _merger 00EA  
                                 i1_sendOrderX 20D4                                         _waiter 0048  
                             __end_of_seqApply 127C                                         _rstSeq 239C  
          __size_of_IOCCF1_SetInterruptHandler 0009                                    merger@accum 026E  
                                    ??_maskOff 0056                          __size_ofi1_rstPressOn 000A  
                             __end_of_waitX0ms 2115                                 ??_mergeBridge1 0055  
                               ??_mergeBridge2 0055                                 _PMD_Initialize 2105  
                         __size_of_IOC_AN1_ISR 000F                           __size_of_IOC_AN2_ISR 000E  
                         __size_of_IOC_DI1_ISR 000F                          __size_of_demoEfectOff 006E  
                              ?_WDT_Initialize 0070                               __end_of_protExec 1882  
                                  i1waitX0ms@X 0071                                      ??_protRCV 0070  
                             __end_of_rstRefri 234A                             __size_of_pTMR1_ISR 0022  
                           __size_of_pTMR2_ISR 0015                               __end_of_rstMusik 22EC  
                               rstDragon@start 005D                      __end_ofi1_dragonCrashTool 2000  
     TMR1_SetInterruptHandler@InterruptHandler 0051       TMR2_SetInterruptHandler@InterruptHandler 0051  
   IOCCF3_SetInterruptHandler@InterruptHandler 0051     IOCCF2_SetInterruptHandler@InterruptHandler 0051  
   IOCCF1_SetInterruptHandler@InterruptHandler 0051                               ?_PIN_MANAGER_IOC 0070  
                      __end_of_TMR1_WriteTimer 22DB                                   ??_IOCCF1_ISR 0072  
                                 ??_IOCCF2_ISR 007E                                   ??_IOCCF3_ISR 0072  
                             ?_TMR1_Initialize 0070                              _SYSTEM_Initialize 2455  
                      __end_of__initialization 00E6                                   i1_rstDemoOff 219F  
                           ?_SYSTEM_Initialize 0070                                   i1_rstMaskOff 21DD  
                          ___bmul@multiplicand 0051                                  ?_seqByZone_On 0051  
                   __end_of_spi2_configuration 281C                                 __pcstackCOMMON 0070  
                               _SPI2_ReadBlock 0000                                   __pidataBANK0 07FF  
                                 __pidataBANK1 2115                                   __pidataBANK2 07FD  
                                 __pidataBANK3 20E4                                   __pidataBANK5 240B  
                                 __pidataBANK6 26AD                                  rstRefri@start 005F  
                          ??_SYSTEM_Initialize 0053                                      ?_TMR1_ISR 0070  
                                 i1_rstPressOn 218B                                      ?_TMR2_ISR 0070  
                ?_TMR1_DefaultInterruptHandler 0070                                ?_execMask_Sword 0070  
                                 ?_rstPressOff 0070                             _SPI2_ExchangeBlock 0000  
                                __end_of_musik 078D                                  __end_of_putch 20F5  
                                 _demoEfectOff 1CA2                               ?_TMR2_Initialize 0070  
                             i1_changeDemoMode 23DD                         __end_of_PMD_Initialize 210D  
                           __end_of_IOCCF1_ISR 226F                             __end_of_IOCCF2_ISR 227E  
                           __end_of_IOCCF3_ISR 229C                         i1refriShoulderTool@col 007C  
                          __size_ofi1_waitX0ms 0008                           __size_of_mergeGroup1 006A  
                         __size_of_mergeGroup2 006A                                  i1allBodyVal@i 007D  
                         _eusartRxStatusBuffer 01B2                             __size_of_crashOff3 002D  
                                   _allBodyVal 24A5                                      ?i1_rstSeq 0070  
                            i1rstMaskOff@start 0071                ??_EUSART_SetOverrunErrorHandler 0053  
                  ?_IOCCF3_SetInterruptHandler 0051                                mergeGroup1@size 005E  
                          __size_ofi1_rstRefri 0013                                mergeGroup2@size 005E  
                          __size_ofi1_rstMusik 0010                      __end_of_SYSTEM_Initialize 246E  
                           __size_of_butt1Pres 0008                             __size_of_butt2Pres 0004  
                           __size_of_butt3Pres 0033                              __end_of_SeqPresOn 1084  
                                  ?_SeqPresOff 0070                                        ??_musik 0056  
                                      ??_putch 0052                              ??_SPI2_Initialize 0051  
                                   __pbssBANK0 0020                                     __pbssBANK1 00A0  
                                   __pbssBANK2 0120                                     __pbssBANK3 01A0  
                                   __pbssBANK4 0220                                     __pbssBANK5 02A0  
                                   __pbssBANK7 03A0                           __end_of_EUSART_Write 21B3  
                                ?_sendOrderDot 0070                                     _defaultLum 00ED  
                                  pRC1_ISR@cha 0050                    __size_of_EUSART_Receive_ISR 0041  
                           __size_of_val2group 019E         __end_of_IOCCF2_DefaultInterruptHandler 0801  
      __size_of_IOCCF2_DefaultInterruptHandler 0001                 _IOCCF2_DefaultInterruptHandler 0800  
                      _IOCCF3_InterruptHandler 01E3                                     _delaysDemo 033D  
                               ??_seqByZone_On 0053                                      ?_pRC1_ISR 0070  
                                   _deltaCrash 00EF                     __size_of_SPI2_ExchangeByte 000D  
                                   _flagDemoOn 0043                                     __pmaintext 078D  
                                      ?___bmul 0051                              __end_of_pTMR1_ISR 2522  
                            __end_of_pTMR2_ISR 2387                                   ?i1_butt3Pres 0070  
                                   ??_TMR1_ISR 0072                                     ??_TMR2_ISR 0071  
                               _SPI2_WriteByte 0000                                     _despShadow 13A0  
                                   __pintentry 0004                              ??_dragonCrashTool 005A  
                           __size_of_secuences 0095                                        ?_maskOn 0070  
                                      ?_merger 0070                   ??_EUSART_DefaultErrorHandler 0071  
                       __size_ofi1_resetAndOff 0050                                ?_PMD_Initialize 0070  
                                      ?_rstSeq 0070                                 rstMaskOn@start 0052  
                        i1applyColor@intensity 0076                                   ?i1_val2group 0070  
                         __size_of_sendDotStar 0025                                  _eusartRxCount 004A  
                                rstMusik@start 0052                             __size_of_rstDemoOn 000B  
                         refriShoulderTool@col 005D                                        _SP1BRGH 019C  
                             ??_changeDemoMode 0061                                        _SP1BRGL 019B  
                           __size_of_rstDragon 0031                                     _applyColor 235E  
                                      _OSCCON1 0919                                        _OSCCON3 091B  
                           __size_of_rstMaskOn 000E                                     ??i1_rstSeq 0070  
                __size_of_EUSART_RxDataHandler 001B                           __size_of_sendOrderXs 0009  
           __end_of_IOCCF1_SetInterruptHandler 214A                     _IOCCF1_SetInterruptHandler 2141  
                                      _OSCTUNE 091E                             __size_of_rstShadow 000F  
                                      _SSP2ADD 021A                                        _SLRCONA 030C  
                                      _SLRCONC 030E                                        _SSP2BUF 0219  
                   __size_ofi1_dragonCrashTool 00C0                                   _flagPressOff 00E2  
                                    ?_crashOn2 0070                       ??_EUSART_SetErrorHandler 0053  
                       __size_of_seqByZone_Off 003B               ??_IOCCF3_DefaultInterruptHandler 0070  
              ?_IOCCF3_DefaultInterruptHandler 0070                               ?_TMR1_WriteTimer 0070  
                                    ?_dotStart 0070                                   i1val2group@i 0074  
                               ??_sendOrderDot 0056                               i1rstDemoOn@start 0071  
                                      i1_putch 20E8                                     _firstDelay 016E  
                                    ?_initStop 0070                           __size_of_resetAndOff 0050  
                                   _indexCrash 003D                                        _MaskSeq 0120  
                                    ?_seqApply 0070                                     _packTotals 00EB  
                                 ?i1_rstDemoOn 0070                                     _indexRefri 00D9  
                         __end_of_mergeBridge1 276F                           __end_of_mergeBridge2 0844  
                                 ?i1_rstDragon 0070                                     ??_pRC1_ISR 004F  
                                      _SeqVals 00A0            __size_of_EUSART_DefaultErrorHandler 0004  
                                 ?i1_rstMaskOn 0070                                      ?_waitX0ms 0070  
                            __end_of_crashOff3 2574                     ??_TMR2_SetInterruptHandler 0053  
                                 ?i1_rstShadow 0070                                     _initArrays 27B7  
                                sendOrderDot@i 005E                                __size_of___bmul 0016  
                                    ?_protExec 0070                                      ?_rstRefri 0070  
                            __end_of_butt1Pres 20FD                              __end_of_butt2Pres 20DC  
                            __end_of_butt3Pres 2639                                      ?_rstMusik 0070  
                            seqByZone_Off@time 0051                                  ?_valfromGroup 0070  
                                 mergeGroup1@i 0061                                   mergeGroup2@i 0061  
                          __size_of_SeqPresOff 0074                                __size_of_maskOn 005A  
                              __size_of_merger 03EA                                        __ptext1 1DF3  
                                      __ptext2 216E                                        __ptext3 0C5C  
                                      __ptext4 2522                                        __ptext5 22EC  
                                      __ptext6 221A                                        __ptext7 00EA  
                                      __ptext8 1C38                                        __ptext9 1BCE  
                              i1rstRefri@start 004D                                __size_of_rstSeq 0015  
               ??_TMR1_DefaultInterruptHandler 0070                                      _T1CONbits 001B  
                                      _maskOff 0844                                        _minCont 01E1  
                        _OSCILLATOR_Initialize 21E9                                        _secCont 01C6  
                                    _T2CONbits 001F                        __size_ofi1_EUSART_Write 000A  
                                   _groupColor 03A0                              __end_of_val2group 1800  
                                      _valBip1 0022                                        _valBip2 0020  
                           mergeGroup1@groupID 0060                                applyColor@color 0056  
            __size_of_TMR1_SetInterruptHandler 0009                                     _groupValue 03BD  
                              rstPressOn@start 0052                                applyColor@group 0059  
                                  ?_allBodyVal 005A                       ??_PIN_MANAGER_Initialize 0053  
                    ?_TMR1_SetInterruptHandler 0051                                      _IOCCFbits 0399  
                                      _noteNum 0037                             mergeGroup2@groupID 0060  
                                 val2group@val 0051                                      _IOCCNbits 0398  
                                    _IOCCPbits 0397                                        _protRCV 1882  
                                ??_demoEfectOn 005F                                     ??_crashOn2 0051  
                   __size_of_SYSTEM_Initialize 0019                                        clrloop0 21F6  
                                   ??_dotStart 0052                         __size_of_refriShoulder 006F  
                         end_of_initialization 00E6                                     _timDemoOff 002A  
                                   _sendOrderX 20E0                              __end_of_secuences 1E88  
        __end_of_EUSART_SetOverrunErrorHandler 2138         __size_of_EUSART_SetOverrunErrorHandler 0009  
                _EUSART_SetOverrunErrorHandler 212F                         __size_ofi1_rstPressOff 000A  
                                i1_resetAndOff 191D                                        merger@i 026C  
                                      init_ram 2201                                     ??_initStop 0072  
                                      initloop 2202                    __end_ofi1_refriShoulderTool 1A11  
                                 ??i1_waitX0ms 0070                              __end_of_spiMaster 2814  
                                   ??_seqApply 0056                              _EUSART_Initialize 1802  
                    __size_of_translateShadows 0124                              __end_of_rstDemoOn 21DD  
                                   _timPresOff 002C                                     ??_waitX0ms 0051  
                                 ??i1_rstRefri 007D                              __end_of_rstDragon 25D3  
                           ?_EUSART_Initialize 0070                                   ??i1_rstMusik 0070  
                            __end_of_rstMaskOn 2251                              __end_of_rstShadow 22BA  
                                _seqByZone_Off 2672                                     ??_protExec 0051  
                                      rstSeq@i 0052                                 ??_valfromGroup 0051  
                                  ?_despShadow 0070                                     ??_rstRefri 005E  
                                   ??_rstMusik 0051                                   _dotTestColor 00E8  
                                    _SPI2_Open 1B73                            ??_EUSART_Initialize 0053  
                             ??_WDT_Initialize 0051                                     _rstDemoOff 21B3  
                                    _PORTCbits 000E                           __size_of_rstPressOff 000A  
                                   _runMaskOff 0042                                     _rstMaskOff 220D  
                           __end_ofi1_waitX0ms 2105                                    ?_applyColor 0056  
                                    _TRISAbits 008C                          __size_of_EUSART_Write 000A  
                          valfromGroup@groupID 0053                           __end_of_seqByZone_On 27B7  
                                   _rstPressOn 1000                   ??_IOCCF2_SetInterruptHandler 0053  
                               i1val2group@val 0070                                     _soundASOff 00E4  
                           __end_ofi1_rstRefri 2324                                i1rstMusik@start 0071  
              __size_of_EUSART_SetErrorHandler 0009                                   _MASTER0_open 0000  
                           __end_ofi1_rstMusik 22CA                                  maskOff@i_1381 005B  
                                maskOff@i_1379 005A                                 ?i1_resetAndOff 0070  
                     __end_ofi1_changeDemoMode 23F4                                 _subContMaskOff 0040  
                    __end_of_EUSART_Initialize 1838                                  ??_dragonCrash 005F  
                          __end_of_demoEfectOn 1A68                               ??_execMask_Sword 0072  
                             i1rstDragon@start 007C                                   i1rstDragon@i 007D  
                                  ?_initArrays 0070                                 ?_seqByZone_Off 0051  
                          __size_of_allBodyVal 001D           __end_of_TMR2_DefaultInterruptHandler 0004  
        __size_of_TMR2_DefaultInterruptHandler 0001                   _TMR2_DefaultInterruptHandler 0003  
                                _refriShoulder 1D10                                 __end_of___bmul 23DD  
                                   ?_SPI2_Open 0070             __end_of_EUSART_DefaultErrorHandler 20D0  
                   _EUSART_DefaultErrorHandler 20CC                                  i1_rstPressOff 2181  
                         __size_ofi1_butt3Pres 0033                                  ??_IOC_AN1_ISR 0072  
                         __end_of_sendOrderDot 1000                                  ??_IOC_AN2_ISR 007E  
                                ??_IOC_DI1_ISR 0072                               resetAndOff@light 005F  
                                 _EUSART_Write 21A9                              __size_of_TMR1_ISR 0016  
                            __size_of_TMR2_ISR 000F                                 __end_of_maskOn 1B19  
                       ?_OSCILLATOR_Initialize 0070                                 __end_of_merger 04D4  
          __size_of_IOCCF2_SetInterruptHandler 0009                                _SPI2_Initialize 2387  
                               __end_of_rstSeq 23B1                             _spi2_configuration 2814  
                          start_initialization 0049                           __size_ofi1_val2group 019D  
                                 _indexMaskOff 0041                __size_of_PIN_MANAGER_Initialize 004F  
                                    i1rstSeq@i 0071                                 rstShadow@start 0052  
 EUSART_SetRxInterruptHandler@interruptHandler 0051                                   ??_SeqPresOff 0060  
                            __size_ofi1_rstSeq 0014                                    ?_sendOrderX 0070  
                          __size_of_despShadow 0125                          __size_of_mergeBridge1 0042  
                        __size_of_mergeBridge2 0042                                 butt1Pres@state 0070  
                              _dragonCrashDone 00DB                                      _SeqPresOn 100A  
                              _dragonCrashTool 1084                       __size_of_PIN_MANAGER_IOC 0019  
               ?_EUSART_SetOverrunErrorHandler 0051                                  ?i1_allBodyVal 0079  
                     __size_of_TMR1_Initialize 0019                           __size_ofi1_rstDemoOn 000A  
                               butt2Pres@state 0070                            __size_of_applyColor 0014  
                             mergeGroup1@accum 0055                     _EUSART_FramingErrorHandler 00CF  
                                     ??___bmul 0052                               ??_PMD_Initialize 0051  
                             mergeGroup2@accum 0055                           __size_ofi1_rstDragon 002E  
                               ?_refriShoulder 0070                         _EUSART_SetErrorHandler 211D  
                          __end_of_dragonCrash 1ABF                              __size_of_pRC1_ISR 00B8  
                         __size_ofi1_rstMaskOn 000B                                     val2group@i 0055  
                         __size_ofi1_rstShadow 000E                                    __pdataBANK0 006B  
                                  __pdataBANK1 00E8                                    __pdataBANK2 016E  
                                  __pdataBANK3 01E9                                    __pdataBANK5 02D3  
                                  __pdataBANK6 0320                                 ?i1_rstPressOff 0070  
                                     ??_maskOn 0056                                       ??_merger 0063  
                ?_TMR2_DefaultInterruptHandler 0070                                      _pTMR1_ISR 2500  
                                ??_mergeGroup1 0057                                  ??_mergeGroup2 0057  
                                    _pTMR2_ISR 2372                             __end_of_SeqPresOff 1DF3  
                                  ?_rstDemoOff 0070                                       ??_rstSeq 0051  
                        SPI2_ExchangeByte@data 0051                                 butt3Pres@state 0060  
                               i1_EUSART_Write 2195                                    __pbssBIGRAM 269C  
                                  ?_rstMaskOff 0070                                   _mergeBridge1 272D  
                                 _mergeBridge2 0802                                      ___latbits 0003  
                                __pcstackBANK0 004D                                  __pcstackBANK4 026C  
                          __end_of_IOC_AN1_ISR 228D                            __end_of_IOC_AN2_ISR 2243  
                          __end_of_IOC_DI1_ISR 2260                       __size_of_TMR2_Initialize 0013  
                                _SPI2_ReadByte 0000                    ?_IOCCF1_SetInterruptHandler 0051  
                          __size_of_initArrays 0049                                ??i1_resetAndOff 007E  
                                  ?_rstPressOn 0070                                    _demoEfectOn 1A11  
                         __end_of_valfromGroup 0C5C                     __end_of_EUSART_Receive_ISR 272D  
                            __size_of_crashOn2 001E                                       ?i1_putch 0070  
                   __size_of_EUSART_Initialize 0036                               i1rstMaskOn@start 0071  
                            __size_of_dotStart 0012               _EUSART_RxDefaultInterruptHandler 00D1  
                                   ?_SeqPresOn 0070                                      __pnvBANK3 01E3  
                             _translateShadows 127C                              mergeBridge1@accum 0053  
                            mergeBridge1@cantB 0051                                   sendDotStar@b 0053  
                                 sendDotStar@g 0052                                   sendDotStar@r 0055  
                            mergeBridge2@accum 0053                              mergeBridge2@cantB 0051  
                              ??_seqByZone_Off 0053                                 ??i1_allBodyVal 007A  
                            __size_of_initStop 0039                   __end_of_EUSART_RxDataHandler 2489  
                       _PIN_MANAGER_Initialize 18CE                                  ?i1_applyColor 0075  
                                    _delaysOff 02D3                                    _flagDemoOff 00E1  
                            __size_of_seqApply 010F         __end_of_IOCCF3_DefaultInterruptHandler 0802  
      __size_of_IOCCF3_DefaultInterruptHandler 0001                 _IOCCF3_DefaultInterruptHandler 0801  
             __end_of_TMR1_SetInterruptHandler 2165                        __end_of_SPI2_Initialize 239C  
                            _refriShoulderDone 00D8                                      __ptext100 2227  
                                    __ptext101 234A                                      __ptext110 14C5  
                                    __ptext102 22BA                                      __ptext111 2260  
                                    __ptext103 21C7                                      __ptext120 2181  
                                    __ptext112 1801                                      __ptext104 21DD  
                                    __ptext121 2177                                      __ptext113 2251  
                                    __ptext105 2574                                      __ptext122 20D0  
                                    __ptext114 20FD                                      __ptext106 1F40  
                                    __ptext123 1800                                      __ptext115 20F5  
                                    __ptext107 219F                                      __ptext124 20CC  
                                    __ptext116 20E8                                      __ptext108 2489  
                                    __ptext125 246E                                      __ptext117 2195  
                                    __ptext109 22FE                                      __ptext118 2639  
                                    __ptext119 218B                              __size_of_waitX0ms 0008  
                            _refriShoulderTool 1B19                                    ??_SPI2_Open 0051  
                                    _dotColor1 26F1                                      _dotColor2 269C  
                                 _eusartRxHead 004C                                      _crashOff3 2547  
                                ??_sendDotStar 0054                                   _eusartRxTail 004B  
                              _SPI2_WriteBlock 0000               SPI2_Open@spi2UniqueConfiguration 0054  
                          refriShoulderTool@on 005C                                      _contCrash 00BB  
                            __size_of_protExec 004A                         __end_ofi1_EUSART_Write 219F  
                           ?_refriShoulderTool 0070                                     ?_pTMR1_ISR 0070  
                                   ?_pTMR2_ISR 0070                   ??_INTERRUPT_InterruptManager 007E  
                          __size_of_sendOrderX 0004                                      _dotValue1 279B  
                                    _dotValue2 2746                                      _contRefri 0026  
                            __size_of_rstRefri 0013                                    _flagPressOn 00E3  
                            __size_of_rstMusik 0011                          __size_of_seqByZone_On 0048  
                                    _butt1Pres 20F5                                      _butt2Pres 20D8  
                                    _butt3Pres 2606                                  ??_sendOrderXs 006A  
                                     _BAUD1CON 019F               ??_IOCCF1_DefaultInterruptHandler 0070  
              ?_IOCCF1_DefaultInterruptHandler 0070                                       ?_maskOff 0070  
                                 ??_allBodyVal 005B                            ??_refriShoulderTool 005A  
                                     ?_protRCV 0070             __end_of_IOCCF2_SetInterruptHandler 2153  
                   _IOCCF2_SetInterruptHandler 214A                            __end_of_mergeGroup1 1C38  
                          __end_of_mergeGroup2 1CA2                        __end_of_dragonCrashTool 116D  
                             seqByZone_Off@num 0057                               seqByZone_On@time 0051  
                                    _val2group 1662                                rstMaskOff@start 0052  
                                ??_resetAndOff 005F                                 __size_of_musik 02B9  
                         i1EUSART_Write@txData 0070                                 __size_of_putch 0007  
                                    _groupCant 006B                                      _groupBuff 01A0  
                               _eusartRxBuffer 02CB                                      _groupSize 0320  
                                    _seqMaskOn 0355         EUSART_SetErrorHandler@interruptHandler 0051  
                                 _seqDeltasOff 02DF                                      _timDemoOn 00C5  
                                    _sendOrder 00D4                            __size_of_rstDemoOff 000A  
                                    clear_ram0 21F5                                    _dragonCrash 1A68  
                                  _dragonArray 0147                                    _dragonColor 00DC  
                                     _PIE0bits 0090                                       _PIE1bits 0091  
                                    _secuences 1DF3                              _eusartRxLastError 00E7  
                            i1allBodyVal@color 0079                                 ??i1_applyColor 0077  
                     __size_of_TMR1_WriteTimer 0011            __size_of_INTERRUPT_InterruptManager 0043  
                              ??_refriShoulder 0060                                       _PIR0bits 0010  
                                    _timPresOn 002E                            __size_of_rstMaskOff 000D  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0053  
                           i1resetAndOff@light 004D                                       _PIR2bits 0012  
                    __end_of_refriShoulderTool 1B73                          __size_of_sendOrderDot 03A4  
                                    _spiMaster 2800                                   _seqByZone_On 276F  
                              ??i1_rstPressOff 0070                             __end_of_allBodyVal 24C2  
                                     _SSP2CON1 021D                                       _SSP2CON2 021E  
    __end_of_EUSART_DefaultOverrunErrorHandler 20D4     __size_of_EUSART_DefaultOverrunErrorHandler 0004  
                                 ??_despShadow 0059            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 20D0  
                                     _TMR1_ISR 23B1                                       _TMR2_ISR 229C  
                                     _SSP2STAT 021C                                      _rstDemoOn 21D2  
                          __size_of_rstPressOn 000A                              ??_PIN_MANAGER_IOC 007E  
                                   protRCV@rcv 0071                                     ?_crashOff3 0070  
                                    _runMaskOn 00DF                                      _rstDragon 25A2  
                                ?i1_sendOrderX 0070                                      _rstMaskOn 2243  
                                    _runShadow 003F                                ?i1_EUSART_Write 0070  
                                    _rstShadow 22AB                              ??_TMR1_Initialize 0053  
                                  _IOC_AN1_ISR 227E                                    _IOC_AN2_ISR 2235  
                                  _IOC_DI1_ISR 2251                                      _soundASOn 00E5  
                                   ?_butt1Pres 0070                                     ?_butt2Pres 0070  
                                   ?_butt3Pres 0070                                _modoPress_nDemo 0046  
                                    _stepsNote 0039                                    allBodyVal@i 005E  
                            i1rstDemoOff@start 0071                                  _subContShadow 00DE  
               ??_TMR2_DefaultInterruptHandler 0070              __size_of_TMR2_SetInterruptHandler 0009  
                                 ??_applyColor 0058                            __end_of_sendDotStar 2547  
                                   rstDragon@i 005E                                      dotStart@i 0053  
                    ?_TMR2_SetInterruptHandler 0051                                       i1_rstSeq 234A  
                                   ?_val2group 0051                            __end_of_sendOrderXs 2177  
                           __end_of_despShadow 14C5                                    _indexMaskOn 00C3  
                                 _sendOrderDot 0C5C                              ??_TMR2_Initialize 0053  
                            ?i1_changeDemoMode 0070                                  ?i1_rstDemoOff 0070  
                                  _indexShadow 003E                                    ??_SeqPresOn 0058  
                      __size_of_changeDemoMode 0017                               __size_ofi1_putch 0006  
                                valfromGroup@i 0054                                  mergeBridge1@i 0059  
                                mergeBridge2@i 0059                                     ?_secuences 0070  
                           ??i1_changeDemoMode 007E                                  ?i1_rstMaskOff 0070  
                          __end_of_resetAndOff 19BD                                       _pRC1_ISR 1E88  
                                 ??_initArrays 005A                                    _fullBodyVal 0030  
                                     _ShouldBL 0162                                       _ShouldDL 0168  
                                     _ShouldBR 015F                                       _ShouldFL 00B4  
                                     _ShouldDR 0165                                       _ShouldFR 016B  
                                ?i1_rstPressOn 0070                             __end_of_applyColor 2372  
                             ?_SPI2_Initialize 0070                   __size_ofi1_refriShoulderTool 0054  
                                ??_rstPressOff 0051                        ??_OSCILLATOR_Initialize 0051  
                          _EUSART_ErrorHandler 00CB                                 ??i1_sendOrderX 0070  
                                   ?_rstDemoOn 0070                                     ?_rstDragon 0070  
                                ?_demoEfectOff 0070                    ?_EUSART_DefaultErrorHandler 0070  
                              _intensityCrash2 00B9                                     ?_rstMaskOn 0070  
                          translateShadows@sas 0057                                    ??_pTMR1_ISR 0070  
                                  ??_pTMR2_ISR 0070                                     ?_rstShadow 0070  
                     _TMR1_SetInterruptHandler 215C                                    _mergeGroup1 1BCE  
                                  _mergeGroup2 1C38                          _TMR1_InterruptHandler 00C7  
                             __size_of_maskOff 01F2                          __size_of_valfromGroup 0226  
                         __end_ofi1_allBodyVal 24A5                                       _delaysOn 0349  
                         _EUSART_RxDataHandler 246E                                       _dotCant1 01EB  
                                     _dotCant2 01E9                                       __ptext10 0A36  
                                     __ptext11 0802                                       __ptext20 1A68  
                                     __ptext12 272D                                       __ptext21 24C2  
                                     __ptext13 1D10                                     _T1GCONbits 001C  
                                     __ptext30 2672                                       __ptext22 2547  
                                     __ptext14 2337                                       __ptext31 116D  
                                     __ptext23 13A0                                       __ptext15 1B19  
                                     __ptext40 239C                                       __ptext32 1838  
                                     __ptext24 127C                                       __ptext16 04D4  
                                     __ptext41 1000                                       __ptext33 27B7  
                                     __ptext25 1A11                                       __ptext17 1ABF  
                                     __ptext50 24A5                                       __ptext42 21BD  
                                     __ptext34 23F4                                       __ptext26 1CA2  
                                     __ptext18 0844                                       __ptext51 235E  
                                     __ptext43 22DB                                       __ptext35 210D  
                                     __ptext27 100A                                       __ptext19 23C7  
                                     __ptext60 215C                                       __ptext52 1662  
                                     __ptext44 2243                                       __ptext36 2606  
                                     __ptext28 276F                                       __ptext61 2387  
                                     __ptext53 20EE                                       __ptext45 220D  
                                     __ptext37 196D                                       __ptext29 1D7F  
                                     __ptext70 212F                                       __ptext62 2105  
                                     __ptext54 21A9                                       __ptext46 25A2  
                                     __ptext38 20E0                                       __ptext71 2126  
                                     __ptext63 18CE                                       __ptext55 2455  
                                     __ptext47 1084                                       __ptext39 22AB  
                                     __ptext80 229C                                       __ptext72 211D  
                                     __ptext64 2153                                       __ptext56 20DC  
                                     __ptext48 21D2                                       __ptext81 0003  
                                     __ptext73 1B73                                       __ptext65 214A  
                                     __ptext57 2324                                       __ptext49 21B3  
                                     __ptext90 227E                                       __ptext82 2372  
                                     __ptext66 2141                                       __ptext58 2165  
                                     __ptext91 20D8                                       __ptext83 23B1  
                                     __ptext75 26EC                                       __ptext67 21E9  
                                     __ptext59 243C                                       __ptext92 24E0  
                                     __ptext84 0002                                       __ptext76 1E88  
                                     __ptext68 1802                                       __ptext93 226F  
                                     __ptext85 2500                                       __ptext77 2311  
                                     __ptext69 2138                                       __ptext94 0800  
                                     __ptext86 22CA                                       __ptext78 19BD  
                                     __ptext95 2235                                       __ptext87 2423  
                                     __ptext79 1882                                       __ptext96 23DD  
                                     __ptext88 228D                                       __ptext97 25D3  
                                     __ptext89 0801                                       __ptext98 191D  
                                     __ptext99 20D4                                       _crashOn2 24C2  
                             __size_of_protRCV 004C                               ?_dragonCrashTool 0070  
                 ??_IOCCF3_SetInterruptHandler 0053                             __end_of_initArrays 2800  
                                 _SSP2CON1bits 021D                                       _dotStart 22EC  
                                     _execChan 00D3                                   ??_sendOrderX 0051  
                                   _IOCCF1_ISR 2260                                     _IOCCF2_ISR 226F  
                                   _IOCCF3_ISR 228D                                       _maskIsOn 00E0  
                               ??i1_rstDemoOff 0070                                      waitX0ms@X 0052  
                                     _initStop 2639                                       _lightsOn 0044  
                              seqByZone_On@num 0057                                  __size_of_main 0070  
                               ??i1_rstMaskOff 0070                               rstPressOff@start 0052  
                                     _seqApply 116D                                    _seqDeltasOn 02E5  
                                     _valTempo 0024                        ?_EUSART_SetErrorHandler 0051  
                                     _waitX0ms 210D                                     _RC1STAbits 019D  
                   __size_of_refriShoulderTool 005A                                       _ritmCont 00B7  
                             i1rstShadow@start 0071  EUSART_SetOverrunErrorHandler@interruptHandler 0051  
                               ??i1_rstPressOn 0070                                  ??i1_butt3Pres 007E  
                                     _runCrash 00DD                                       _musikRun 003A  
                                     _protExec 1838                               despShadow@i_1341 005D  
                                     int$flags 007E                                       _runRefri 00DA  
                                     _rstRefri 2337                                 ??_demoEfectOff 0060  
                                     _rstMusik 22DB                                    ??_crashOff3 0051  
                                 _subContCrash 003C             __end_of_INTERRUPT_InterruptManager 0047  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 212F  
       __size_of_EUSART_SetFramingErrorHandler 0009                  _EUSART_SetFramingErrorHandler 2126  
                                 _valfromGroup 0A36                              ??_TMR1_WriteTimer 0072  
                                  _sendDotStar 2522                                   ??_rstDemoOff 0051  
                           __end_of_sendOrderX 20E4                                    ??_butt1Pres 0072  
                                ??i1_val2group 0071                                    ??_butt2Pres 0072  
          __size_of_IOCCF3_SetInterruptHandler 0009                                    ??_butt3Pres 0060  
                                     maskOff@i 0059                            applyColor@intensity 0057  
                                  _shadowArray 0220                       __end_of_translateShadows 13A0  
                                  _sendOrderXs 216E                                   ??_rstMaskOff 0051  
                          __end_of_rstPressOff 21C7                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0070                           __end_ofi1_applyColor 2311  
                                 ??_rstPressOn 0051                                    ??_val2group 0052  
                                 ?_demoEfectOn 0070                                 _intensityCrash 0028  
                               _intensityArray 0138                        __size_of_WDT_Initialize 0004  
                               _intensityRefri 003B                                       intlevel1 0000  
                                  _resetAndOff 196D                                    _noteOnTempo 0038  
                               _contTimMaskOff 00BF                               i1butt3Pres@state 004E  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 2126  
                                ??i1_rstDemoOn 0070                                    ??_secuences 006A  
                                ??i1_rstDragon 007B                             __end_of_rstDemoOff 21BD  
                                ??i1_rstMaskOn 0070           __end_of_EUSART_SetRxInterruptHandler 2141  
        __size_of_EUSART_SetRxInterruptHandler 0009                   _EUSART_SetRxInterruptHandler 2138  
                                ??i1_rstShadow 0070                                    despShadow@i 005C  
                           __end_of_rstMaskOff 221A                             _EUSART_Receive_ISR 26EC  
                             val2group@groupID 0054  EUSART_SetFramingErrorHandler@interruptHandler 0051  
                                  ??_rstDemoOn 0051                                    ??_rstDragon 005C  
                                  ??_rstMaskOn 0051                             __end_of_rstPressOn 100A  
                                     putch@val 0052                                    ??_rstShadow 0051  
                                __pstringtext1 2800                                  __pstringtext2 2814  
                      __size_of_execMask_Sword 0020                                     _SPI2_Close 0000  
                            translateShadows@i 0058                            __end_ofi1_butt3Pres 2606  
                          ?_EUSART_Receive_ISR 0070                                  _contTimMaskOn 00C1  
                                   _SSP2DATPPS 0E1E                                     _SSP2CLKPPS 0E1D  
                                _contTimShadow 00BD                                    _waitingTime 0049  
                  ?_IOCCF2_SetInterruptHandler 0051                                     _TX1STAbits 019E  
                          __end_ofi1_val2group 1662                             EUSART_Write@txData 0051  
                        __end_ofi1_resetAndOff 196D                                    ?_IOCCF1_ISR 0070  
                                  ?_IOCCF2_ISR 0070                           __end_ofi1_sendOrderX 20D8  
                                  ?_IOCCF3_ISR 0070                 __end_of_PIN_MANAGER_Initialize 191D  
                                _stepContPress 00D6         __end_of_IOCCF1_DefaultInterruptHandler 1802  
      __size_of_IOCCF1_DefaultInterruptHandler 0001                 _IOCCF1_DefaultInterruptHandler 1801  
                               _changeDemoMode 23F4                                _PIN_MANAGER_IOC 2423  
                         ??_EUSART_Receive_ISR 0071                                   _stepContDemo 00D7  
                                 ?_dragonCrash 0070                          _TMR2_InterruptHandler 00C9  
                                  crashOff3@ix 0052                        _IOCCF1_InterruptHandler 01E7  
                              _TMR1_Initialize 243C                               _DemoSwitchChange 00E6  
                        __end_of_seqByZone_Off 26AD  
